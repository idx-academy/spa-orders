13:56:45 (29475) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
13:56:45 (29475) WARN ProjectReader Glob pattern "!src/{assets,messages,services,test-utils,types}/**/*" did not exclude any files.
13:56:45 (29475) INFO ProjectReader No incremental result file found at stryker-config/stryker-incremental.json, a full mutation testing run will be performed.
13:56:45 (29475) INFO ProjectReader Found 6 of 26 file(s) to be mutated.
13:56:45 (29475) DEBUG ProjectReader All input files: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/.nvmrc",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/babel.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/index.html",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.esm.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/webpack.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package-lock.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/index.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.scss",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/en.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/es.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/index.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/tests/application.test.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker.conf.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json"
]
13:56:45 (29475) DEBUG ProjectReader Files to mutate: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx"
]
13:56:45 (29475) DEBUG TemporaryDirectory Using temp directory "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp"
13:56:45 (29475) DEBUG Instrumenter Instrumenting 6 source files with mutants
13:56:45 (29475) DEBUG Instrumenter Instrumented src/main.tsx (1 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/messages.ts (3 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/modules.tsx (0 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/pages/dashboard/dashboard.tsx (1 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/router.tsx (1 mutant(s))
13:56:46 (29475) DEBUG Instrumenter Instrumented src/shared/modules/application/application.tsx (1 mutant(s))
13:56:46 (29475) INFO Instrumenter Instrumented 6 source file(s) with 7 mutant(s)
13:56:46 (29475) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: '/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json',
  mutate: false
}
13:56:46 (29475) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
13:56:46 (29475) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 29476  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29476) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29476) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29475) DEBUG Sandbox Creating a sandbox for files in /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29475) DEBUG Sandbox Start symlink node_modules
13:56:47 (29475) DEBUG Sandbox Create symlink from /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/node_modules
13:56:47 (29475) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
13:56:47 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 29483  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 29484  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29483) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29483) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29484) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29484) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29483) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29484) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29483) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:47 (29484) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29483) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29484) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29483) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29484) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29483) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29484) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29475) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
13:56:48 (29475) DEBUG DryRunExecutor Using timeout of 1200000 ms.
13:56:48 (29475) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 29491  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 29492  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29483) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/main.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/messages.ts","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/modules.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/pages/dashboard/dashboard.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/router.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
13:56:48 (29491) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:48 (29492) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:48 (29492) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:48 (29491) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:48 (29491) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:48 (29492) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:48 (29492) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29491) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29492) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29491) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29492) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29491) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29492) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29491) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 29519  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 29520  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:49 (29520) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:49 (29520) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:49 (29519) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:49 (29519) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:49 (29520) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:49 (29519) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:49 (29520) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:49 (29519) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:49 (29520) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:49 (29519) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:49 (29520) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:49 (29520) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:49 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 29521  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:49 (29519) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:49 (29519) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:49 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 29522  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:50 (29522) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:50 (29522) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:50 (29521) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:50 (29521) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:50 (29522) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:50 (29521) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:50 (29522) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:50 (29521) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:50 (29521) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:50 (29522) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:50 (29521) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:50 (29521) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:50 (29522) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:50 (29522) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:51 (29475) INFO DryRunExecutor Initial test run succeeded. Ran 1 tests in 3 seconds (net 39 ms, overhead 3043 ms).
13:56:51 (29475) DEBUG ChildProcessProxy Disposing of worker process 29476
13:56:51 (29475) DEBUG TimeoutDecorator Starting timeout timer (603277 ms) for a test run
13:56:51 (29475) DEBUG ChildProcessProxy Kill 29476
13:56:51 (29484) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Application should render)"}
13:56:53 (29475) DEBUG ClearTextReporter [Killed] BlockStatement
13:56:53 (29475) DEBUG ClearTextReporter src/shared/modules/application/application.tsx:8:57
13:56:53 (29475) DEBUG ClearTextReporter -   const Application = ({ children }: ApplicationProps) => {
13:56:53 (29475) DEBUG ClearTextReporter -     return (
13:56:53 (29475) DEBUG ClearTextReporter -       <div className="application">
13:56:53 (29475) DEBUG ClearTextReporter -         <h1 className="application__header">Hello, React with Webpack!</h1>
13:56:53 (29475) DEBUG ClearTextReporter -         {children}
13:56:53 (29475) DEBUG ClearTextReporter -       </div>
13:56:53 (29475) DEBUG ClearTextReporter -     );
13:56:53 (29475) DEBUG ClearTextReporter -   };
13:56:53 (29475) DEBUG ClearTextReporter +   const Application = ({ children }: ApplicationProps) => {};
13:56:53 (29475) DEBUG ClearTextReporter Killed by: Application should render
13:56:53 (29475) DEBUG ClearTextReporter 
13:56:53 (29475) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
13:56:53 (29475) DEBUG JsonReporter Using relative path reports/stryker/stryker.json
13:56:53 (29475) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
13:56:53 (29475) INFO JsonReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.json
13:56:53 (29475) INFO HtmlReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.html
13:56:53 (29475) INFO MutationTestExecutor Done in 7 seconds.
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29483
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29484
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29492
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29491
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29519
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29522
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29520
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29521
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29483
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29484
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29519
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29491
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29492
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29522
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29521
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29520
13:56:53 (29475) DEBUG TemporaryDirectory Deleting stryker temp directory /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp
10:49:49 (6867) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
10:49:49 (6867) WARN ProjectReader Glob pattern "!src/{assets,messages,services,test-utils,types}/**/*" did not exclude any files.
10:49:49 (6867) INFO ProjectReader Found 6 of 26 file(s) to be mutated using incremental report with 7 mutant(s), and 1 test(s).
10:49:49 (6867) DEBUG ProjectReader All input files: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/.nvmrc",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/babel.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/index.html",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.esm.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/webpack.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package-lock.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/index.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.scss",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/en.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/es.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/index.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/tests/application.test.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker.conf.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json"
]
10:49:49 (6867) DEBUG ProjectReader Files to mutate: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx"
]
10:49:49 (6867) DEBUG TemporaryDirectory Using temp directory "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp"
10:49:49 (6867) DEBUG Instrumenter Instrumenting 6 source files with mutants
10:49:49 (6867) DEBUG Instrumenter Instrumented src/main.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/messages.ts (3 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/modules.tsx (0 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/pages/dashboard/dashboard.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/router.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/shared/modules/application/application.tsx (1 mutant(s))
10:49:49 (6867) INFO Instrumenter Instrumented 6 source file(s) with 7 mutant(s)
10:49:49 (6867) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: '/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json',
  mutate: false
}
10:49:49 (6867) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
10:49:49 (6867) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 6870  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6870) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6870) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6867) DEBUG Sandbox Creating a sandbox for files in /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6867) DEBUG Sandbox Start symlink node_modules
10:49:50 (6867) DEBUG Sandbox Create symlink from /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/node_modules
10:49:50 (6867) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
10:49:50 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 6875  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 6876  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6876) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6876) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6875) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6875) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6876) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6875) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6875) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:50 (6876) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6875) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6876) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6876) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6875) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6876) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6875) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
10:49:51 (6867) DEBUG DryRunExecutor Using timeout of 1200000 ms.
10:49:51 (6867) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 6879  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 6880  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6876) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/main.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/messages.ts","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/modules.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/pages/dashboard/dashboard.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/router.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
10:49:51 (6880) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:51 (6880) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:51 (6879) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:51 (6879) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:51 (6879) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:51 (6880) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:51 (6880) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6879) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6879) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6880) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6879) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6879) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 6908  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6880) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6880) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 6909  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6908) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6908) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6909) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6909) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6909) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6908) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6908) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6909) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6908) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6909) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6908) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6908) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 6911  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6909) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6909) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 6912  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6912) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6912) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6911) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6911) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6912) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6911) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6912) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6911) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6912) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6911) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6912) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6912) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6911) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6911) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:53 (6867) INFO DryRunExecutor Initial test run succeeded. Ran 1 tests in 2 seconds (net 32 ms, overhead 2429 ms).
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/main.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/messages.ts
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/pages/dashboard/dashboard.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/router.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/shared/modules/application/application.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/shared/modules/application/tests/application.test.tsx
10:49:53 (6867) INFO IncrementalDiffer Incremental report:
	Mutants:	0 files changed (+0 -0)
	Tests:		0 files changed (+0 -0)
	Result:		7 of 7 mutant result(s) are reused.
10:49:53 (6867) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		No changes
	Tests: 
		No changes
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6870
10:49:53 (6867) DEBUG ClearTextReporter [Killed] BlockStatement
10:49:53 (6867) DEBUG ClearTextReporter src/shared/modules/application/application.tsx:8:57
10:49:53 (6867) DEBUG ClearTextReporter -   const Application = ({ children }: ApplicationProps) => {
10:49:53 (6867) DEBUG ClearTextReporter -     return (
10:49:53 (6867) DEBUG ClearTextReporter -       <div className="application">
10:49:53 (6867) DEBUG ClearTextReporter -         <h1 className="application__header">Hello, React with Webpack!</h1>
10:49:53 (6867) DEBUG ClearTextReporter -         {children}
10:49:53 (6867) DEBUG ClearTextReporter -       </div>
10:49:53 (6867) DEBUG ClearTextReporter -     );
10:49:53 (6867) DEBUG ClearTextReporter -   };
10:49:53 (6867) DEBUG ClearTextReporter +   const Application = ({ children }: ApplicationProps) => {};
10:49:53 (6867) DEBUG ClearTextReporter Killed by: Application should render
10:49:53 (6867) DEBUG ClearTextReporter 
10:49:53 (6867) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
10:49:53 (6867) DEBUG JsonReporter Using relative path reports/stryker/stryker.json
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6870
10:49:53 (6867) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
10:49:53 (6867) INFO JsonReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.json
10:49:53 (6867) INFO HtmlReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.html
10:49:53 (6867) INFO MutationTestExecutor Done in 4 seconds.
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6875
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6876
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6879
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6880
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6908
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6909
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6911
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6875
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6912
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6876
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6879
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6880
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6908
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6909
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6911
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6912
10:49:53 (6867) DEBUG TemporaryDirectory Deleting stryker temp directory /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp16:40:32 (2632) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
16:40:32 (2632) INFO ProjectReader Found 59 of 531 file(s) to be mutated using incremental report with 7 mutant(s), and 1 test(s).
16:40:32 (2632) DEBUG ProjectReader All input files: [
  "D:\\Максим\\work\\spa-orders\\code\\.dockerignore",
  "D:\\Максим\\work\\spa-orders\\code\\.env.local",
  "D:\\Максим\\work\\spa-orders\\code\\.nvmrc",
  "D:\\Максим\\work\\spa-orders\\code\\.prettierrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\.eslintrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\babel.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.esm.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\webpack.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\__mocks__\\fileMock.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\clover.xml",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov.info",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\Dockerfile",
  "D:\\Максим\\work\\spa-orders\\code\\eslint.config.mjs",
  "D:\\Максим\\work\\spa-orders\\code\\nginx.conf",
  "D:\\Максим\\work\\spa-orders\\code\\package-lock.json",
  "D:\\Максим\\work\\spa-orders\\code\\package.json",
  "D:\\Максим\\work\\spa-orders\\code\\sonar-project.properties",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\icons\\.gitkeep",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\computer.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\phone.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\computer-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\mobile-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\tablet-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-1.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-2.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-3.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\logo.png",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\box-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\clock-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\moped-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\percent-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.test.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.test.jsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_reset.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_root.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_all.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_colors.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_functions.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_mixins.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_typography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_variables.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\global.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\assets.d.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\product.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\snackbar.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\tests\\createUrlPath.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\stryker.conf.js",
  "D:\\Максим\\work\\spa-orders\\code\\tsconfig.json"
]
16:40:32 (2632) DEBUG ProjectReader Files to mutate: [
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx"
]
16:40:32 (2632) DEBUG TemporaryDirectory Using temp directory "D:\Максим\work\spa-orders\code\stryker-tmp"
16:40:32 (2632) DEBUG Instrumenter Instrumenting 59 source files with mutants
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.tsx (17 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.types.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-box\AppBox.tsx (2 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-button\AppButton.tsx (12 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-container\AppContainer.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-icon-button\AppIconButton.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.tsx (12 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.types.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.tsx (6 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.types.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-logo\AppLogo.tsx (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-snackbar\AppSnackbar.tsx (4 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\app-typography\AppTypography.tsx (18 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\components\product-card\ProductCard.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\constants\methods.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\constants\requests.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\constants\routes.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\context\I18nProvider.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\hooks\use-interval-switcher\useIntervalSwitcher.ts (8 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\hooks\use-redux\useRedux.ts (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\hooks\use-snackbar\useSnackbar.ts (4 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.constants.ts (73 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.tsx (5 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.constants.ts (13 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.tsx (2 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\call-to-action\components\call-to-action-item\CallToActionItem.tsx (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.constants.ts (7 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.tsx (2 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\category-section\components\CategoryItem.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.constants.tsx (40 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.tsx (5 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.constants.ts (9 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.tsx (2 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\header\components\header-toolbar\HeaderToolbar.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\header\Header.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\header\hooks\use-sticky-header\useStickyHeader.ts (22 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.constants.ts (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.tsx (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\page-wrapper\PageWrapper.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\root-layout\RootLayout.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\subintro\components\SubintroItem.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.constants.ts (9 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.tsx (2 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\main.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\messages.ts (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\pages\error\ErrorPage.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\pages\home\HomePage.tsx (9 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\pages\not-found\NotFoundPage.tsx (1 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\pages\products\ProductsPage.tsx (9 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\routes\routes.tsx (9 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\api\appApi.ts (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\api\productsApi.ts (11 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\constants.ts (0 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\slices\productsSlice.ts (28 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\slices\snackbarSlice.ts (23 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\store\store.ts (3 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\utils\cn.ts (13 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\utils\createUrlPath.ts (21 mutant(s))
16:40:33 (2632) DEBUG Instrumenter Instrumented src\utils\test-utils.tsx (7 mutant(s))
16:40:33 (2632) INFO Instrumenter Instrumented 59 source file(s) with 437 mutant(s)
16:40:35 (2632) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: 'D:\\Максим\\work\\spa-orders\\code\\tsconfig.json',
  mutate: false
}
16:40:36 (2632) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
16:40:36 (2632) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 14960  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:36 (14960) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:36 (14960) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:37 (2632) DEBUG Sandbox Creating a sandbox for files in D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:37 (2632) DEBUG Sandbox Start symlink node_modules
16:40:37 (2632) DEBUG Sandbox Create symlink from D:\Максим\work\spa-orders\code\node_modules to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688\node_modules
16:40:37 (2632) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
16:40:37 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 15080  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:37 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 4248  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:39 (15080) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:39 (15080) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:39 (4248) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:39 (4248) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:40 (15080) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:40 (4248) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:40 (15080) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:40 (4248) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:40 (15080) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:40 (15080) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:40 (15080) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:40 (2632) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
16:40:40 (2632) DEBUG DryRunExecutor Using timeout of 1200000 ms.
16:40:40 (2632) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
16:40:40 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 14056  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:40 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-box\\AppBox.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-container\\AppContainer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-icon-button\\AppIconButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-loader\\AppLoader.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-loader\\AppLoader.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-logo\\AppLogo.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-snackbar\\AppSnackbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\product-card\\ProductCard.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\constants\\methods.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\constants\\requests.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\constants\\routes.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\context\\I18nProvider.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-redux\\useRedux.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-snackbar\\useSnackbar.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\CallToAction.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\CallToAction.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\CategorySection.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\CategorySection.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\components\\CategoryItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.constants.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\Header.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\intro-banner\\IntroBanner.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\intro-banner\\IntroBanner.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\page-wrapper\\PageWrapper.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\root-layout\\RootLayout.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\components\\SubintroItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\Subintro.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\Subintro.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\main.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\messages.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\error\\ErrorPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\home\\HomePage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\not-found\\NotFoundPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\routes\\routes.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\api\\appApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\api\\productsApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\slices\\productsSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\slices\\snackbarSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\store\\store.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
16:40:40 (4248) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:40 (4248) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:40 (4248) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:40 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 12048  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:42 (14056) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:42 (14056) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:42 (12048) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:42 (12048) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:42 (14056) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:42 (12048) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:42 (14056) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:42 (12048) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:42 (14056) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:42 (14056) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:42 (14056) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:42 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 14548  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:42 (12048) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:42 (12048) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:42 (12048) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:42 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 14632  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:43 (14548) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:43 (14548) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:43 (14632) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:43 (14632) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:43 (14548) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:43 (14632) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:44 (14548) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:44 (14632) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:44 (14548) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:44 (14548) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:44 (14548) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:44 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 6264  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:44 (14632) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:44 (14632) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:44 (14632) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:44 (2632) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 1356  (using args --no-compilation-cache --max-old-space-size=8192)
16:40:45 (6264) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:45 (6264) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:45 (1356) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
16:40:45 (1356) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
16:40:45 (6264) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:45 (1356) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox8606688
16:40:45 (1356) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:45 (6264) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
16:40:45 (1356) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:45 (6264) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
16:40:45 (1356) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:45 (1356) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:45 (6264) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
16:40:45 (6264) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
16:40:49 (2632) TRACE ChildProcessProxy (node:15080) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:10 (2632) INFO DryRunExecutor Initial test run succeeded. Ran 49 tests in 29 seconds (net 2084 ms, overhead 27585 ms).
16:41:10 (2632) TRACE IncrementalDiffer Diffing src/main.tsx
16:41:10 (2632) TRACE IncrementalDiffer Diffing src/messages.ts
16:41:10 (2632) DEBUG IncrementalDiffer Test file removed: src/shared/modules/application/tests/application.test.tsx
16:41:10 (2632) INFO IncrementalDiffer Incremental report:
	Mutants:	54 files changed (+253 -7)
	Tests:		26 files changed (+49 -1)
	Result:		0 of 437 mutant result(s) are reused.
16:41:10 (2632) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		src/main.tsx +1 -1
		src/messages.ts +3 -3
		src/pages/dashboard/dashboard.tsx +0 -1
		src/router.tsx +0 -1
		src/shared/modules/application/application.tsx +0 -1
		src/components/app-badge/AppBadge.tsx +10 -0
		src/components/app-box/AppBox.tsx +1 -0
		src/components/app-button/AppButton.tsx +7 -0
		src/components/app-container/AppContainer.tsx +1 -0
		src/components/app-icon-button/AppIconButton.tsx +1 -0
		src/components/app-link/AppLink.tsx +7 -0
		src/components/app-loader/AppLoader.tsx +1 -0
		src/components/app-logo/AppLogo.tsx +1 -0
		src/components/app-snackbar/AppSnackbar.tsx +2 -0
		src/components/app-typography/AppTypography.tsx +11 -0
		src/components/product-card/ProductCard.tsx +1 -0
		src/context/I18nProvider.tsx +1 -0
		src/hooks/use-interval-switcher/useIntervalSwitcher.ts +7 -0
		src/hooks/use-redux/useRedux.ts +1 -0
		src/hooks/use-snackbar/useSnackbar.ts +4 -0
		src/layouts/best-sellers/BestSellers.constants.ts +8 -0
		src/layouts/best-sellers/BestSellers.tsx +5 -0
		src/layouts/call-to-action/CallToAction.constants.ts +2 -0
		src/layouts/call-to-action/CallToAction.tsx +2 -0
		src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.tsx +2 -0
		src/layouts/category-section/CategorySection.constants.ts +3 -0
		src/layouts/category-section/CategorySection.tsx +2 -0
		src/layouts/category-section/components/CategoryItem.tsx +1 -0
		src/layouts/footer/Footer.constants.tsx +14 -0
		src/layouts/footer/Footer.tsx +5 -0
		src/layouts/header/components/header-categories/HeaderCategories.constants.ts +4 -0
		src/layouts/header/components/header-categories/HeaderCategories.tsx +2 -0
		src/layouts/header/components/header-toolbar/HeaderToolbar.tsx +1 -0
		src/layouts/header/Header.tsx +1 -0
		src/layouts/header/hooks/use-sticky-header/useStickyHeader.ts +16 -0
		src/layouts/intro-banner/IntroBanner.tsx +2 -0
		src/layouts/page-wrapper/PageWrapper.tsx +1 -0
		src/layouts/root-layout/RootLayout.tsx +1 -0
		src/layouts/subintro/components/SubintroItem.tsx +1 -0
		src/layouts/subintro/Subintro.constants.ts +4 -0
		src/layouts/subintro/Subintro.tsx +2 -0
		src/pages/error/ErrorPage.tsx +1 -0
		src/pages/home/HomePage.tsx +5 -0
		src/pages/not-found/NotFoundPage.tsx +1 -0
		src/pages/products/ProductsPage.tsx +9 -0
		src/routes/routes.tsx +6 -0
		src/store/api/appApi.ts +3 -0
		src/store/api/productsApi.ts +11 -0
		src/store/slices/productsSlice.ts +24 -0
		src/store/slices/snackbarSlice.ts +23 -0
		src/store/store.ts +3 -0
		src/utils/cn.ts +10 -0
		src/utils/createUrlPath.ts +13 -0
		src/utils/test-utils.tsx +5 -0
	Tests: 
		src/shared/modules/application/tests/application.test.tsx +0 -1
		src/layouts/best-sellers/BestSellers.test.tsx +4 -0
		src/utils/tests/createUrlPath.test.tsx +8 -0
		src/components/product-card/ProductCard.test.tsx +5 -0
		src/components/app-snackbar/AppSnackbar.test.tsx +2 -0
		src/pages/products/ProductsPage.test.tsx +2 -0
		src/layouts/footer/Footer.test.jsx +3 -0
		src/components/app-typography/AppTypography.test.tsx +4 -0
		src/components/app-link/AppLink.test.tsx +2 -0
		src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.test.tsx +1 -0
		src/components/app-badge/AppBadge.test.tsx +2 -0
		src/layouts/header/Header.test.tsx +1 -0
		src/layouts/header/components/header-categories/HeaderCategories.test.tsx +1 -0
		src/components/app-button/AppButton.test.tsx +2 -0
		src/hooks/use-interval-switcher/useIntervalSwitcher.test.ts +1 -0
		src/layouts/category-section/CategorySection.test.tsx +1 -0
		src/layouts/subintro/Subintro.test.tsx +1 -0
		src/layouts/header/components/header-toolbar/HeaderToolbar.test.tsx +1 -0
		src/layouts/call-to-action/CallToAction.test.tsx +1 -0
		src/components/app-container/AppContainer.test.tsx +1 -0
		src/layouts/page-wrapper/PageWrapper.test.tsx +1 -0
		src/layouts/intro-banner/IntroBanner.test.tsx +1 -0
		src/components/app-icon-button/AppIconButton.test.tsx +1 -0
		src/components/app-box/AppBox.test.tsx +1 -0
		src/components/app-loader/AppLoader.test.tsx +1 -0
		src/components/app-logo/AppLogo.test.tsx +1 -0
16:41:10 (2632) DEBUG ChildProcessProxy Disposing of worker process 14960
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (628971 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:10 (2632) DEBUG ChildProcessProxy Kill 14960
16:41:10 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(renders Header correctly)|(HeaderToolbar renders the logo)"}
16:41:10 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:10 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:20 (2632) TRACE ChildProcessProxy (node:14056) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:1356) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:12048) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:6264) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:14548) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:14632) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:20 (2632) TRACE ChildProcessProxy (node:4248) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

16:41:23 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:23 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:25 (2632) DEBUG TimeoutDecorator Starting timeout timer (629403 ms) for a test run
16:41:25 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderToolbar renders the logo)|(IntroBanner should render IntroBanner title)"}
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (635979 ms) for a test run
16:41:26 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-box\\AppBox.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppBox renders AppBox with children)|(AppLogo renders correctly)"}
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:26 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:26 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:26 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:26 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:26 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:32 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:32 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:35 (2632) DEBUG TimeoutDecorator Starting timeout timer (634077 ms) for a test run
16:41:35 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(CallToActionItem renders correctly)|(renders Header correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:41:47 (2632) DEBUG TimeoutDecorator Starting timeout timer (633621 ms) for a test run
16:41:47 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-container\\AppContainer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(AppBox renders AppContainer with children)|(PageWrapper should render children)|(IntroBanner should render IntroBanner title)"}
16:41:48 (2632) DEBUG TimeoutDecorator Starting timeout timer (629307 ms) for a test run
16:41:48 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-icon-button\\AppIconButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)|(HeaderToolbar renders the logo)|(AppIconButton renders correctly)"}
16:41:48 (2632) DEBUG TimeoutDecorator Starting timeout timer (628737 ms) for a test run
16:41:48 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:41:48 (2632) DEBUG TimeoutDecorator Starting timeout timer (628737 ms) for a test run
16:41:48 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:41:48 (2632) DEBUG TimeoutDecorator Starting timeout timer (628737 ms) for a test run
16:41:48 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:41:52 (2632) DEBUG TimeoutDecorator Starting timeout timer (628737 ms) for a test run
16:41:52 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:41:56 (2632) DEBUG TimeoutDecorator Starting timeout timer (628737 ms) for a test run
16:41:56 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:41:57 (2632) DEBUG TimeoutDecorator Starting timeout timer (634911 ms) for a test run
16:41:57 (2632) DEBUG TimeoutDecorator Starting timeout timer (635439 ms) for a test run
16:41:57 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:41:57 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:42:09 (2632) DEBUG TimeoutDecorator Starting timeout timer (628077 ms) for a test run
16:42:09 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-loader\\AppLoader.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppButton is disabled when isLoading is true)|(AppLoader renders AppLoader props)"}
16:42:11 (2632) DEBUG TimeoutDecorator Starting timeout timer (628905 ms) for a test run
16:42:11 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-logo\\AppLogo.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)|(HeaderToolbar renders the logo)|(AppLogo renders correctly)"}
16:42:12 (2632) DEBUG TimeoutDecorator Starting timeout timer (628527 ms) for a test run
16:42:12 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-snackbar\\AppSnackbar.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)"}
16:42:14 (2632) DEBUG TimeoutDecorator Starting timeout timer (628527 ms) for a test run
16:42:14 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-snackbar\\AppSnackbar.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)"}
16:42:16 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:16 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:17 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:17 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:19 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:19 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:19 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:19 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:21 (2632) DEBUG TimeoutDecorator Starting timeout timer (632085 ms) for a test run
16:42:21 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render heading as corresponding tags)|(CallToActionItem renders correctly)|(Category section renders three category elements correctly)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:24 (2632) DEBUG TimeoutDecorator Starting timeout timer (635973 ms) for a test run
16:42:24 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:24 (2632) DEBUG TimeoutDecorator Starting timeout timer (635973 ms) for a test run
16:42:24 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:31 (2632) DEBUG TimeoutDecorator Starting timeout timer (635973 ms) for a test run
16:42:31 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:51 (2632) DEBUG TimeoutDecorator Starting timeout timer (633435 ms) for a test run
16:42:51 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(AppTypography should render caption as <span> by default)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:42:52 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:52 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:52 (2632) DEBUG TimeoutDecorator Starting timeout timer (635997 ms) for a test run
16:42:52 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(CallToActionItem renders correctly)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)"}
16:42:53 (2632) DEBUG TimeoutDecorator Starting timeout timer (631005 ms) for a test run
16:42:53 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\components\\product-card\\ProductCard.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:42:54 (2632) DEBUG TimeoutDecorator Starting timeout timer (635241 ms) for a test run
16:42:54 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\context\\I18nProvider.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:42:55 (2632) DEBUG TimeoutDecorator Starting timeout timer (628107 ms) for a test run
16:42:55 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner title)"}
16:42:55 (2632) DEBUG TimeoutDecorator Starting timeout timer (628107 ms) for a test run
16:42:55 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner title)"}
16:43:01 (2632) DEBUG TimeoutDecorator Starting timeout timer (627705 ms) for a test run
16:43:01 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
16:43:01 (2632) DEBUG TimeoutDecorator Starting timeout timer (627705 ms) for a test run
16:43:01 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
16:43:03 (2632) DEBUG TimeoutDecorator Starting timeout timer (627705 ms) for a test run
16:43:03 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
16:43:04 (2632) DEBUG TimeoutDecorator Starting timeout timer (627705 ms) for a test run
16:43:04 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
16:43:06 (2632) DEBUG TimeoutDecorator Starting timeout timer (628107 ms) for a test run
16:43:06 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner title)"}
16:43:07 (2632) DEBUG TimeoutDecorator Starting timeout timer (629217 ms) for a test run
16:43:07 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
16:43:08 (2632) DEBUG TimeoutDecorator Starting timeout timer (629217 ms) for a test run
16:43:08 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
16:43:09 (2632) DEBUG TimeoutDecorator Starting timeout timer (629217 ms) for a test run
16:43:09 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
16:43:12 (2632) DEBUG TimeoutDecorator Starting timeout timer (629145 ms) for a test run
16:43:12 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)"}
16:43:12 (2632) DEBUG TimeoutDecorator Starting timeout timer (629145 ms) for a test run
16:43:12 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)"}
16:43:14 (2632) DEBUG TimeoutDecorator Starting timeout timer (628077 ms) for a test run
16:43:14 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\CallToAction.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(CallToAction renders correctly)"}
16:43:15 (2632) DEBUG TimeoutDecorator Starting timeout timer (628077 ms) for a test run
16:43:15 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\CallToAction.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(CallToAction renders correctly)"}
16:43:18 (2632) DEBUG TimeoutDecorator Starting timeout timer (628455 ms) for a test run
16:43:18 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(CallToActionItem renders correctly)|(CallToAction renders correctly)"}
16:43:18 (2632) DEBUG TimeoutDecorator Starting timeout timer (628455 ms) for a test run
16:43:18 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(CallToActionItem renders correctly)|(CallToAction renders correctly)"}
16:43:19 (2632) DEBUG TimeoutDecorator Starting timeout timer (627807 ms) for a test run
16:43:19 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\CategorySection.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Category section renders three category elements correctly)"}
16:43:19 (2632) DEBUG TimeoutDecorator Starting timeout timer (627807 ms) for a test run
16:43:19 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\CategorySection.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Category section renders three category elements correctly)"}
16:43:19 (2632) DEBUG TimeoutDecorator Starting timeout timer (627807 ms) for a test run
16:43:19 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\category-section\\components\\CategoryItem.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Category section renders three category elements correctly)"}
16:43:23 (2632) DEBUG TimeoutDecorator Starting timeout timer (628959 ms) for a test run
16:43:23 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
16:43:23 (2632) DEBUG TimeoutDecorator Starting timeout timer (628959 ms) for a test run
16:43:23 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
16:43:23 (2632) DEBUG TimeoutDecorator Starting timeout timer (628959 ms) for a test run
16:43:23 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
16:43:23 (2632) DEBUG TimeoutDecorator Starting timeout timer (628959 ms) for a test run
16:43:23 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
16:43:24 (2632) DEBUG TimeoutDecorator Starting timeout timer (628959 ms) for a test run
16:43:24 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\footer\\Footer.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
16:43:25 (2632) DEBUG TimeoutDecorator Starting timeout timer (628551 ms) for a test run
16:43:25 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:43:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (628551 ms) for a test run
16:43:26 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)|(HeaderCategories renders categories correctly)"}
16:43:27 (2632) DEBUG TimeoutDecorator Starting timeout timer (628767 ms) for a test run
16:43:27 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)|(HeaderToolbar renders the logo)"}
16:43:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:28 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\Header.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:28 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:28 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:29 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:29 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:30 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:30 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:32 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:32 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:32 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:32 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:33 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:33 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:33 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:33 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:33 (2632) DEBUG TimeoutDecorator Starting timeout timer (628209 ms) for a test run
16:43:33 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header correctly)"}
16:43:34 (2632) DEBUG TimeoutDecorator Starting timeout timer (627987 ms) for a test run
16:43:34 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner title)"}
16:43:34 (2632) DEBUG TimeoutDecorator Starting timeout timer (627987 ms) for a test run
16:43:34 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner title)"}
16:43:34 (2632) DEBUG TimeoutDecorator Starting timeout timer (630171 ms) for a test run
16:43:34 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\page-wrapper\\PageWrapper.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(PageWrapper should render children)"}
16:43:37 (2632) DEBUG TimeoutDecorator Starting timeout timer (627849 ms) for a test run
16:43:37 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\components\\SubintroItem.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Subintro section renders four subintro elements correctly)"}
16:43:37 (2632) DEBUG TimeoutDecorator Starting timeout timer (627849 ms) for a test run
16:43:37 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\Subintro.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Subintro section renders four subintro elements correctly)"}
16:43:38 (2632) DEBUG TimeoutDecorator Starting timeout timer (627849 ms) for a test run
16:43:38 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\layouts\\subintro\\Subintro.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Subintro section renders four subintro elements correctly)"}
16:43:38 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:38 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:38 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:38 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:38 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:38 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:39 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:39 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:41 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:41 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:41 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:41 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:41 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:41 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:42 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:42 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:42 (2632) DEBUG TimeoutDecorator Starting timeout timer (628419 ms) for a test run
16:43:42 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\pages\\products\\ProductsPage.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)"}
16:43:43 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:43 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:43 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:43 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:44 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:44 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:46 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:46 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:46 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:46 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:46 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:46 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:47 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:47 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:43:47 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:43:47 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:44:24 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:44:24 (14548) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:44:25 (2632) DEBUG TimeoutDecorator Starting timeout timer (637989 ms) for a test run
16:44:25 (4248) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(ProductsPage renders the product count correctly)|(ProductsPage renders the sort by section)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(CallToActionItem renders correctly)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(Category section renders three category elements correctly)|(Subintro section renders four subintro elements correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)|(IntroBanner should render IntroBanner title)|(AppLoader renders AppLoader props)|(AppLogo renders correctly)"}
16:44:26 (2632) DEBUG TimeoutDecorator Starting timeout timer (627657 ms) for a test run
16:44:26 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (627609 ms) for a test run
16:44:28 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (627609 ms) for a test run
16:44:28 (2632) DEBUG TimeoutDecorator Starting timeout timer (627609 ms) for a test run
16:44:28 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:29 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:30 (2632) DEBUG TimeoutDecorator Starting timeout timer (627609 ms) for a test run
16:44:30 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:30 (2632) DEBUG TimeoutDecorator Starting timeout timer (627657 ms) for a test run
16:44:30 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:34 (2632) DEBUG TimeoutDecorator Starting timeout timer (627657 ms) for a test run
16:44:34 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:36 (2632) DEBUG TimeoutDecorator Starting timeout timer (627657 ms) for a test run
16:44:36 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
16:44:36 (2632) DEBUG TimeoutDecorator Starting timeout timer (627591 ms) for a test run
16:44:36 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
16:44:36 (2632) DEBUG TimeoutDecorator Starting timeout timer (627591 ms) for a test run
16:44:36 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
16:44:37 (2632) DEBUG TimeoutDecorator Starting timeout timer (627591 ms) for a test run
16:44:37 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
16:44:37 (2632) DEBUG TimeoutDecorator Starting timeout timer (627639 ms) for a test run
16:44:37 (15080) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)"}
16:44:41 (2632) DEBUG TimeoutDecorator Starting timeout timer (627639 ms) for a test run
16:44:41 (14056) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)"}
16:44:43 (2632) DEBUG TimeoutDecorator Starting timeout timer (635241 ms) for a test run
16:44:43 (1356) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:44:43 (2632) DEBUG TimeoutDecorator Starting timeout timer (635241 ms) for a test run
16:44:43 (6264) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:44:43 (2632) DEBUG TimeoutDecorator Starting timeout timer (635241 ms) for a test run
16:44:43 (12048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:44:44 (2632) DEBUG TimeoutDecorator Starting timeout timer (635241 ms) for a test run
16:44:44 (14632) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox8606688\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppSnackbar renders correctly)|(AppSnackbar should close snackbar when close button is clicked)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(renders Header correctly)|(HeaderCategories renders categories correctly)|(HeaderToolbar renders the logo)|(CallToAction renders correctly)"}
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
16:45:05 (2632) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter +           true,
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:14:22
16:45:05 (2632) DEBUG ClearTextReporter -   }: AppBadgeProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <Badge
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn(
16:45:05 (2632) DEBUG ClearTextReporter -           "spa-badge",
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-badge__${variant}`,
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-badge__${size}`,
16:45:05 (2632) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter -           !children && "spa-badge__no-children",
16:45:05 (2632) DEBUG ClearTextReporter -           className
16:45:05 (2632) DEBUG ClearTextReporter -         )}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         {children}
16:45:05 (2632) DEBUG ClearTextReporter -       </Badge>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: AppBadgeProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppBadge renders AppBadge component
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
16:45:05 (2632) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter +           !isRounded || "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
16:45:05 (2632) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter +           false,
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BooleanLiteral
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
16:45:05 (2632) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter +           isRounded && "spa-badge__no-rounded",
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-box/AppBox.tsx:7:80
16:45:05 (2632) DEBUG ClearTextReporter -     <TElement,>(props: AppBoxProps<TElement>, ref: ForwardedRef<HTMLElement>) => {
16:45:05 (2632) DEBUG ClearTextReporter -       return <Box ref={ref} {...props} />;
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter +     <TElement,>(props: AppBoxProps<TElement>, ref: ForwardedRef<HTMLElement>) => {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: renders Header correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:23
16:45:05 (2632) DEBUG ClearTextReporter -   }: AppButtonProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <Button
16:45:05 (2632) DEBUG ClearTextReporter -         disabled={isDisabled}
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn(
16:45:05 (2632) DEBUG ClearTextReporter -           "spa-button",
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-button__${variant}`,
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-button__${size}`,
16:45:05 (2632) DEBUG ClearTextReporter -           className
16:45:05 (2632) DEBUG ClearTextReporter -         )}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         {children}
16:45:05 (2632) DEBUG ClearTextReporter -         {loader}
16:45:05 (2632) DEBUG ClearTextReporter -       </Button>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: AppButtonProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: renders Header correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:32:22
16:45:05 (2632) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
16:45:05 (2632) DEBUG ClearTextReporter +     const isDisabled = disabled && isLoading;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:32:22
16:45:05 (2632) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
16:45:05 (2632) DEBUG ClearTextReporter +     const isDisabled = false;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
16:45:05 (2632) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
16:45:05 (2632) DEBUG ClearTextReporter +     const loader = true;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: renders Header correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
16:45:05 (2632) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
16:45:05 (2632) DEBUG ClearTextReporter +     const loader = isLoading || <AppLoader variant="disabled" size="small" />;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-container/AppContainer.tsx:5:52
16:45:05 (2632) DEBUG ClearTextReporter -   const AppContainer = (props: AppContainerProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return <Container {...props} />;
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const AppContainer = (props: AppContainerProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-icon-button/AppIconButton.tsx:9:54
16:45:05 (2632) DEBUG ClearTextReporter -   const AppIconButton = (props: AppIconButtonProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return <IconButton {...props} />;
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const AppIconButton = (props: AppIconButtonProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppIconButton renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
16:45:05 (2632) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter +         cn(className, true);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:17:37
16:45:05 (2632) DEBUG ClearTextReporter -     ({ className, ...props }, ref) => {
16:45:05 (2632) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
16:45:05 (2632) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       return <NavLink ref={ref} className={classNameCallback} {...props} />;
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter +     ({ className, ...props }, ref) => {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:18:31
16:45:05 (2632) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
16:45:05 (2632) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter +       const classNameCallback = () => undefined;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
16:45:05 (2632) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter +         cn(className, false);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
16:45:05 (2632) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter +         cn(className, isActive || "spa-link--active");
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:31:21
16:45:05 (2632) DEBUG ClearTextReporter -   }: AppLinkProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const component = isNavLink ? NavLinkWrapper : ReactRouterDomLink;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <MuiLink
16:45:05 (2632) DEBUG ClearTextReporter -         component={component}
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn("spa-link", `spa-link__${variant}`)}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       />
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: AppLinkProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-loader/AppLoader.tsx:12:23
16:45:05 (2632) DEBUG ClearTextReporter -   }: AppLoaderProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <CircularProgress
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn(
16:45:05 (2632) DEBUG ClearTextReporter -           "spa-loader",
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-loader__${variant}`,
16:45:05 (2632) DEBUG ClearTextReporter -           `spa-loader__${size}`,
16:45:05 (2632) DEBUG ClearTextReporter -           className
16:45:05 (2632) DEBUG ClearTextReporter -         )}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       />
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: AppLoaderProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLoader renders AppLoader props
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-logo/AppLogo.tsx:13:55
16:45:05 (2632) DEBUG ClearTextReporter -   const AppLogo = ({ className, ...props }: AppLogo) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -         component={COMPONENT}
16:45:05 (2632) DEBUG ClearTextReporter -         src={logo}
16:45:05 (2632) DEBUG ClearTextReporter -         alt="App logo"
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn("spa-logo", className)}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       />
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const AppLogo = ({ className, ...props }: AppLogo) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: HeaderToolbar renders the logo
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-snackbar/AppSnackbar.tsx:7:39
16:45:05 (2632) DEBUG ClearTextReporter -   export default function AppSnackbar() {
16:45:05 (2632) DEBUG ClearTextReporter -     const { isOpen, config, closeSnackbar } = useSnackbar();
16:45:05 (2632) DEBUG ClearTextReporter -     const { message, variant } = config;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <Snackbar
16:45:05 (2632) DEBUG ClearTextReporter -         anchorOrigin={{ horizontal: "center", vertical: "top" }}
16:45:05 (2632) DEBUG ClearTextReporter -         open={isOpen}
16:45:05 (2632) DEBUG ClearTextReporter -         onClose={closeSnackbar}
16:45:05 (2632) DEBUG ClearTextReporter -         className="spa-snackbar"
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         <Alert
16:45:05 (2632) DEBUG ClearTextReporter -           onClose={closeSnackbar}
16:45:05 (2632) DEBUG ClearTextReporter -           severity={variant}
16:45:05 (2632) DEBUG ClearTextReporter -           variant="filled"
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-snackbar__alert"
16:45:05 (2632) DEBUG ClearTextReporter -         >
16:45:05 (2632) DEBUG ClearTextReporter -           {message}
16:45:05 (2632) DEBUG ClearTextReporter -         </Alert>
16:45:05 (2632) DEBUG ClearTextReporter -       </Snackbar>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   }
16:45:05 (2632) DEBUG ClearTextReporter +   export default function AppSnackbar() {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ObjectLiteral
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-snackbar/AppSnackbar.tsx:13:21
16:45:05 (2632) DEBUG ClearTextReporter -         anchorOrigin={{ horizontal: "center", vertical: "top" }}
16:45:05 (2632) DEBUG ClearTextReporter +         anchorOrigin={{}}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:37:64
16:45:05 (2632) DEBUG ClearTextReporter -   function getDefaultComponentTag(variant: AppTypographyVariant) {
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter -       return variant as HeadingVariant;
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
16:45:05 (2632) DEBUG ClearTextReporter -       return "span";
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return "p";
16:45:05 (2632) DEBUG ClearTextReporter -   }
16:45:05 (2632) DEBUG ClearTextReporter +   function getDefaultComponentTag(variant: AppTypographyVariant) {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter +     if (true) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter +     if (false) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:32
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter -       return variant as HeadingVariant;
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter +     if (variant.startsWith("h")) {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] MethodExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter +     if (variant.endsWith("h")) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
16:45:05 (2632) DEBUG ClearTextReporter +     if (true) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppTypography should render <p> by default
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
16:45:05 (2632) DEBUG ClearTextReporter +     if (false) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:38
16:45:05 (2632) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
16:45:05 (2632) DEBUG ClearTextReporter -       return "span";
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter +     if (variant.startsWith("caption")) {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:57:30
16:45:05 (2632) DEBUG ClearTextReporter -   }: AppTypographyProps<T>) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const TypographyContent = translationKey ? (
16:45:05 (2632) DEBUG ClearTextReporter -       <FormattedMessage id={translationKey} {...translationProps} />
16:45:05 (2632) DEBUG ClearTextReporter -     ) : (
16:45:05 (2632) DEBUG ClearTextReporter -       children
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <Typography
16:45:05 (2632) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
16:45:05 (2632) DEBUG ClearTextReporter -         className={cn(`spa-typography`, `spa-typography__${variant}`, className)}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         {TypographyContent}
16:45:05 (2632) DEBUG ClearTextReporter -       </Typography>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: AppTypographyProps<T>) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:66:18
16:45:05 (2632) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
16:45:05 (2632) DEBUG ClearTextReporter +         component={component && getDefaultComponentTag(variant)}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/components/product-card/ProductCard.tsx:14:56
16:45:05 (2632) DEBUG ClearTextReporter -   const ProductCard = ({ product }: ProductCardProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppLink key={product.id} to="/">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox className="spa-product-card">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="spa-product-card__img">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -               alt={product.name}
16:45:05 (2632) DEBUG ClearTextReporter -               className="spa-product-card__img-name"
16:45:05 (2632) DEBUG ClearTextReporter -               component="img"
16:45:05 (2632) DEBUG ClearTextReporter -               src={product.image}
16:45:05 (2632) DEBUG ClearTextReporter -             />
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBox className="spa-product-card__description">
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography>{product.description}</AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography variant="caption">{product.name}</AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="spa-product-card__footer">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__footer-price">
16:45:05 (2632) DEBUG ClearTextReporter -               {product.price}
16:45:05 (2632) DEBUG ClearTextReporter -             </AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -             <AppButton size="large" variant="shadow">
16:45:05 (2632) DEBUG ClearTextReporter -               <AddIcon />
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography translationKey="productCard.add" />
16:45:05 (2632) DEBUG ClearTextReporter -             </AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const ProductCard = ({ product }: ProductCardProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductCard component should render product name
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/context/I18nProvider.tsx:9:65
16:45:05 (2632) DEBUG ClearTextReporter -   const I18nProivider: FC<I18nProividerProps> = ({ children }) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <IntlProvider locale="en" defaultLocale="en" messages={messages.en}>
16:45:05 (2632) DEBUG ClearTextReporter -         {children}
16:45:05 (2632) DEBUG ClearTextReporter -       </IntlProvider>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const I18nProivider: FC<I18nProividerProps> = ({ children }) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:6:19
16:45:05 (2632) DEBUG ClearTextReporter -     useEffect(() => {
16:45:05 (2632) DEBUG ClearTextReporter -       const interval = setInterval(() => {
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter -       }, intervalTime);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       return () => clearInterval(interval);
16:45:05 (2632) DEBUG ClearTextReporter -     }, [length, intervalTime]);
16:45:05 (2632) DEBUG ClearTextReporter +     useEffect(() => {}, [length, intervalTime]);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:3:70
16:45:05 (2632) DEBUG ClearTextReporter -   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const [currentIndex, setCurrentIndex] = useState(0);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     useEffect(() => {
16:45:05 (2632) DEBUG ClearTextReporter -       const interval = setInterval(() => {
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter -       }, intervalTime);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       return () => clearInterval(interval);
16:45:05 (2632) DEBUG ClearTextReporter -     }, [length, intervalTime]);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return currentIndex;
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:7:40
16:45:05 (2632) DEBUG ClearTextReporter -       const interval = setInterval(() => {
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter -       }, intervalTime);
16:45:05 (2632) DEBUG ClearTextReporter +       const interval = setInterval(() => {}, intervalTime);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:23
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter +         setCurrentIndex(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArithmeticOperator
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:38
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex + 1) * length);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArithmeticOperator
16:45:05 (2632) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:39
16:45:05 (2632) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex - 1) % length);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:11:27
16:45:05 (2632) DEBUG ClearTextReporter -   const BestSellers = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const productCards = products
16:45:05 (2632) DEBUG ClearTextReporter -       ? products
16:45:05 (2632) DEBUG ClearTextReporter -           .slice(0, 5)
16:45:05 (2632) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
16:45:05 (2632) DEBUG ClearTextReporter -       : null;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <PageWrapper className="spa-best-sellers">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-best-sellers__header"
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey="bestSellers.header"
16:45:05 (2632) DEBUG ClearTextReporter -           variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__container">{productCards}</AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__button">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppButton size="extra-large">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography translationKey="bestSellers.button" />
16:45:05 (2632) DEBUG ClearTextReporter -           </AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -       </PageWrapper>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const BestSellers = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter +     if (false) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render loader if isLoading
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] MethodExpression
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:17:7
16:45:05 (2632) DEBUG ClearTextReporter -       ? products
16:45:05 (2632) DEBUG ClearTextReporter -           .slice(0, 5)
16:45:05 (2632) DEBUG ClearTextReporter +       ? products
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:19:14
16:45:05 (2632) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
16:45:05 (2632) DEBUG ClearTextReporter +           .map(() => undefined)
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.tsx:22:37
16:45:05 (2632) DEBUG ClearTextReporter -   }: CallToActionSectionItemProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -         className="call-to-action__item"
16:45:05 (2632) DEBUG ClearTextReporter -         sx={{ backgroundImage: `url(${imageUrl})` }}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           variant="subtitle2"
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={captionTranslationKey}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography variant="h2" translationKey={titleTranslationKey} />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           variant="subtitle2"
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={descriptionTranslationKey}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppLink to={linkTo}>
16:45:05 (2632) DEBUG ClearTextReporter -           <AppButton variant="light" size="large">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -               variant="caption"
16:45:05 (2632) DEBUG ClearTextReporter -               translationKey={buttonLabelTranslationKey}
16:45:05 (2632) DEBUG ClearTextReporter -             />
16:45:05 (2632) DEBUG ClearTextReporter -           </AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   }: CallToActionSectionItemProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/call-to-action/CallToAction.tsx:7:28
16:45:05 (2632) DEBUG ClearTextReporter -   const CallToAction = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="call-to-action">
16:45:05 (2632) DEBUG ClearTextReporter -         {callToActionItems.map((itemData) => (
16:45:05 (2632) DEBUG ClearTextReporter -           <CallToActionItem key={itemData.titleTranslationKey} {...itemData} />
16:45:05 (2632) DEBUG ClearTextReporter -         ))}
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const CallToAction = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/call-to-action/CallToAction.tsx:10:30
16:45:05 (2632) DEBUG ClearTextReporter -         {callToActionItems.map((itemData) => (
16:45:05 (2632) DEBUG ClearTextReporter -           <CallToActionItem key={itemData.titleTranslationKey} {...itemData} />
16:45:05 (2632) DEBUG ClearTextReporter -         ))}
16:45:05 (2632) DEBUG ClearTextReporter +         {callToActionItems.map(() => undefined)}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/category-section/components/CategoryItem.tsx:9:63
16:45:05 (2632) DEBUG ClearTextReporter -   const CategoryItem = ({ label, image }: CategoryItemProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -         className="spa-category-section__element"
16:45:05 (2632) DEBUG ClearTextReporter -         data-testid="spa-category-section-item"
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -           component="img"
16:45:05 (2632) DEBUG ClearTextReporter -           src={image}
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-category-section__image"
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={label}
16:45:05 (2632) DEBUG ClearTextReporter -           variant="subtitle2"
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-category-section__label"
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const CategoryItem = ({ label, image }: CategoryItemProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/category-section/CategorySection.tsx:8:31
16:45:05 (2632) DEBUG ClearTextReporter -   const CategorySection = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const categoryItems = categoryData.map((element) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <CategoryItem
16:45:05 (2632) DEBUG ClearTextReporter -         key={element.id}
16:45:05 (2632) DEBUG ClearTextReporter -         label={element.label}
16:45:05 (2632) DEBUG ClearTextReporter -         image={element.image}
16:45:05 (2632) DEBUG ClearTextReporter -       />
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="spa-category-section">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey="categorySection.title"
16:45:05 (2632) DEBUG ClearTextReporter -           variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-category-section__title"
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox className="spa-category-section__container">
16:45:05 (2632) DEBUG ClearTextReporter -           {categoryItems}
16:45:05 (2632) DEBUG ClearTextReporter -         </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const CategorySection = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/category-section/CategorySection.tsx:9:42
16:45:05 (2632) DEBUG ClearTextReporter -     const categoryItems = categoryData.map((element) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <CategoryItem
16:45:05 (2632) DEBUG ClearTextReporter -         key={element.id}
16:45:05 (2632) DEBUG ClearTextReporter -         label={element.label}
16:45:05 (2632) DEBUG ClearTextReporter -         image={element.image}
16:45:05 (2632) DEBUG ClearTextReporter -       />
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter +     const categoryItems = categoryData.map(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:15:22
16:45:05 (2632) DEBUG ClearTextReporter -   const Footer = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -           component={item.href ? AppLink : undefined}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href as string}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppLink to={item.href}>{item.element}</AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           component={AppLink}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href}
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           component={AppLink}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href}
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="footer" component="footer">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="footer__container">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -                 className="footer__list-title"
16:45:05 (2632) DEBUG ClearTextReporter -                 translationKey="footer.location.title"
16:45:05 (2632) DEBUG ClearTextReporter -                 variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -               />
16:45:05 (2632) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
16:45:05 (2632) DEBUG ClearTextReporter -                 {locationItems}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppBox className="footer__socials" component="ul">
16:45:05 (2632) DEBUG ClearTextReporter -                 {socialsItems}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -                 className="footer__list-title"
16:45:05 (2632) DEBUG ClearTextReporter -                 translationKey="footer.support.title"
16:45:05 (2632) DEBUG ClearTextReporter -                 variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -               />
16:45:05 (2632) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
16:45:05 (2632) DEBUG ClearTextReporter -                 {customerSupportItems}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -                 className="footer__list-title"
16:45:05 (2632) DEBUG ClearTextReporter -                 translationKey="footer.policy.title"
16:45:05 (2632) DEBUG ClearTextReporter -                 variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -               />
16:45:05 (2632) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
16:45:05 (2632) DEBUG ClearTextReporter -                 {policyItems}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppContainer>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const Footer = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:27:47
16:45:05 (2632) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppLink to={item.href}>{item.element}</AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter +     const socialsItems = socialsFooterItems.map(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:16:49
16:45:05 (2632) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -           component={item.href ? AppLink : undefined}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href as string}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter +     const locationItems = locationFooterItems.map(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:33:63
16:45:05 (2632) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           component={AppLink}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href}
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter +     const customerSupportItems = customerSupportFooterItems.map(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:44:45
16:45:05 (2632) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           className="footer__list-item-link"
16:45:05 (2632) DEBUG ClearTextReporter -           component={AppLink}
16:45:05 (2632) DEBUG ClearTextReporter -           to={item.href}
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={item.label}
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     ));
16:45:05 (2632) DEBUG ClearTextReporter +     const policyItems = policyFooterItems.map(() => undefined);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/header/components/header-categories/HeaderCategories.tsx:10:32
16:45:05 (2632) DEBUG ClearTextReporter -   const HeaderCategories = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="menu">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppContainer maxWidth="xl" className="menu__container">
16:45:05 (2632) DEBUG ClearTextReporter -           {categories.map((category) => (
16:45:05 (2632) DEBUG ClearTextReporter -             <AppLink
16:45:05 (2632) DEBUG ClearTextReporter -               to={category.href}
16:45:05 (2632) DEBUG ClearTextReporter -               variant="colored"
16:45:05 (2632) DEBUG ClearTextReporter -               isNavLink
16:45:05 (2632) DEBUG ClearTextReporter -               key={category.label}
16:45:05 (2632) DEBUG ClearTextReporter -             >
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography variant="caption" data-testid="menu-item">
16:45:05 (2632) DEBUG ClearTextReporter -                 {category.label}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -           ))}
16:45:05 (2632) DEBUG ClearTextReporter -         </AppContainer>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const HeaderCategories = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: HeaderCategories renders categories correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/header/components/header-categories/HeaderCategories.tsx:14:25
16:45:05 (2632) DEBUG ClearTextReporter -           {categories.map((category) => (
16:45:05 (2632) DEBUG ClearTextReporter -             <AppLink
16:45:05 (2632) DEBUG ClearTextReporter -               to={category.href}
16:45:05 (2632) DEBUG ClearTextReporter -               variant="colored"
16:45:05 (2632) DEBUG ClearTextReporter -               isNavLink
16:45:05 (2632) DEBUG ClearTextReporter -               key={category.label}
16:45:05 (2632) DEBUG ClearTextReporter -             >
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography variant="caption" data-testid="menu-item">
16:45:05 (2632) DEBUG ClearTextReporter -                 {category.label}
16:45:05 (2632) DEBUG ClearTextReporter -               </AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -           ))}
16:45:05 (2632) DEBUG ClearTextReporter +           {categories.map(() => undefined)}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: HeaderCategories renders categories correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/header/components/header-toolbar/HeaderToolbar.tsx:14:29
16:45:05 (2632) DEBUG ClearTextReporter -   const HeaderToolbar = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     // @TODO: use dynamic value instead of hardcoded
16:45:05 (2632) DEBUG ClearTextReporter -     const itemsInCartCount = 10;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const badgeContentTypography = (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppTypography variant="caption-small">{itemsInCartCount}</AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="header__wrapper">
16:45:05 (2632) DEBUG ClearTextReporter -         <AppContainer maxWidth="xl" className="header__toolbar">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="header__toolbar-logo">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppLink to="/">
16:45:05 (2632) DEBUG ClearTextReporter -               <AppLogo className="header__toolbar-logo-image" />
16:45:05 (2632) DEBUG ClearTextReporter -             </AppLink>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="header__toolbar-icons">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppIconButton>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppBadge
16:45:05 (2632) DEBUG ClearTextReporter -                 badgeContent={badgeContentTypography}
16:45:05 (2632) DEBUG ClearTextReporter -                 variant="dark"
16:45:05 (2632) DEBUG ClearTextReporter -                 size="small"
16:45:05 (2632) DEBUG ClearTextReporter -               >
16:45:05 (2632) DEBUG ClearTextReporter -                 <ShoppingCartIcon
16:45:05 (2632) DEBUG ClearTextReporter -                   className="header__toolbar-cart-icon"
16:45:05 (2632) DEBUG ClearTextReporter -                   fontSize="large"
16:45:05 (2632) DEBUG ClearTextReporter -                 />
16:45:05 (2632) DEBUG ClearTextReporter -               </AppBadge>
16:45:05 (2632) DEBUG ClearTextReporter -             </AppIconButton>
16:45:05 (2632) DEBUG ClearTextReporter -             <AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography translationKey="login.label" />
16:45:05 (2632) DEBUG ClearTextReporter -             </AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppContainer>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const HeaderToolbar = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: HeaderToolbar renders the logo
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/header/hooks/use-sticky-header/useStickyHeader.ts:3:31
16:45:05 (2632) DEBUG ClearTextReporter -   const useStickyHeader = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const headerRef = useRef<HTMLDivElement | null>(null);
16:45:05 (2632) DEBUG ClearTextReporter -     const scrollHandleRef = useRef<HTMLDivElement | null>(null);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     useEffect(() => {
16:45:05 (2632) DEBUG ClearTextReporter -       const headerElement = headerRef.current;
16:45:05 (2632) DEBUG ClearTextReporter -       const targetElement = scrollHandleRef.current;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       if (!headerElement || !targetElement) {
16:45:05 (2632) DEBUG ClearTextReporter -         return;
16:45:05 (2632) DEBUG ClearTextReporter -       }
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       const observer = new IntersectionObserver(
16:45:05 (2632) DEBUG ClearTextReporter -         ([entry]) => {
16:45:05 (2632) DEBUG ClearTextReporter -           if (!entry.isIntersecting) {
16:45:05 (2632) DEBUG ClearTextReporter -             const headerHeight = `-${headerElement.clientHeight}px`;
16:45:05 (2632) DEBUG ClearTextReporter -             headerElement.style.setProperty("--top", headerHeight);
16:45:05 (2632) DEBUG ClearTextReporter -           } else {
16:45:05 (2632) DEBUG ClearTextReporter -             headerElement.style.setProperty("--top", "0");
16:45:05 (2632) DEBUG ClearTextReporter -           }
16:45:05 (2632) DEBUG ClearTextReporter -         },
16:45:05 (2632) DEBUG ClearTextReporter -         { rootMargin: "300px" }
16:45:05 (2632) DEBUG ClearTextReporter -       );
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       observer.observe(targetElement);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -       return () => observer.unobserve(targetElement);
16:45:05 (2632) DEBUG ClearTextReporter -     }, []);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return { headerRef, scrollHandleRef } as const;
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const useStickyHeader = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: renders Header correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/header/Header.tsx:9:22
16:45:05 (2632) DEBUG ClearTextReporter -   const Header = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const { headerRef, scrollHandleRef } = useStickyHeader();
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox ref={scrollHandleRef} data-scroll-handle />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox ref={headerRef} className="header">
16:45:05 (2632) DEBUG ClearTextReporter -           <HeaderToolbar />
16:45:05 (2632) DEBUG ClearTextReporter -           <HeaderCategories />
16:45:05 (2632) DEBUG ClearTextReporter -         </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -       </>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const Header = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: renders Header correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/intro-banner/IntroBanner.tsx:12:27
16:45:05 (2632) DEBUG ClearTextReporter -   const IntroBanner = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const currentImageIndex = useIntervalSwitcher(introBannerImages.length);
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const badgeContent = (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppTypography variant="body" translationKey="introBanner.badge" />
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox
16:45:05 (2632) DEBUG ClearTextReporter -         className={`spa-banner-intro spa-banner-intro--image-${currentImageIndex}`}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="spa-banner-intro__wrapper">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppBadge
16:45:05 (2632) DEBUG ClearTextReporter -               variant="danger"
16:45:05 (2632) DEBUG ClearTextReporter -               size="large"
16:45:05 (2632) DEBUG ClearTextReporter -               isRounded={false}
16:45:05 (2632) DEBUG ClearTextReporter -               badgeContent={badgeContent}
16:45:05 (2632) DEBUG ClearTextReporter -             />
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -               className="spa-banner-intro__heading"
16:45:05 (2632) DEBUG ClearTextReporter -               variant="h1"
16:45:05 (2632) DEBUG ClearTextReporter -               translationKey="introBanner.header"
16:45:05 (2632) DEBUG ClearTextReporter -             />
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -               variant="subtitle2"
16:45:05 (2632) DEBUG ClearTextReporter -               translationKey="introBanner.paragraphfirst"
16:45:05 (2632) DEBUG ClearTextReporter -               className="spa-banner-intro__desctiption"
16:45:05 (2632) DEBUG ClearTextReporter -             />
16:45:05 (2632) DEBUG ClearTextReporter -             <AppButton size="large" className="spa-banner-intro__button">
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography variant="body" translationKey="introBanner.button" />
16:45:05 (2632) DEBUG ClearTextReporter -             </AppButton>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppContainer>
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const IntroBanner = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: IntroBanner should render IntroBanner title
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/page-wrapper/PageWrapper.tsx:12:6
16:45:05 (2632) DEBUG ClearTextReporter -   ) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppContainer
16:45:05 (2632) DEBUG ClearTextReporter -         className="spa-page-wrapper"
16:45:05 (2632) DEBUG ClearTextReporter -         maxWidth="xl"
16:45:05 (2632) DEBUG ClearTextReporter -         ref={ref}
16:45:05 (2632) DEBUG ClearTextReporter -         {...props}
16:45:05 (2632) DEBUG ClearTextReporter -       >
16:45:05 (2632) DEBUG ClearTextReporter -         {children}
16:45:05 (2632) DEBUG ClearTextReporter -       </AppContainer>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   ) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/subintro/components/SubintroItem.tsx:9:64
16:45:05 (2632) DEBUG ClearTextReporter -   const SubintroItem = ({ content, icon }: SubintroItemProps) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="spa-subintro__element" data-testid="spa-subintro-item">
16:45:05 (2632) DEBUG ClearTextReporter -         <img className="spa-subintro__icon" src={icon} />
16:45:05 (2632) DEBUG ClearTextReporter -         <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -           translationKey={content}
16:45:05 (2632) DEBUG ClearTextReporter -           variant="subtitle2"
16:45:05 (2632) DEBUG ClearTextReporter -           className="spa-subintro__content"
16:45:05 (2632) DEBUG ClearTextReporter -         />
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const SubintroItem = ({ content, icon }: SubintroItemProps) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/subintro/Subintro.tsx:7:24
16:45:05 (2632) DEBUG ClearTextReporter -   const Subintro = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <AppBox className="spa-subintro">
16:45:05 (2632) DEBUG ClearTextReporter -         {subintroData.map((element) => (
16:45:05 (2632) DEBUG ClearTextReporter -           <SubintroItem
16:45:05 (2632) DEBUG ClearTextReporter -             icon={element.icon}
16:45:05 (2632) DEBUG ClearTextReporter -             key={element.id}
16:45:05 (2632) DEBUG ClearTextReporter -             content={element.content}
16:45:05 (2632) DEBUG ClearTextReporter -           />
16:45:05 (2632) DEBUG ClearTextReporter -         ))}
16:45:05 (2632) DEBUG ClearTextReporter -       </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const Subintro = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/layouts/subintro/Subintro.tsx:10:25
16:45:05 (2632) DEBUG ClearTextReporter -         {subintroData.map((element) => (
16:45:05 (2632) DEBUG ClearTextReporter -           <SubintroItem
16:45:05 (2632) DEBUG ClearTextReporter -             icon={element.icon}
16:45:05 (2632) DEBUG ClearTextReporter -             key={element.id}
16:45:05 (2632) DEBUG ClearTextReporter -             content={element.content}
16:45:05 (2632) DEBUG ClearTextReporter -           />
16:45:05 (2632) DEBUG ClearTextReporter -         ))}
16:45:05 (2632) DEBUG ClearTextReporter +         {subintroData.map(() => undefined)}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:9:28
16:45:05 (2632) DEBUG ClearTextReporter -   const ProductsPage = () => {
16:45:05 (2632) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     //@TODO Create Skeleton for product items
16:45:05 (2632) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const productCards = products
16:45:05 (2632) DEBUG ClearTextReporter -       ? products
16:45:05 (2632) DEBUG ClearTextReporter -           .slice(0, 4)
16:45:05 (2632) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
16:45:05 (2632) DEBUG ClearTextReporter -       : null;
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return (
16:45:05 (2632) DEBUG ClearTextReporter -       <PageWrapper>
16:45:05 (2632) DEBUG ClearTextReporter -         <AppBox className="spa-products-page">
16:45:05 (2632) DEBUG ClearTextReporter -           <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -             variant="h3"
16:45:05 (2632) DEBUG ClearTextReporter -             className="spa-products-page__header"
16:45:05 (2632) DEBUG ClearTextReporter -             translationKey="productsAll.label"
16:45:05 (2632) DEBUG ClearTextReporter -             component="h1"
16:45:05 (2632) DEBUG ClearTextReporter -           />
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="spa-products-page__info">
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography className="spa-products-page__count" component="span">
16:45:05 (2632) DEBUG ClearTextReporter -               {products?.length || 0}
16:45:05 (2632) DEBUG ClearTextReporter -               <AppTypography
16:45:05 (2632) DEBUG ClearTextReporter -                 translationKey="productsItems.label"
16:45:05 (2632) DEBUG ClearTextReporter -                 component="span"
16:45:05 (2632) DEBUG ClearTextReporter -               />
16:45:05 (2632) DEBUG ClearTextReporter -             </AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -             {/**@TODO Create dropdown for sort by */}
16:45:05 (2632) DEBUG ClearTextReporter -             <AppTypography className="spa-products-page__sort" component="span">
16:45:05 (2632) DEBUG ClearTextReporter -               Sort by: Recommended
16:45:05 (2632) DEBUG ClearTextReporter -             </AppTypography>
16:45:05 (2632) DEBUG ClearTextReporter -           </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -           <AppBox className="spa-products-page__grid">{productCards}</AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -         </AppBox>
16:45:05 (2632) DEBUG ClearTextReporter -       </PageWrapper>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const ProductsPage = () => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:13:7
16:45:05 (2632) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
16:45:05 (2632) DEBUG ClearTextReporter -               {products?.length || 0}
16:45:05 (2632) DEBUG ClearTextReporter +               {false}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
16:45:05 (2632) DEBUG ClearTextReporter -               {products?.length || 0}
16:45:05 (2632) DEBUG ClearTextReporter +               {true}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] LogicalOperator
16:45:05 (2632) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
16:45:05 (2632) DEBUG ClearTextReporter -               {products?.length || 0}
16:45:05 (2632) DEBUG ClearTextReporter +               {products?.length && 0}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/cn.ts:1:42
16:45:05 (2632) DEBUG ClearTextReporter -   const cn = (...classNames: unknown[]) => {
16:45:05 (2632) DEBUG ClearTextReporter -     return classNames
16:45:05 (2632) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter -       .join(" ");
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const cn = (...classNames: unknown[]) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/utils/cn.ts:3:13
16:45:05 (2632) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter +       .filter(() => undefined)
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/cn.ts:3:28
16:45:05 (2632) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter +       .filter((className) => false)
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] EqualityOperator
16:45:05 (2632) DEBUG ClearTextReporter src/utils/cn.ts:3:28
16:45:05 (2632) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter +       .filter((className) => typeof className !== "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] EqualityOperator
16:45:05 (2632) DEBUG ClearTextReporter src/utils/cn.ts:3:61
16:45:05 (2632) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
16:45:05 (2632) DEBUG ClearTextReporter +       .filter((className) => typeof className === "string" && className === "")
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:1:68
16:45:05 (2632) DEBUG ClearTextReporter -   const createQueryParamsString = (query: Record<string, string>) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const queryParams = new URLSearchParams();
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
16:45:05 (2632) DEBUG ClearTextReporter -       if (value) {
16:45:05 (2632) DEBUG ClearTextReporter -         queryParams.append(key, value);
16:45:05 (2632) DEBUG ClearTextReporter -       }
16:45:05 (2632) DEBUG ClearTextReporter -     });
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return queryParams.toString();
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   const createQueryParamsString = (query: Record<string, string>) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
16:45:05 (2632) DEBUG ClearTextReporter -       if (value) {
16:45:05 (2632) DEBUG ClearTextReporter +       if (false) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
16:45:05 (2632) DEBUG ClearTextReporter -       if (value) {
16:45:05 (2632) DEBUG ClearTextReporter +       if (true) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should handle empty query parameters correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:4:51
16:45:05 (2632) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
16:45:05 (2632) DEBUG ClearTextReporter -       if (value) {
16:45:05 (2632) DEBUG ClearTextReporter -         queryParams.append(key, value);
16:45:05 (2632) DEBUG ClearTextReporter -       }
16:45:05 (2632) DEBUG ClearTextReporter -     });
16:45:05 (2632) DEBUG ClearTextReporter +     Object.entries(query).forEach(([key, value]) => {});
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:16
16:45:05 (2632) DEBUG ClearTextReporter -       if (value) {
16:45:05 (2632) DEBUG ClearTextReporter -         queryParams.append(key, value);
16:45:05 (2632) DEBUG ClearTextReporter -       }
16:45:05 (2632) DEBUG ClearTextReporter +       if (value) {}
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:13:72
16:45:05 (2632) DEBUG ClearTextReporter -   export const createUrlPath = (URL: string, params = "", query = {}) => {
16:45:05 (2632) DEBUG ClearTextReporter -     let trimmedUrl = URL;
16:45:05 (2632) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
16:45:05 (2632) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const queryParams = createQueryParamsString(query);
16:45:05 (2632) DEBUG ClearTextReporter -     const queryParamsString = queryParams ? `?${queryParams}` : "";
16:45:05 (2632) DEBUG ClearTextReporter -     const paramsString = params ? `/${params.replace(/^\/+/g, "")}` : "";
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return `${trimmedUrl}${paramsString}${queryParamsString}`;
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   export const createUrlPath = (URL: string, params = "", query = {}) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ConditionalExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
16:45:05 (2632) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
16:45:05 (2632) DEBUG ClearTextReporter +     while (false) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] MethodExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
16:45:05 (2632) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
16:45:05 (2632) DEBUG ClearTextReporter +     while (trimmedUrl.startsWith("/")) {
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Timeout] MethodExpression
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:18
16:45:05 (2632) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
16:45:05 (2632) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl;
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Timeout] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:36
16:45:05 (2632) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
16:45:05 (2632) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
16:45:05 (2632) DEBUG ClearTextReporter -     }
16:45:05 (2632) DEBUG ClearTextReporter +     while (trimmedUrl.endsWith("/")) {}
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] UnaryOperator
16:45:05 (2632) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:38
16:45:05 (2632) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
16:45:05 (2632) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl.slice(0, +1);
16:45:05 (2632) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ObjectLiteral
16:45:05 (2632) DEBUG ClearTextReporter src/utils/test-utils.tsx:28:32
16:45:05 (2632) DEBUG ClearTextReporter -     const store = configureStore({
16:45:05 (2632) DEBUG ClearTextReporter -       reducer,
16:45:05 (2632) DEBUG ClearTextReporter -       preloadedState
16:45:05 (2632) DEBUG ClearTextReporter -     });
16:45:05 (2632) DEBUG ClearTextReporter +     const store = configureStore({});
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] BlockStatement
16:45:05 (2632) DEBUG ClearTextReporter src/utils/test-utils.tsx:27:6
16:45:05 (2632) DEBUG ClearTextReporter -   ) => {
16:45:05 (2632) DEBUG ClearTextReporter -     const store = configureStore({
16:45:05 (2632) DEBUG ClearTextReporter -       reducer,
16:45:05 (2632) DEBUG ClearTextReporter -       preloadedState
16:45:05 (2632) DEBUG ClearTextReporter -     });
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <Provider store={store}>
16:45:05 (2632) DEBUG ClearTextReporter -         <MemoryRouter initialEntries={initialEntries}>
16:45:05 (2632) DEBUG ClearTextReporter -           <I18nProivider>
16:45:05 (2632) DEBUG ClearTextReporter -             <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
16:45:05 (2632) DEBUG ClearTextReporter -           </I18nProivider>
16:45:05 (2632) DEBUG ClearTextReporter -         </MemoryRouter>
16:45:05 (2632) DEBUG ClearTextReporter -       </Provider>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter -   
16:45:05 (2632) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
16:45:05 (2632) DEBUG ClearTextReporter -   };
16:45:05 (2632) DEBUG ClearTextReporter +   ) => {};
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ArrowFunction
16:45:05 (2632) DEBUG ClearTextReporter src/utils/test-utils.tsx:33:19
16:45:05 (2632) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
16:45:05 (2632) DEBUG ClearTextReporter -       <Provider store={store}>
16:45:05 (2632) DEBUG ClearTextReporter -         <MemoryRouter initialEntries={initialEntries}>
16:45:05 (2632) DEBUG ClearTextReporter -           <I18nProivider>
16:45:05 (2632) DEBUG ClearTextReporter -             <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
16:45:05 (2632) DEBUG ClearTextReporter -           </I18nProivider>
16:45:05 (2632) DEBUG ClearTextReporter -         </MemoryRouter>
16:45:05 (2632) DEBUG ClearTextReporter -       </Provider>
16:45:05 (2632) DEBUG ClearTextReporter -     );
16:45:05 (2632) DEBUG ClearTextReporter +     const Wrapper = () => undefined;
16:45:05 (2632) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG ClearTextReporter [Killed] ObjectLiteral
16:45:05 (2632) DEBUG ClearTextReporter src/utils/test-utils.tsx:43:21
16:45:05 (2632) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
16:45:05 (2632) DEBUG ClearTextReporter +     return render(ui, {});
16:45:05 (2632) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
16:45:05 (2632) DEBUG ClearTextReporter 
16:45:05 (2632) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
16:45:05 (2632) DEBUG JsonReporter Using relative path reports\stryker\stryker.json
16:45:05 (2632) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
16:45:05 (2632) INFO JsonReporter Your report can be found at: file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/reports/stryker/stryker.json
16:45:05 (2632) INFO HtmlReporter Your report can be found at: file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/reports/stryker/stryker.html
16:45:05 (2632) INFO MutationTestExecutor Done in 4 minutes 33 seconds.
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 15080
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 12048
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 14056
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 14632
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 4248
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 14548
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 1356
16:45:05 (2632) DEBUG ChildProcessProxy Disposing of worker process 6264
16:45:05 (2632) DEBUG ChildProcessProxy Kill 15080
16:45:05 (2632) DEBUG ChildProcessProxy Kill 12048
16:45:05 (2632) DEBUG ChildProcessProxy Kill 14632
16:45:05 (2632) DEBUG ChildProcessProxy Kill 14056
16:45:05 (2632) DEBUG ChildProcessProxy Kill 4248
16:45:05 (2632) DEBUG ChildProcessProxy Kill 14548
16:45:05 (2632) DEBUG ChildProcessProxy Kill 1356
16:45:06 (2632) DEBUG ChildProcessProxy Kill 6264
16:45:06 (2632) DEBUG TemporaryDirectory Deleting stryker temp directory D:\Максим\work\spa-orders\code\stryker-tmp
23:08:01 (15948) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
23:08:02 (15948) INFO ProjectReader Found 59 of 533 file(s) to be mutated using incremental report with 437 mutant(s), and 49 test(s).
23:08:02 (15948) DEBUG ProjectReader All input files: [
  "D:\\Максим\\work\\spa-orders\\code\\.dockerignore",
  "D:\\Максим\\work\\spa-orders\\code\\.env.local",
  "D:\\Максим\\work\\spa-orders\\code\\.nvmrc",
  "D:\\Максим\\work\\spa-orders\\code\\.prettierrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\.eslintrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\babel.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.esm.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\webpack.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\__mocks__\\fileMock.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\clover.xml",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov.info",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\Dockerfile",
  "D:\\Максим\\work\\spa-orders\\code\\eslint.config.mjs",
  "D:\\Максим\\work\\spa-orders\\code\\nginx.conf",
  "D:\\Максим\\work\\spa-orders\\code\\package-lock.json",
  "D:\\Максим\\work\\spa-orders\\code\\package.json",
  "D:\\Максим\\work\\spa-orders\\code\\sonar-project.properties",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\icons\\.gitkeep",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\computer.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\phone.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\computer-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\mobile-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\tablet-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-1.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-2.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-3.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\logo.png",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\box-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\clock-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\moped-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\percent-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.test.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.test.jsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_reset.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_root.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_all.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_colors.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_functions.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_mixins.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_typography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_variables.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\global.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\assets.d.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\product.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\snackbar.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\tests\\createUrlPath.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\stryker.conf.js",
  "D:\\Максим\\work\\spa-orders\\code\\tsconfig.json",
  "D:\\Максим\\work\\spa-orders\\code\\{"
]
23:08:02 (15948) DEBUG ProjectReader Files to mutate: [
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx"
]
23:08:02 (15948) DEBUG TemporaryDirectory Using temp directory "D:\Максим\work\spa-orders\code\stryker-tmp"
23:08:02 (15948) DEBUG Instrumenter Instrumenting 59 source files with mutants
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.tsx (17 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.types.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-box\AppBox.tsx (2 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-button\AppButton.tsx (12 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-container\AppContainer.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-icon-button\AppIconButton.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.tsx (12 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.types.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.tsx (6 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.types.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-logo\AppLogo.tsx (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-snackbar\AppSnackbar.tsx (4 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\app-typography\AppTypography.tsx (18 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\components\product-card\ProductCard.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\constants\methods.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\constants\requests.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\constants\routes.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\context\I18nProvider.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\hooks\use-interval-switcher\useIntervalSwitcher.ts (8 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\hooks\use-redux\useRedux.ts (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\hooks\use-snackbar\useSnackbar.ts (4 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.constants.ts (73 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.tsx (5 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.constants.ts (13 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.tsx (2 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\call-to-action\components\call-to-action-item\CallToActionItem.tsx (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.constants.ts (7 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.tsx (2 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\category-section\components\CategoryItem.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.constants.tsx (40 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.tsx (5 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.constants.ts (9 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.tsx (2 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\header\components\header-toolbar\HeaderToolbar.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\header\Header.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\header\hooks\use-sticky-header\useStickyHeader.ts (22 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.constants.ts (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.tsx (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\page-wrapper\PageWrapper.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\root-layout\RootLayout.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\subintro\components\SubintroItem.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.constants.ts (9 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.tsx (2 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\main.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\messages.ts (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\pages\error\ErrorPage.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\pages\home\HomePage.tsx (9 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\pages\not-found\NotFoundPage.tsx (1 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\pages\products\ProductsPage.tsx (9 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\routes\routes.tsx (9 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\api\appApi.ts (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\api\productsApi.ts (11 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\constants.ts (0 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\slices\productsSlice.ts (28 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\slices\snackbarSlice.ts (23 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\store\store.ts (3 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\utils\cn.ts (13 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\utils\createUrlPath.ts (21 mutant(s))
23:08:02 (15948) DEBUG Instrumenter Instrumented src\utils\test-utils.tsx (7 mutant(s))
23:08:02 (15948) INFO Instrumenter Instrumented 59 source file(s) with 437 mutant(s)
23:08:04 (15948) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: 'D:\\Максим\\work\\spa-orders\\code\\tsconfig.json',
  mutate: false
}
23:08:05 (15948) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
23:08:05 (15948) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 8340  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:06 (8340) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:06 (8340) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:06 (15948) DEBUG Sandbox Creating a sandbox for files in D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:06 (15948) DEBUG Sandbox Start symlink node_modules
23:08:06 (15948) DEBUG Sandbox Create symlink from D:\Максим\work\spa-orders\code\node_modules to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605\node_modules
23:08:06 (15948) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
23:08:06 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 12768  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:06 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 540  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:08 (12768) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:08 (12768) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:08 (540) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:08 (540) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:08 (12768) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:09 (540) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:09 (12768) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:09 (12768) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:09 (12768) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:09 (12768) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:09 (15948) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
23:08:09 (15948) DEBUG DryRunExecutor Using timeout of 1200000 ms.
23:08:09 (15948) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
23:08:09 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 9892  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:09 (540) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:09 (12768) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-badge\\AppBadge.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-badge\\AppBadge.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-box\\AppBox.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-button\\AppButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-container\\AppContainer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-icon-button\\AppIconButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-link\\AppLink.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-link\\AppLink.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-loader\\AppLoader.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-loader\\AppLoader.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-logo\\AppLogo.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-snackbar\\AppSnackbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\app-typography\\AppTypography.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\components\\product-card\\ProductCard.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\constants\\methods.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\constants\\requests.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\constants\\routes.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\context\\I18nProvider.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-redux\\useRedux.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-snackbar\\useSnackbar.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\best-sellers\\BestSellers.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\best-sellers\\BestSellers.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\call-to-action\\CallToAction.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\call-to-action\\CallToAction.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\category-section\\CategorySection.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\category-section\\CategorySection.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\category-section\\components\\CategoryItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\footer\\Footer.constants.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\footer\\Footer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\header\\Header.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\intro-banner\\IntroBanner.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\intro-banner\\IntroBanner.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\page-wrapper\\PageWrapper.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\root-layout\\RootLayout.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\subintro\\components\\SubintroItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\subintro\\Subintro.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\layouts\\subintro\\Subintro.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\main.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\messages.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\pages\\error\\ErrorPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\pages\\home\\HomePage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\pages\\not-found\\NotFoundPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\pages\\products\\ProductsPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\routes\\routes.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\api\\appApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\api\\productsApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\slices\\productsSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\slices\\snackbarSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\store\\store.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\utils\\cn.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\utils\\createUrlPath.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
23:08:09 (540) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:09 (540) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:09 (540) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:09 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 13688  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:10 (9892) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:10 (9892) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:10 (13688) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:10 (13688) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:11 (9892) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:11 (13688) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:11 (9892) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:11 (13688) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:11 (9892) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:11 (9892) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:11 (9892) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:11 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 17424  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:11 (13688) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:11 (13688) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:11 (13688) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:11 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 18236  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:12 (17424) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:12 (17424) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:12 (18236) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:12 (18236) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:12 (17424) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:12 (18236) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:12 (17424) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:12 (18236) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:12 (17424) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:12 (18236) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:12 (17424) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:12 (17424) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:12 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 13496  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:12 (18236) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:12 (18236) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:12 (15948) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 1876  (using args --no-compilation-cache --max-old-space-size=8192)
23:08:13 (1876) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:13 (1876) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:13 (13496) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:08:13 (13496) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:08:13 (1876) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:13 (13496) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox6591605
23:08:13 (1876) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:13 (13496) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:08:13 (1876) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:13 (1876) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:13 (1876) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:13 (13496) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:08:13 (13496) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:08:13 (13496) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:08:21 (15948) TRACE ChildProcessProxy (node:12768) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

23:08:41 (15948) INFO DryRunExecutor Initial test run succeeded. Ran 53 tests in 31 seconds (net 1870 ms, overhead 29985 ms).
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/hooks/use-snackbar/useSnackbar.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/hooks/use-sticky-header/useStickyHeader.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/root-layout/RootLayout.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/main.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/pages/error/ErrorPage.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/pages/home/HomePage.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/pages/not-found/NotFoundPage.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/routes/routes.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/store/api/appApi.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/store/api/productsApi.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/store/slices/productsSlice.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/store/slices/snackbarSlice.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/store/store.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-badge/AppBadge.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-box/AppBox.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-button/AppButton.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-link/AppLink.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-loader/AppLoader.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-logo/AppLogo.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-snackbar/AppSnackbar.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-typography/AppTypography.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/hooks/use-interval-switcher/useIntervalSwitcher.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/hooks/use-redux/useRedux.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/best-sellers/BestSellers.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/call-to-action/CallToAction.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/category-section/CategorySection.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/footer/Footer.constants.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/components/header-categories/HeaderCategories.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/subintro/Subintro.constants.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/messages.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/utils/cn.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/utils/createUrlPath.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/utils/test-utils.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-icon-button/AppIconButton.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-container/AppContainer.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/product-card/ProductCard.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/best-sellers/BestSellers.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/context/I18nProvider.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/call-to-action/CallToAction.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/category-section/CategorySection.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/category-section/components/CategoryItem.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/footer/Footer.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/components/header-categories/HeaderCategories.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/Header.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/components/header-toolbar/HeaderToolbar.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/subintro/Subintro.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/subintro/components/SubintroItem.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/pages/products/ProductsPage.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/page-wrapper/PageWrapper.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/best-sellers/BestSellers.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/utils/tests/createUrlPath.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/product-card/ProductCard.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-snackbar/AppSnackbar.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/pages/products/ProductsPage.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/footer/Footer.test.jsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-typography/AppTypography.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-link/AppLink.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-badge/AppBadge.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/Header.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/components/header-categories/HeaderCategories.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-button/AppButton.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/hooks/use-interval-switcher/useIntervalSwitcher.test.ts
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/category-section/CategorySection.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/subintro/Subintro.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/header/components/header-toolbar/HeaderToolbar.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/call-to-action/CallToAction.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-container/AppContainer.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/page-wrapper/PageWrapper.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-icon-button/AppIconButton.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-box/AppBox.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-loader/AppLoader.test.tsx
23:08:41 (15948) TRACE IncrementalDiffer Diffing src/components/app-logo/AppLogo.test.tsx
23:08:41 (15948) INFO IncrementalDiffer Incremental report:
	Mutants:	0 files changed (+0 -0)
	Tests:		1 files changed (+4 -0)
	Result:		202 of 437 mutant result(s) are reused.
23:08:41 (15948) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		No changes
	Tests: 
		src/hooks/use-snackbar/useSnackbar.test.tsx +4 -0
23:08:41 (15948) DEBUG ChildProcessProxy Disposing of worker process 8340
23:08:41 (15948) DEBUG TimeoutDecorator Starting timeout timer (630141 ms) for a test run
23:08:41 (15948) DEBUG TimeoutDecorator Starting timeout timer (630003 ms) for a test run
23:08:41 (15948) DEBUG TimeoutDecorator Starting timeout timer (629997 ms) for a test run
23:08:41 (15948) DEBUG TimeoutDecorator Starting timeout timer (629997 ms) for a test run
23:08:41 (15948) DEBUG ChildProcessProxy Kill 8340
23:08:41 (13688) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-snackbar\\useSnackbar.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useSnackbar hook calls open snackbar with timeout correctly)"}
23:08:41 (9892) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-snackbar\\useSnackbar.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useSnackbar hook calls open snackbar correctly)"}
23:08:41 (540) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-snackbar\\useSnackbar.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useSnackbar hook renders correctly)|(useSnackbar hook calls open snackbar correctly)|(useSnackbar hook calls open snackbar with timeout correctly)|(useSnackbar hook calls close snackbar correctly)"}
23:08:41 (17424) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox6591605\\src\\hooks\\use-snackbar\\useSnackbar.ts"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useSnackbar hook calls close snackbar correctly)"}
23:08:48 (15948) TRACE ChildProcessProxy (node:540) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

23:08:48 (15948) TRACE ChildProcessProxy (node:13688) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

23:08:48 (15948) TRACE ChildProcessProxy (node:9892) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

23:08:48 (15948) TRACE ChildProcessProxy (node:17424) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.
(Use `node --trace-deprecation ...` to show where the warning was created)

23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:14:22
23:08:49 (15948) DEBUG ClearTextReporter -   }: AppBadgeProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <Badge
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn(
23:08:49 (15948) DEBUG ClearTextReporter -           "spa-badge",
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-badge__${variant}`,
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-badge__${size}`,
23:08:49 (15948) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter -           !children && "spa-badge__no-children",
23:08:49 (15948) DEBUG ClearTextReporter -           className
23:08:49 (15948) DEBUG ClearTextReporter -         )}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         {children}
23:08:49 (15948) DEBUG ClearTextReporter -       </Badge>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: AppBadgeProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppBadge renders AppBadge component
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
23:08:49 (15948) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter +           true,
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
23:08:49 (15948) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter +           false,
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
23:08:49 (15948) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter +           !isRounded || "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BooleanLiteral
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
23:08:49 (15948) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter +           isRounded && "spa-badge__no-rounded",
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-box/AppBox.tsx:7:80
23:08:49 (15948) DEBUG ClearTextReporter -     <TElement,>(props: AppBoxProps<TElement>, ref: ForwardedRef<HTMLElement>) => {
23:08:49 (15948) DEBUG ClearTextReporter -       return <Box ref={ref} {...props} />;
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter +     <TElement,>(props: AppBoxProps<TElement>, ref: ForwardedRef<HTMLElement>) => {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: renders Header correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:23
23:08:49 (15948) DEBUG ClearTextReporter -   }: AppButtonProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <Button
23:08:49 (15948) DEBUG ClearTextReporter -         disabled={isDisabled}
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn(
23:08:49 (15948) DEBUG ClearTextReporter -           "spa-button",
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-button__${variant}`,
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-button__${size}`,
23:08:49 (15948) DEBUG ClearTextReporter -           className
23:08:49 (15948) DEBUG ClearTextReporter -         )}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         {children}
23:08:49 (15948) DEBUG ClearTextReporter -         {loader}
23:08:49 (15948) DEBUG ClearTextReporter -       </Button>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: AppButtonProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: renders Header correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:32:22
23:08:49 (15948) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
23:08:49 (15948) DEBUG ClearTextReporter +     const isDisabled = false;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:32:22
23:08:49 (15948) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
23:08:49 (15948) DEBUG ClearTextReporter +     const isDisabled = disabled && isLoading;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
23:08:49 (15948) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
23:08:49 (15948) DEBUG ClearTextReporter +     const loader = true;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: renders Header correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
23:08:49 (15948) DEBUG ClearTextReporter -     const loader = isLoading && <AppLoader variant="disabled" size="small" />;
23:08:49 (15948) DEBUG ClearTextReporter +     const loader = isLoading || <AppLoader variant="disabled" size="small" />;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-container/AppContainer.tsx:5:52
23:08:49 (15948) DEBUG ClearTextReporter -   const AppContainer = (props: AppContainerProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return <Container {...props} />;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const AppContainer = (props: AppContainerProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-icon-button/AppIconButton.tsx:9:54
23:08:49 (15948) DEBUG ClearTextReporter -   const AppIconButton = (props: AppIconButtonProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return <IconButton {...props} />;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const AppIconButton = (props: AppIconButtonProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppIconButton renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:17:37
23:08:49 (15948) DEBUG ClearTextReporter -     ({ className, ...props }, ref) => {
23:08:49 (15948) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
23:08:49 (15948) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       return <NavLink ref={ref} className={classNameCallback} {...props} />;
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter +     ({ className, ...props }, ref) => {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:18:31
23:08:49 (15948) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
23:08:49 (15948) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter +       const classNameCallback = () => undefined;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
23:08:49 (15948) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter +         cn(className, true);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
23:08:49 (15948) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter +         cn(className, false);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
23:08:49 (15948) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter +         cn(className, isActive || "spa-link--active");
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:31:21
23:08:49 (15948) DEBUG ClearTextReporter -   }: AppLinkProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const component = isNavLink ? NavLinkWrapper : ReactRouterDomLink;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <MuiLink
23:08:49 (15948) DEBUG ClearTextReporter -         component={component}
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn("spa-link", `spa-link__${variant}`)}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       />
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: AppLinkProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-loader/AppLoader.tsx:12:23
23:08:49 (15948) DEBUG ClearTextReporter -   }: AppLoaderProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <CircularProgress
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn(
23:08:49 (15948) DEBUG ClearTextReporter -           "spa-loader",
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-loader__${variant}`,
23:08:49 (15948) DEBUG ClearTextReporter -           `spa-loader__${size}`,
23:08:49 (15948) DEBUG ClearTextReporter -           className
23:08:49 (15948) DEBUG ClearTextReporter -         )}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       />
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: AppLoaderProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLoader renders AppLoader props
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-logo/AppLogo.tsx:13:55
23:08:49 (15948) DEBUG ClearTextReporter -   const AppLogo = ({ className, ...props }: AppLogo) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -         component={COMPONENT}
23:08:49 (15948) DEBUG ClearTextReporter -         src={logo}
23:08:49 (15948) DEBUG ClearTextReporter -         alt="App logo"
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn("spa-logo", className)}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       />
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const AppLogo = ({ className, ...props }: AppLogo) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: HeaderToolbar renders the logo
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-snackbar/AppSnackbar.tsx:7:39
23:08:49 (15948) DEBUG ClearTextReporter -   export default function AppSnackbar() {
23:08:49 (15948) DEBUG ClearTextReporter -     const { isOpen, config, closeSnackbar } = useSnackbar();
23:08:49 (15948) DEBUG ClearTextReporter -     const { message, variant } = config;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <Snackbar
23:08:49 (15948) DEBUG ClearTextReporter -         anchorOrigin={{ horizontal: "center", vertical: "top" }}
23:08:49 (15948) DEBUG ClearTextReporter -         open={isOpen}
23:08:49 (15948) DEBUG ClearTextReporter -         onClose={closeSnackbar}
23:08:49 (15948) DEBUG ClearTextReporter -         className="spa-snackbar"
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         <Alert
23:08:49 (15948) DEBUG ClearTextReporter -           onClose={closeSnackbar}
23:08:49 (15948) DEBUG ClearTextReporter -           severity={variant}
23:08:49 (15948) DEBUG ClearTextReporter -           variant="filled"
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-snackbar__alert"
23:08:49 (15948) DEBUG ClearTextReporter -         >
23:08:49 (15948) DEBUG ClearTextReporter -           {message}
23:08:49 (15948) DEBUG ClearTextReporter -         </Alert>
23:08:49 (15948) DEBUG ClearTextReporter -       </Snackbar>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   }
23:08:49 (15948) DEBUG ClearTextReporter +   export default function AppSnackbar() {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ObjectLiteral
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-snackbar/AppSnackbar.tsx:13:21
23:08:49 (15948) DEBUG ClearTextReporter -         anchorOrigin={{ horizontal: "center", vertical: "top" }}
23:08:49 (15948) DEBUG ClearTextReporter +         anchorOrigin={{}}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:37:64
23:08:49 (15948) DEBUG ClearTextReporter -   function getDefaultComponentTag(variant: AppTypographyVariant) {
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter -       return variant as HeadingVariant;
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
23:08:49 (15948) DEBUG ClearTextReporter -       return "span";
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return "p";
23:08:49 (15948) DEBUG ClearTextReporter -   }
23:08:49 (15948) DEBUG ClearTextReporter +   function getDefaultComponentTag(variant: AppTypographyVariant) {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter +     if (true) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter +     if (false) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] MethodExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter +     if (variant.endsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:32
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
23:08:49 (15948) DEBUG ClearTextReporter -       return variant as HeadingVariant;
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter +     if (variant.startsWith("h")) {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
23:08:49 (15948) DEBUG ClearTextReporter +     if (true) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppTypography should render <p> by default
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
23:08:49 (15948) DEBUG ClearTextReporter +     if (false) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:38
23:08:49 (15948) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
23:08:49 (15948) DEBUG ClearTextReporter -       return "span";
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter +     if (variant.startsWith("caption")) {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:57:30
23:08:49 (15948) DEBUG ClearTextReporter -   }: AppTypographyProps<T>) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const TypographyContent = translationKey ? (
23:08:49 (15948) DEBUG ClearTextReporter -       <FormattedMessage id={translationKey} {...translationProps} />
23:08:49 (15948) DEBUG ClearTextReporter -     ) : (
23:08:49 (15948) DEBUG ClearTextReporter -       children
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <Typography
23:08:49 (15948) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
23:08:49 (15948) DEBUG ClearTextReporter -         className={cn(`spa-typography`, `spa-typography__${variant}`, className)}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         {TypographyContent}
23:08:49 (15948) DEBUG ClearTextReporter -       </Typography>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: AppTypographyProps<T>) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:66:18
23:08:49 (15948) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
23:08:49 (15948) DEBUG ClearTextReporter +         component={component && getDefaultComponentTag(variant)}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/components/product-card/ProductCard.tsx:14:56
23:08:49 (15948) DEBUG ClearTextReporter -   const ProductCard = ({ product }: ProductCardProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppLink key={product.id} to="/">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox className="spa-product-card">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="spa-product-card__img">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -               alt={product.name}
23:08:49 (15948) DEBUG ClearTextReporter -               className="spa-product-card__img-name"
23:08:49 (15948) DEBUG ClearTextReporter -               component="img"
23:08:49 (15948) DEBUG ClearTextReporter -               src={product.image}
23:08:49 (15948) DEBUG ClearTextReporter -             />
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBox className="spa-product-card__description">
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography>{product.description}</AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography variant="caption">{product.name}</AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="spa-product-card__footer">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__footer-price">
23:08:49 (15948) DEBUG ClearTextReporter -               {product.price}
23:08:49 (15948) DEBUG ClearTextReporter -             </AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -             <AppButton size="large" variant="shadow">
23:08:49 (15948) DEBUG ClearTextReporter -               <AddIcon />
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography translationKey="productCard.add" />
23:08:49 (15948) DEBUG ClearTextReporter -             </AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const ProductCard = ({ product }: ProductCardProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductCard component should render product name
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/context/I18nProvider.tsx:9:65
23:08:49 (15948) DEBUG ClearTextReporter -   const I18nProivider: FC<I18nProividerProps> = ({ children }) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <IntlProvider locale="en" defaultLocale="en" messages={messages.en}>
23:08:49 (15948) DEBUG ClearTextReporter -         {children}
23:08:49 (15948) DEBUG ClearTextReporter -       </IntlProvider>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const I18nProivider: FC<I18nProividerProps> = ({ children }) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:3:70
23:08:49 (15948) DEBUG ClearTextReporter -   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const [currentIndex, setCurrentIndex] = useState(0);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     useEffect(() => {
23:08:49 (15948) DEBUG ClearTextReporter -       const interval = setInterval(() => {
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter -       }, intervalTime);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       return () => clearInterval(interval);
23:08:49 (15948) DEBUG ClearTextReporter -     }, [length, intervalTime]);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return currentIndex;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:6:19
23:08:49 (15948) DEBUG ClearTextReporter -     useEffect(() => {
23:08:49 (15948) DEBUG ClearTextReporter -       const interval = setInterval(() => {
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter -       }, intervalTime);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       return () => clearInterval(interval);
23:08:49 (15948) DEBUG ClearTextReporter -     }, [length, intervalTime]);
23:08:49 (15948) DEBUG ClearTextReporter +     useEffect(() => {}, [length, intervalTime]);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:7:40
23:08:49 (15948) DEBUG ClearTextReporter -       const interval = setInterval(() => {
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter -       }, intervalTime);
23:08:49 (15948) DEBUG ClearTextReporter +       const interval = setInterval(() => {}, intervalTime);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:23
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter +         setCurrentIndex(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArithmeticOperator
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:38
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex + 1) * length);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArithmeticOperator
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:39
23:08:49 (15948) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex - 1) % length);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-snackbar/useSnackbar.ts:27:31
23:08:49 (15948) DEBUG ClearTextReporter -     const closeSnackbar = () => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(closeSnackbarAction());
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter +     const closeSnackbar = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useSnackbar hook calls close snackbar correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-snackbar/useSnackbar.ts:19:56
23:08:49 (15948) DEBUG ClearTextReporter -     const openSnackbar = (config: BaseSnackbarConfig) => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(openSnackbarAction(config));
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter +     const openSnackbar = (config: BaseSnackbarConfig) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useSnackbar hook calls open snackbar correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-snackbar/useSnackbar.ts:23:74
23:08:49 (15948) DEBUG ClearTextReporter -     const openSnackbarWithTimeout = (config: SnackbarConfigWithTimeout) => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(openSnackbarWithTimeoutAction(config));
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter +     const openSnackbarWithTimeout = (config: SnackbarConfigWithTimeout) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useSnackbar hook calls open snackbar with timeout correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/hooks/use-snackbar/useSnackbar.ts:14:27
23:08:49 (15948) DEBUG ClearTextReporter -   const useSnackbar = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const isOpen = useIsSnackbarOpenSelector();
23:08:49 (15948) DEBUG ClearTextReporter -     const config = useSnackbarConfigSelector();
23:08:49 (15948) DEBUG ClearTextReporter -     const dispatch = useAppDispatch();
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const openSnackbar = (config: BaseSnackbarConfig) => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(openSnackbarAction(config));
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const openSnackbarWithTimeout = (config: SnackbarConfigWithTimeout) => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(openSnackbarWithTimeoutAction(config));
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const closeSnackbar = () => {
23:08:49 (15948) DEBUG ClearTextReporter -       dispatch(closeSnackbarAction());
23:08:49 (15948) DEBUG ClearTextReporter -     };
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return {
23:08:49 (15948) DEBUG ClearTextReporter -       isOpen,
23:08:49 (15948) DEBUG ClearTextReporter -       config,
23:08:49 (15948) DEBUG ClearTextReporter -       openSnackbar,
23:08:49 (15948) DEBUG ClearTextReporter -       openSnackbarWithTimeout,
23:08:49 (15948) DEBUG ClearTextReporter -       closeSnackbar
23:08:49 (15948) DEBUG ClearTextReporter -     } as const;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const useSnackbar = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: useSnackbar hook renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:11:27
23:08:49 (15948) DEBUG ClearTextReporter -   const BestSellers = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const productCards = products
23:08:49 (15948) DEBUG ClearTextReporter -       ? products
23:08:49 (15948) DEBUG ClearTextReporter -           .slice(0, 5)
23:08:49 (15948) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
23:08:49 (15948) DEBUG ClearTextReporter -       : null;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <PageWrapper className="spa-best-sellers">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-best-sellers__header"
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey="bestSellers.header"
23:08:49 (15948) DEBUG ClearTextReporter -           variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__container">{productCards}</AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__button">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppButton size="extra-large">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography translationKey="bestSellers.button" />
23:08:49 (15948) DEBUG ClearTextReporter -           </AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -       </PageWrapper>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const BestSellers = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter +     if (false) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render loader if isLoading
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] MethodExpression
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:17:7
23:08:49 (15948) DEBUG ClearTextReporter -       ? products
23:08:49 (15948) DEBUG ClearTextReporter -           .slice(0, 5)
23:08:49 (15948) DEBUG ClearTextReporter +       ? products
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:19:14
23:08:49 (15948) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
23:08:49 (15948) DEBUG ClearTextReporter +           .map(() => undefined)
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/call-to-action/components/call-to-action-item/CallToActionItem.tsx:22:37
23:08:49 (15948) DEBUG ClearTextReporter -   }: CallToActionSectionItemProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -         className="call-to-action__item"
23:08:49 (15948) DEBUG ClearTextReporter -         sx={{ backgroundImage: `url(${imageUrl})` }}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           variant="subtitle2"
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={captionTranslationKey}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography variant="h2" translationKey={titleTranslationKey} />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           variant="subtitle2"
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={descriptionTranslationKey}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppLink to={linkTo}>
23:08:49 (15948) DEBUG ClearTextReporter -           <AppButton variant="light" size="large">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -               variant="caption"
23:08:49 (15948) DEBUG ClearTextReporter -               translationKey={buttonLabelTranslationKey}
23:08:49 (15948) DEBUG ClearTextReporter -             />
23:08:49 (15948) DEBUG ClearTextReporter -           </AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   }: CallToActionSectionItemProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/call-to-action/CallToAction.tsx:7:28
23:08:49 (15948) DEBUG ClearTextReporter -   const CallToAction = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="call-to-action">
23:08:49 (15948) DEBUG ClearTextReporter -         {callToActionItems.map((itemData) => (
23:08:49 (15948) DEBUG ClearTextReporter -           <CallToActionItem key={itemData.titleTranslationKey} {...itemData} />
23:08:49 (15948) DEBUG ClearTextReporter -         ))}
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const CallToAction = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/call-to-action/CallToAction.tsx:10:30
23:08:49 (15948) DEBUG ClearTextReporter -         {callToActionItems.map((itemData) => (
23:08:49 (15948) DEBUG ClearTextReporter -           <CallToActionItem key={itemData.titleTranslationKey} {...itemData} />
23:08:49 (15948) DEBUG ClearTextReporter -         ))}
23:08:49 (15948) DEBUG ClearTextReporter +         {callToActionItems.map(() => undefined)}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: CallToAction renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/category-section/components/CategoryItem.tsx:9:63
23:08:49 (15948) DEBUG ClearTextReporter -   const CategoryItem = ({ label, image }: CategoryItemProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -         className="spa-category-section__element"
23:08:49 (15948) DEBUG ClearTextReporter -         data-testid="spa-category-section-item"
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -           component="img"
23:08:49 (15948) DEBUG ClearTextReporter -           src={image}
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-category-section__image"
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={label}
23:08:49 (15948) DEBUG ClearTextReporter -           variant="subtitle2"
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-category-section__label"
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const CategoryItem = ({ label, image }: CategoryItemProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/category-section/CategorySection.tsx:8:31
23:08:49 (15948) DEBUG ClearTextReporter -   const CategorySection = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const categoryItems = categoryData.map((element) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <CategoryItem
23:08:49 (15948) DEBUG ClearTextReporter -         key={element.id}
23:08:49 (15948) DEBUG ClearTextReporter -         label={element.label}
23:08:49 (15948) DEBUG ClearTextReporter -         image={element.image}
23:08:49 (15948) DEBUG ClearTextReporter -       />
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="spa-category-section">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey="categorySection.title"
23:08:49 (15948) DEBUG ClearTextReporter -           variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-category-section__title"
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox className="spa-category-section__container">
23:08:49 (15948) DEBUG ClearTextReporter -           {categoryItems}
23:08:49 (15948) DEBUG ClearTextReporter -         </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const CategorySection = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/category-section/CategorySection.tsx:9:42
23:08:49 (15948) DEBUG ClearTextReporter -     const categoryItems = categoryData.map((element) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <CategoryItem
23:08:49 (15948) DEBUG ClearTextReporter -         key={element.id}
23:08:49 (15948) DEBUG ClearTextReporter -         label={element.label}
23:08:49 (15948) DEBUG ClearTextReporter -         image={element.image}
23:08:49 (15948) DEBUG ClearTextReporter -       />
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter +     const categoryItems = categoryData.map(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Category section renders three category elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:15:22
23:08:49 (15948) DEBUG ClearTextReporter -   const Footer = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -           component={item.href ? AppLink : undefined}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href as string}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppLink to={item.href}>{item.element}</AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           component={AppLink}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href}
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           component={AppLink}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href}
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="footer" component="footer">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="footer__container">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -                 className="footer__list-title"
23:08:49 (15948) DEBUG ClearTextReporter -                 translationKey="footer.location.title"
23:08:49 (15948) DEBUG ClearTextReporter -                 variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -               />
23:08:49 (15948) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
23:08:49 (15948) DEBUG ClearTextReporter -                 {locationItems}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppBox className="footer__socials" component="ul">
23:08:49 (15948) DEBUG ClearTextReporter -                 {socialsItems}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -                 className="footer__list-title"
23:08:49 (15948) DEBUG ClearTextReporter -                 translationKey="footer.support.title"
23:08:49 (15948) DEBUG ClearTextReporter -                 variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -               />
23:08:49 (15948) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
23:08:49 (15948) DEBUG ClearTextReporter -                 {customerSupportItems}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -                 className="footer__list-title"
23:08:49 (15948) DEBUG ClearTextReporter -                 translationKey="footer.policy.title"
23:08:49 (15948) DEBUG ClearTextReporter -                 variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -               />
23:08:49 (15948) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
23:08:49 (15948) DEBUG ClearTextReporter -                 {policyItems}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppContainer>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const Footer = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:16:49
23:08:49 (15948) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -           component={item.href ? AppLink : undefined}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href as string}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter +     const locationItems = locationFooterItems.map(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:27:47
23:08:49 (15948) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppLink to={item.href}>{item.element}</AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter +     const socialsItems = socialsFooterItems.map(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:33:63
23:08:49 (15948) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           component={AppLink}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href}
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter +     const customerSupportItems = customerSupportFooterItems.map(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/footer/Footer.tsx:44:45
23:08:49 (15948) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           className="footer__list-item-link"
23:08:49 (15948) DEBUG ClearTextReporter -           component={AppLink}
23:08:49 (15948) DEBUG ClearTextReporter -           to={item.href}
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={item.label}
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     ));
23:08:49 (15948) DEBUG ClearTextReporter +     const policyItems = policyFooterItems.map(() => undefined);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/header/components/header-categories/HeaderCategories.tsx:10:32
23:08:49 (15948) DEBUG ClearTextReporter -   const HeaderCategories = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="menu">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppContainer maxWidth="xl" className="menu__container">
23:08:49 (15948) DEBUG ClearTextReporter -           {categories.map((category) => (
23:08:49 (15948) DEBUG ClearTextReporter -             <AppLink
23:08:49 (15948) DEBUG ClearTextReporter -               to={category.href}
23:08:49 (15948) DEBUG ClearTextReporter -               variant="colored"
23:08:49 (15948) DEBUG ClearTextReporter -               isNavLink
23:08:49 (15948) DEBUG ClearTextReporter -               key={category.label}
23:08:49 (15948) DEBUG ClearTextReporter -             >
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography variant="caption" data-testid="menu-item">
23:08:49 (15948) DEBUG ClearTextReporter -                 {category.label}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -           ))}
23:08:49 (15948) DEBUG ClearTextReporter -         </AppContainer>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const HeaderCategories = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: HeaderCategories renders categories correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/header/components/header-categories/HeaderCategories.tsx:14:25
23:08:49 (15948) DEBUG ClearTextReporter -           {categories.map((category) => (
23:08:49 (15948) DEBUG ClearTextReporter -             <AppLink
23:08:49 (15948) DEBUG ClearTextReporter -               to={category.href}
23:08:49 (15948) DEBUG ClearTextReporter -               variant="colored"
23:08:49 (15948) DEBUG ClearTextReporter -               isNavLink
23:08:49 (15948) DEBUG ClearTextReporter -               key={category.label}
23:08:49 (15948) DEBUG ClearTextReporter -             >
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography variant="caption" data-testid="menu-item">
23:08:49 (15948) DEBUG ClearTextReporter -                 {category.label}
23:08:49 (15948) DEBUG ClearTextReporter -               </AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -           ))}
23:08:49 (15948) DEBUG ClearTextReporter +           {categories.map(() => undefined)}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: HeaderCategories renders categories correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/header/components/header-toolbar/HeaderToolbar.tsx:14:29
23:08:49 (15948) DEBUG ClearTextReporter -   const HeaderToolbar = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     // @TODO: use dynamic value instead of hardcoded
23:08:49 (15948) DEBUG ClearTextReporter -     const itemsInCartCount = 10;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const badgeContentTypography = (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppTypography variant="caption-small">{itemsInCartCount}</AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="header__wrapper">
23:08:49 (15948) DEBUG ClearTextReporter -         <AppContainer maxWidth="xl" className="header__toolbar">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="header__toolbar-logo">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppLink to="/">
23:08:49 (15948) DEBUG ClearTextReporter -               <AppLogo className="header__toolbar-logo-image" />
23:08:49 (15948) DEBUG ClearTextReporter -             </AppLink>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="header__toolbar-icons">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppIconButton>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppBadge
23:08:49 (15948) DEBUG ClearTextReporter -                 badgeContent={badgeContentTypography}
23:08:49 (15948) DEBUG ClearTextReporter -                 variant="dark"
23:08:49 (15948) DEBUG ClearTextReporter -                 size="small"
23:08:49 (15948) DEBUG ClearTextReporter -               >
23:08:49 (15948) DEBUG ClearTextReporter -                 <ShoppingCartIcon
23:08:49 (15948) DEBUG ClearTextReporter -                   className="header__toolbar-cart-icon"
23:08:49 (15948) DEBUG ClearTextReporter -                   fontSize="large"
23:08:49 (15948) DEBUG ClearTextReporter -                 />
23:08:49 (15948) DEBUG ClearTextReporter -               </AppBadge>
23:08:49 (15948) DEBUG ClearTextReporter -             </AppIconButton>
23:08:49 (15948) DEBUG ClearTextReporter -             <AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography translationKey="login.label" />
23:08:49 (15948) DEBUG ClearTextReporter -             </AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppContainer>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const HeaderToolbar = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: HeaderToolbar renders the logo
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/header/hooks/use-sticky-header/useStickyHeader.ts:3:31
23:08:49 (15948) DEBUG ClearTextReporter -   const useStickyHeader = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const headerRef = useRef<HTMLDivElement | null>(null);
23:08:49 (15948) DEBUG ClearTextReporter -     const scrollHandleRef = useRef<HTMLDivElement | null>(null);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     useEffect(() => {
23:08:49 (15948) DEBUG ClearTextReporter -       const headerElement = headerRef.current;
23:08:49 (15948) DEBUG ClearTextReporter -       const targetElement = scrollHandleRef.current;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       if (!headerElement || !targetElement) {
23:08:49 (15948) DEBUG ClearTextReporter -         return;
23:08:49 (15948) DEBUG ClearTextReporter -       }
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       const observer = new IntersectionObserver(
23:08:49 (15948) DEBUG ClearTextReporter -         ([entry]) => {
23:08:49 (15948) DEBUG ClearTextReporter -           if (!entry.isIntersecting) {
23:08:49 (15948) DEBUG ClearTextReporter -             const headerHeight = `-${headerElement.clientHeight}px`;
23:08:49 (15948) DEBUG ClearTextReporter -             headerElement.style.setProperty("--top", headerHeight);
23:08:49 (15948) DEBUG ClearTextReporter -           } else {
23:08:49 (15948) DEBUG ClearTextReporter -             headerElement.style.setProperty("--top", "0");
23:08:49 (15948) DEBUG ClearTextReporter -           }
23:08:49 (15948) DEBUG ClearTextReporter -         },
23:08:49 (15948) DEBUG ClearTextReporter -         { rootMargin: "300px" }
23:08:49 (15948) DEBUG ClearTextReporter -       );
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       observer.observe(targetElement);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -       return () => observer.unobserve(targetElement);
23:08:49 (15948) DEBUG ClearTextReporter -     }, []);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return { headerRef, scrollHandleRef } as const;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const useStickyHeader = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: renders Header correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/header/Header.tsx:9:22
23:08:49 (15948) DEBUG ClearTextReporter -   const Header = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const { headerRef, scrollHandleRef } = useStickyHeader();
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox ref={scrollHandleRef} data-scroll-handle />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox ref={headerRef} className="header">
23:08:49 (15948) DEBUG ClearTextReporter -           <HeaderToolbar />
23:08:49 (15948) DEBUG ClearTextReporter -           <HeaderCategories />
23:08:49 (15948) DEBUG ClearTextReporter -         </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -       </>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const Header = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: renders Header correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/intro-banner/IntroBanner.tsx:12:27
23:08:49 (15948) DEBUG ClearTextReporter -   const IntroBanner = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const currentImageIndex = useIntervalSwitcher(introBannerImages.length);
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const badgeContent = (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppTypography variant="body" translationKey="introBanner.badge" />
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox
23:08:49 (15948) DEBUG ClearTextReporter -         className={`spa-banner-intro spa-banner-intro--image-${currentImageIndex}`}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="spa-banner-intro__wrapper">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppBadge
23:08:49 (15948) DEBUG ClearTextReporter -               variant="danger"
23:08:49 (15948) DEBUG ClearTextReporter -               size="large"
23:08:49 (15948) DEBUG ClearTextReporter -               isRounded={false}
23:08:49 (15948) DEBUG ClearTextReporter -               badgeContent={badgeContent}
23:08:49 (15948) DEBUG ClearTextReporter -             />
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -               className="spa-banner-intro__heading"
23:08:49 (15948) DEBUG ClearTextReporter -               variant="h1"
23:08:49 (15948) DEBUG ClearTextReporter -               translationKey="introBanner.header"
23:08:49 (15948) DEBUG ClearTextReporter -             />
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -               variant="subtitle2"
23:08:49 (15948) DEBUG ClearTextReporter -               translationKey="introBanner.paragraphfirst"
23:08:49 (15948) DEBUG ClearTextReporter -               className="spa-banner-intro__desctiption"
23:08:49 (15948) DEBUG ClearTextReporter -             />
23:08:49 (15948) DEBUG ClearTextReporter -             <AppButton size="large" className="spa-banner-intro__button">
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography variant="body" translationKey="introBanner.button" />
23:08:49 (15948) DEBUG ClearTextReporter -             </AppButton>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppContainer>
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const IntroBanner = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: IntroBanner should render IntroBanner title
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/page-wrapper/PageWrapper.tsx:12:6
23:08:49 (15948) DEBUG ClearTextReporter -   ) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppContainer
23:08:49 (15948) DEBUG ClearTextReporter -         className="spa-page-wrapper"
23:08:49 (15948) DEBUG ClearTextReporter -         maxWidth="xl"
23:08:49 (15948) DEBUG ClearTextReporter -         ref={ref}
23:08:49 (15948) DEBUG ClearTextReporter -         {...props}
23:08:49 (15948) DEBUG ClearTextReporter -       >
23:08:49 (15948) DEBUG ClearTextReporter -         {children}
23:08:49 (15948) DEBUG ClearTextReporter -       </AppContainer>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   ) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/subintro/components/SubintroItem.tsx:9:64
23:08:49 (15948) DEBUG ClearTextReporter -   const SubintroItem = ({ content, icon }: SubintroItemProps) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="spa-subintro__element" data-testid="spa-subintro-item">
23:08:49 (15948) DEBUG ClearTextReporter -         <img className="spa-subintro__icon" src={icon} />
23:08:49 (15948) DEBUG ClearTextReporter -         <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -           translationKey={content}
23:08:49 (15948) DEBUG ClearTextReporter -           variant="subtitle2"
23:08:49 (15948) DEBUG ClearTextReporter -           className="spa-subintro__content"
23:08:49 (15948) DEBUG ClearTextReporter -         />
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const SubintroItem = ({ content, icon }: SubintroItemProps) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/subintro/Subintro.tsx:7:24
23:08:49 (15948) DEBUG ClearTextReporter -   const Subintro = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <AppBox className="spa-subintro">
23:08:49 (15948) DEBUG ClearTextReporter -         {subintroData.map((element) => (
23:08:49 (15948) DEBUG ClearTextReporter -           <SubintroItem
23:08:49 (15948) DEBUG ClearTextReporter -             icon={element.icon}
23:08:49 (15948) DEBUG ClearTextReporter -             key={element.id}
23:08:49 (15948) DEBUG ClearTextReporter -             content={element.content}
23:08:49 (15948) DEBUG ClearTextReporter -           />
23:08:49 (15948) DEBUG ClearTextReporter -         ))}
23:08:49 (15948) DEBUG ClearTextReporter -       </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const Subintro = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/layouts/subintro/Subintro.tsx:10:25
23:08:49 (15948) DEBUG ClearTextReporter -         {subintroData.map((element) => (
23:08:49 (15948) DEBUG ClearTextReporter -           <SubintroItem
23:08:49 (15948) DEBUG ClearTextReporter -             icon={element.icon}
23:08:49 (15948) DEBUG ClearTextReporter -             key={element.id}
23:08:49 (15948) DEBUG ClearTextReporter -             content={element.content}
23:08:49 (15948) DEBUG ClearTextReporter -           />
23:08:49 (15948) DEBUG ClearTextReporter -         ))}
23:08:49 (15948) DEBUG ClearTextReporter +         {subintroData.map(() => undefined)}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: Subintro section renders four subintro elements correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:9:28
23:08:49 (15948) DEBUG ClearTextReporter -   const ProductsPage = () => {
23:08:49 (15948) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     //@TODO Create Skeleton for product items
23:08:49 (15948) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const productCards = products
23:08:49 (15948) DEBUG ClearTextReporter -       ? products
23:08:49 (15948) DEBUG ClearTextReporter -           .slice(0, 4)
23:08:49 (15948) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
23:08:49 (15948) DEBUG ClearTextReporter -       : null;
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return (
23:08:49 (15948) DEBUG ClearTextReporter -       <PageWrapper>
23:08:49 (15948) DEBUG ClearTextReporter -         <AppBox className="spa-products-page">
23:08:49 (15948) DEBUG ClearTextReporter -           <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -             variant="h3"
23:08:49 (15948) DEBUG ClearTextReporter -             className="spa-products-page__header"
23:08:49 (15948) DEBUG ClearTextReporter -             translationKey="productsAll.label"
23:08:49 (15948) DEBUG ClearTextReporter -             component="h1"
23:08:49 (15948) DEBUG ClearTextReporter -           />
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="spa-products-page__info">
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography className="spa-products-page__count" component="span">
23:08:49 (15948) DEBUG ClearTextReporter -               {products?.length || 0}
23:08:49 (15948) DEBUG ClearTextReporter -               <AppTypography
23:08:49 (15948) DEBUG ClearTextReporter -                 translationKey="productsItems.label"
23:08:49 (15948) DEBUG ClearTextReporter -                 component="span"
23:08:49 (15948) DEBUG ClearTextReporter -               />
23:08:49 (15948) DEBUG ClearTextReporter -             </AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -             {/**@TODO Create dropdown for sort by */}
23:08:49 (15948) DEBUG ClearTextReporter -             <AppTypography className="spa-products-page__sort" component="span">
23:08:49 (15948) DEBUG ClearTextReporter -               Sort by: Recommended
23:08:49 (15948) DEBUG ClearTextReporter -             </AppTypography>
23:08:49 (15948) DEBUG ClearTextReporter -           </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -           <AppBox className="spa-products-page__grid">{productCards}</AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -         </AppBox>
23:08:49 (15948) DEBUG ClearTextReporter -       </PageWrapper>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const ProductsPage = () => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:13:7
23:08:49 (15948) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
23:08:49 (15948) DEBUG ClearTextReporter -               {products?.length || 0}
23:08:49 (15948) DEBUG ClearTextReporter +               {true}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
23:08:49 (15948) DEBUG ClearTextReporter -               {products?.length || 0}
23:08:49 (15948) DEBUG ClearTextReporter +               {false}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] LogicalOperator
23:08:49 (15948) DEBUG ClearTextReporter src/pages/products/ProductsPage.tsx:32:14
23:08:49 (15948) DEBUG ClearTextReporter -               {products?.length || 0}
23:08:49 (15948) DEBUG ClearTextReporter +               {products?.length && 0}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: ProductsPage renders the product count correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/cn.ts:1:42
23:08:49 (15948) DEBUG ClearTextReporter -   const cn = (...classNames: unknown[]) => {
23:08:49 (15948) DEBUG ClearTextReporter -     return classNames
23:08:49 (15948) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter -       .join(" ");
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const cn = (...classNames: unknown[]) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/utils/cn.ts:3:13
23:08:49 (15948) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter +       .filter(() => undefined)
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/cn.ts:3:28
23:08:49 (15948) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter +       .filter((className) => false)
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] EqualityOperator
23:08:49 (15948) DEBUG ClearTextReporter src/utils/cn.ts:3:28
23:08:49 (15948) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter +       .filter((className) => typeof className !== "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] EqualityOperator
23:08:49 (15948) DEBUG ClearTextReporter src/utils/cn.ts:3:61
23:08:49 (15948) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
23:08:49 (15948) DEBUG ClearTextReporter +       .filter((className) => typeof className === "string" && className === "")
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:1:68
23:08:49 (15948) DEBUG ClearTextReporter -   const createQueryParamsString = (query: Record<string, string>) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const queryParams = new URLSearchParams();
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
23:08:49 (15948) DEBUG ClearTextReporter -       if (value) {
23:08:49 (15948) DEBUG ClearTextReporter -         queryParams.append(key, value);
23:08:49 (15948) DEBUG ClearTextReporter -       }
23:08:49 (15948) DEBUG ClearTextReporter -     });
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return queryParams.toString();
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   const createQueryParamsString = (query: Record<string, string>) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:4:51
23:08:49 (15948) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
23:08:49 (15948) DEBUG ClearTextReporter -       if (value) {
23:08:49 (15948) DEBUG ClearTextReporter -         queryParams.append(key, value);
23:08:49 (15948) DEBUG ClearTextReporter -       }
23:08:49 (15948) DEBUG ClearTextReporter -     });
23:08:49 (15948) DEBUG ClearTextReporter +     Object.entries(query).forEach(([key, value]) => {});
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
23:08:49 (15948) DEBUG ClearTextReporter -       if (value) {
23:08:49 (15948) DEBUG ClearTextReporter +       if (true) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should handle empty query parameters correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
23:08:49 (15948) DEBUG ClearTextReporter -       if (value) {
23:08:49 (15948) DEBUG ClearTextReporter +       if (false) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:16
23:08:49 (15948) DEBUG ClearTextReporter -       if (value) {
23:08:49 (15948) DEBUG ClearTextReporter -         queryParams.append(key, value);
23:08:49 (15948) DEBUG ClearTextReporter -       }
23:08:49 (15948) DEBUG ClearTextReporter +       if (value) {}
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:13:72
23:08:49 (15948) DEBUG ClearTextReporter -   export const createUrlPath = (URL: string, params = "", query = {}) => {
23:08:49 (15948) DEBUG ClearTextReporter -     let trimmedUrl = URL;
23:08:49 (15948) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
23:08:49 (15948) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const queryParams = createQueryParamsString(query);
23:08:49 (15948) DEBUG ClearTextReporter -     const queryParamsString = queryParams ? `?${queryParams}` : "";
23:08:49 (15948) DEBUG ClearTextReporter -     const paramsString = params ? `/${params.replace(/^\/+/g, "")}` : "";
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return `${trimmedUrl}${paramsString}${queryParamsString}`;
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   export const createUrlPath = (URL: string, params = "", query = {}) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ConditionalExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
23:08:49 (15948) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
23:08:49 (15948) DEBUG ClearTextReporter +     while (false) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] MethodExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
23:08:49 (15948) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
23:08:49 (15948) DEBUG ClearTextReporter +     while (trimmedUrl.startsWith("/")) {
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Timeout] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:36
23:08:49 (15948) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
23:08:49 (15948) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
23:08:49 (15948) DEBUG ClearTextReporter -     }
23:08:49 (15948) DEBUG ClearTextReporter +     while (trimmedUrl.endsWith("/")) {}
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Timeout] MethodExpression
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:18
23:08:49 (15948) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
23:08:49 (15948) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl;
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] UnaryOperator
23:08:49 (15948) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:38
23:08:49 (15948) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
23:08:49 (15948) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl.slice(0, +1);
23:08:49 (15948) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] BlockStatement
23:08:49 (15948) DEBUG ClearTextReporter src/utils/test-utils.tsx:27:6
23:08:49 (15948) DEBUG ClearTextReporter -   ) => {
23:08:49 (15948) DEBUG ClearTextReporter -     const store = configureStore({
23:08:49 (15948) DEBUG ClearTextReporter -       reducer,
23:08:49 (15948) DEBUG ClearTextReporter -       preloadedState
23:08:49 (15948) DEBUG ClearTextReporter -     });
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <Provider store={store}>
23:08:49 (15948) DEBUG ClearTextReporter -         <MemoryRouter initialEntries={initialEntries}>
23:08:49 (15948) DEBUG ClearTextReporter -           <I18nProivider>
23:08:49 (15948) DEBUG ClearTextReporter -             <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
23:08:49 (15948) DEBUG ClearTextReporter -           </I18nProivider>
23:08:49 (15948) DEBUG ClearTextReporter -         </MemoryRouter>
23:08:49 (15948) DEBUG ClearTextReporter -       </Provider>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter -   
23:08:49 (15948) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
23:08:49 (15948) DEBUG ClearTextReporter -   };
23:08:49 (15948) DEBUG ClearTextReporter +   ) => {};
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ObjectLiteral
23:08:49 (15948) DEBUG ClearTextReporter src/utils/test-utils.tsx:28:32
23:08:49 (15948) DEBUG ClearTextReporter -     const store = configureStore({
23:08:49 (15948) DEBUG ClearTextReporter -       reducer,
23:08:49 (15948) DEBUG ClearTextReporter -       preloadedState
23:08:49 (15948) DEBUG ClearTextReporter -     });
23:08:49 (15948) DEBUG ClearTextReporter +     const store = configureStore({});
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ArrowFunction
23:08:49 (15948) DEBUG ClearTextReporter src/utils/test-utils.tsx:33:19
23:08:49 (15948) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
23:08:49 (15948) DEBUG ClearTextReporter -       <Provider store={store}>
23:08:49 (15948) DEBUG ClearTextReporter -         <MemoryRouter initialEntries={initialEntries}>
23:08:49 (15948) DEBUG ClearTextReporter -           <I18nProivider>
23:08:49 (15948) DEBUG ClearTextReporter -             <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
23:08:49 (15948) DEBUG ClearTextReporter -           </I18nProivider>
23:08:49 (15948) DEBUG ClearTextReporter -         </MemoryRouter>
23:08:49 (15948) DEBUG ClearTextReporter -       </Provider>
23:08:49 (15948) DEBUG ClearTextReporter -     );
23:08:49 (15948) DEBUG ClearTextReporter +     const Wrapper = () => undefined;
23:08:49 (15948) DEBUG ClearTextReporter Killed by: AppSnackbar renders correctly
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG ClearTextReporter [Killed] ObjectLiteral
23:08:49 (15948) DEBUG ClearTextReporter src/utils/test-utils.tsx:43:21
23:08:49 (15948) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
23:08:49 (15948) DEBUG ClearTextReporter +     return render(ui, {});
23:08:49 (15948) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
23:08:49 (15948) DEBUG ClearTextReporter 
23:08:49 (15948) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
23:08:49 (15948) DEBUG JsonReporter Using relative path reports\stryker\stryker.json
23:08:49 (15948) INFO JsonReporter Your report can be found at: file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/reports/stryker/stryker.json
23:08:49 (15948) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
23:08:49 (15948) INFO HtmlReporter Your report can be found at: file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/reports/stryker/stryker.html
23:08:49 (15948) INFO MutationTestExecutor Done in 48 seconds.
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 12768
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 540
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 17424
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 13688
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 9892
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 13496
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 18236
23:08:49 (15948) DEBUG ChildProcessProxy Disposing of worker process 1876
23:08:49 (15948) DEBUG ChildProcessProxy Kill 12768
23:08:50 (15948) DEBUG ChildProcessProxy Kill 540
23:08:50 (15948) DEBUG ChildProcessProxy Kill 17424
23:08:50 (15948) DEBUG ChildProcessProxy Kill 13688
23:08:50 (15948) DEBUG ChildProcessProxy Kill 9892
23:08:50 (15948) DEBUG ChildProcessProxy Kill 13496
23:08:50 (15948) DEBUG ChildProcessProxy Kill 18236
23:08:50 (15948) DEBUG ChildProcessProxy Kill 1876
23:08:50 (15948) DEBUG TemporaryDirectory Deleting stryker temp directory D:\Максим\work\spa-orders\code\stryker-tmp
23:11:07 (2044) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
23:11:07 (2044) INFO ProjectReader Found 59 of 533 file(s) to be mutated using incremental report with 437 mutant(s), and 53 test(s).
23:11:07 (2044) DEBUG ProjectReader All input files: [
  "D:\\Максим\\work\\spa-orders\\code\\.dockerignore",
  "D:\\Максим\\work\\spa-orders\\code\\.env.local",
  "D:\\Максим\\work\\spa-orders\\code\\.nvmrc",
  "D:\\Максим\\work\\spa-orders\\code\\.prettierrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\.eslintrc",
  "D:\\Максим\\work\\spa-orders\\code\\config\\babel.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.esm.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\webpack.config.js",
  "D:\\Максим\\work\\spa-orders\\code\\config\\__mocks__\\fileMock.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\clover.xml",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\base.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\block-navigation.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\favicon.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\lcov.info",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.css",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\prettify.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sort-arrow-sprite.png",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\sorter.js",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-badge\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-box\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-container\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-link\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\AppLoader.types.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-loader\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\AppLogo.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-logo\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\AppSnackbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\app-typography\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\methods.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\constants\\requests.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\context\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\declaration.d.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-redux.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\hooks\\use-snackbar\\useSnackbar.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\CallToAction.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\components\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\CallToActionItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\call-to-action-item\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\CategorySection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\CategoryItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\category-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.constants.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\Footer.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\footer\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-categories\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\components\\header-toolbar\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\Header.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\hooks\\useStickyHeader.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\header\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\components\\SubintroItem.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\layouts\\subintro\\Subintro.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\messages.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\error\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToAction.constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\CallToActionSection.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\components\\call-to-action-section\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\home\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\router.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\appApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\productsApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\api\\todosApi.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\constants.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\snackbarSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\store\\store.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\styles\\muiTheme.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\cn.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\createUrlPath.ts.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\index.html",
  "D:\\Максим\\work\\spa-orders\\code\\coverage\\src\\utils\\test-utils.tsx.html",
  "D:\\Максим\\work\\spa-orders\\code\\Dockerfile",
  "D:\\Максим\\work\\spa-orders\\code\\eslint.config.mjs",
  "D:\\Максим\\work\\spa-orders\\code\\nginx.conf",
  "D:\\Максим\\work\\spa-orders\\code\\package-lock.json",
  "D:\\Максим\\work\\spa-orders\\code\\package.json",
  "D:\\Максим\\work\\spa-orders\\code\\sonar-project.properties",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\icons\\.gitkeep",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\computer.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\call-to-action-section\\phone.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\computer-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\mobile-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\category-section\\tablet-image.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-1.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-2.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-3.webp",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\logo.png",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\box-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\clock-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\moped-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\assets\\images\\subintro\\percent-icon.jpg",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\common-messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.test.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.test.jsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\en.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\index.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\messages\\uk.json",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_reset.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\base\\_root.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_all.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_colors.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_functions.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_mixins.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_typography.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\foundation\\_variables.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\styles\\global.scss",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\assets.d.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\product.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\types\\snackbar.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\tests\\createUrlPath.test.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\stryker.conf.js",
  "D:\\Максим\\work\\spa-orders\\code\\tsconfig.json",
  "D:\\Максим\\work\\spa-orders\\code\\{"
]
23:11:07 (2044) DEBUG ProjectReader Files to mutate: [
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-loader\\AppLoader.types.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-logo\\AppLogo.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-snackbar\\AppSnackbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\hooks\\use-snackbar\\useSnackbar.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\CallToAction.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\CategorySection.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\category-section\\components\\CategoryItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.constants.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\footer\\Footer.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\Header.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\components\\SubintroItem.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\layouts\\subintro\\Subintro.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\main.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\messages.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\slices\\snackbarSlice.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Максим\\work\\spa-orders\\code\\src\\utils\\test-utils.tsx"
]
23:11:07 (2044) DEBUG TemporaryDirectory Using temp directory "D:\Максим\work\spa-orders\code\stryker-tmp"
23:11:07 (2044) DEBUG Instrumenter Instrumenting 59 source files with mutants
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.tsx (17 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.types.ts (0 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-box\AppBox.tsx (2 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-button\AppButton.tsx (12 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-container\AppContainer.tsx (1 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-icon-button\AppIconButton.tsx (1 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.tsx (12 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.types.ts (0 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.tsx (6 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-loader\AppLoader.types.ts (0 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-logo\AppLogo.tsx (3 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-snackbar\AppSnackbar.tsx (4 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\app-typography\AppTypography.tsx (18 mutant(s))
23:11:07 (2044) DEBUG Instrumenter Instrumented src\components\product-card\ProductCard.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\constants\methods.ts (0 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\constants\requests.ts (0 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\constants\routes.ts (0 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\context\I18nProvider.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\hooks\use-interval-switcher\useIntervalSwitcher.ts (8 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\hooks\use-redux\useRedux.ts (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\hooks\use-snackbar\useSnackbar.ts (4 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.constants.ts (73 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.tsx (5 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.constants.ts (13 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\call-to-action\CallToAction.tsx (2 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\call-to-action\components\call-to-action-item\CallToActionItem.tsx (3 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.constants.ts (7 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\category-section\CategorySection.tsx (2 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\category-section\components\CategoryItem.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.constants.tsx (40 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\footer\Footer.tsx (5 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.constants.ts (9 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\header\components\header-categories\HeaderCategories.tsx (2 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\header\components\header-toolbar\HeaderToolbar.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\header\Header.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\header\hooks\use-sticky-header\useStickyHeader.ts (22 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.constants.ts (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.tsx (3 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\page-wrapper\PageWrapper.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\root-layout\RootLayout.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\subintro\components\SubintroItem.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.constants.ts (9 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\layouts\subintro\Subintro.tsx (2 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\main.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\messages.ts (3 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\pages\error\ErrorPage.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\pages\home\HomePage.tsx (9 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\pages\not-found\NotFoundPage.tsx (1 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\pages\products\ProductsPage.tsx (9 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\routes\routes.tsx (9 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\api\appApi.ts (3 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\api\productsApi.ts (11 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\constants.ts (0 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\slices\productsSlice.ts (28 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\slices\snackbarSlice.ts (23 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\store\store.ts (3 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\utils\cn.ts (13 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\utils\createUrlPath.ts (21 mutant(s))
23:11:08 (2044) DEBUG Instrumenter Instrumented src\utils\test-utils.tsx (7 mutant(s))
23:11:08 (2044) INFO Instrumenter Instrumented 59 source file(s) with 437 mutant(s)
23:11:09 (2044) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: 'D:\\Максим\\work\\spa-orders\\code\\tsconfig.json',
  mutate: false
}
23:11:10 (2044) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
23:11:10 (2044) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 15256  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:10 (15256) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:11:10 (15256) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:11:10 (2044) DEBUG Sandbox Creating a sandbox for files in D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245
23:11:11 (2044) DEBUG Sandbox Start symlink node_modules
23:11:11 (2044) DEBUG Sandbox Create symlink from D:\Максим\work\spa-orders\code\node_modules to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245\node_modules
23:11:11 (2044) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
23:11:11 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 14424  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:11 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 8696  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:13 (14424) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:11:13 (14424) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:11:13 (8696) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:11:13 (8696) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:11:13 (14424) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245
23:11:13 (8696) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245
23:11:13 (14424) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:11:13 (8696) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:11:13 (14424) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:11:13 (14424) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:11:13 (14424) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:11:13 (2044) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
23:11:13 (2044) DEBUG DryRunExecutor Using timeout of 1200000 ms.
23:11:13 (2044) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
23:11:13 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 13960  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:13 (8696) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:11:13 (14424) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-badge\\AppBadge.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-badge\\AppBadge.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-box\\AppBox.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-button\\AppButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-container\\AppContainer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-icon-button\\AppIconButton.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-link\\AppLink.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-link\\AppLink.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-loader\\AppLoader.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-loader\\AppLoader.types.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-logo\\AppLogo.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-snackbar\\AppSnackbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\app-typography\\AppTypography.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\components\\product-card\\ProductCard.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\constants\\methods.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\constants\\requests.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\constants\\routes.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\context\\I18nProvider.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\hooks\\use-redux\\useRedux.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\hooks\\use-snackbar\\useSnackbar.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\best-sellers\\BestSellers.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\best-sellers\\BestSellers.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\call-to-action\\CallToAction.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\call-to-action\\CallToAction.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\call-to-action\\components\\call-to-action-item\\CallToActionItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\category-section\\CategorySection.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\category-section\\CategorySection.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\category-section\\components\\CategoryItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\footer\\Footer.constants.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\footer\\Footer.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\header\\components\\header-categories\\HeaderCategories.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\header\\components\\header-toolbar\\HeaderToolbar.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\header\\Header.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\header\\hooks\\use-sticky-header\\useStickyHeader.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\intro-banner\\IntroBanner.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\intro-banner\\IntroBanner.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\page-wrapper\\PageWrapper.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\root-layout\\RootLayout.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\subintro\\components\\SubintroItem.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\subintro\\Subintro.constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\layouts\\subintro\\Subintro.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\main.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\messages.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\pages\\error\\ErrorPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\pages\\home\\HomePage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\pages\\not-found\\NotFoundPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\pages\\products\\ProductsPage.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\routes\\routes.tsx","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\api\\appApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\api\\productsApi.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\constants.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\slices\\productsSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\slices\\snackbarSlice.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\store\\store.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\utils\\cn.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\utils\\createUrlPath.ts","D:\\Максим\\work\\spa-orders\\code\\stryker-tmp\\sandbox3268245\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Максим\\work\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js","D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
23:11:13 (8696) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:11:13 (8696) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:11:13 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 15984  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:15 (13960) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:11:15 (13960) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:11:15 (15984) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
23:11:15 (15984) DEBUG PluginLoader Loading plugin file:///D:/%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC/work/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
23:11:15 (13960) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245
23:11:15 (15984) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Максим\work\spa-orders\code\stryker-tmp\sandbox3268245
23:11:15 (13960) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:11:15 (15984) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
23:11:16 (13960) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:11:16 (13960) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:11:16 (13960) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:11:16 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 13924  (using args --no-compilation-cache --max-old-space-size=8192)
23:11:16 (15984) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
23:11:16 (15984) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
23:11:16 (15984) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Максим\\work\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Максим\\work\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Максим\\work\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Максим\\work\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
23:11:16 (2044) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 11116  (using args --no-compilation-cache --max-old-space-size=8192)
