13:56:45 (29475) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
13:56:45 (29475) WARN ProjectReader Glob pattern "!src/{assets,messages,services,test-utils,types}/**/*" did not exclude any files.
13:56:45 (29475) INFO ProjectReader No incremental result file found at stryker-config/stryker-incremental.json, a full mutation testing run will be performed.
13:56:45 (29475) INFO ProjectReader Found 6 of 26 file(s) to be mutated.
13:56:45 (29475) DEBUG ProjectReader All input files: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/.nvmrc",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/babel.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/index.html",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.esm.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/webpack.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package-lock.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/index.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.scss",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/en.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/es.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/index.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/tests/application.test.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker.conf.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json"
]
13:56:45 (29475) DEBUG ProjectReader Files to mutate: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx"
]
13:56:45 (29475) DEBUG TemporaryDirectory Using temp directory "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp"
13:56:45 (29475) DEBUG Instrumenter Instrumenting 6 source files with mutants
13:56:45 (29475) DEBUG Instrumenter Instrumented src/main.tsx (1 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/messages.ts (3 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/modules.tsx (0 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/pages/dashboard/dashboard.tsx (1 mutant(s))
13:56:45 (29475) DEBUG Instrumenter Instrumented src/router.tsx (1 mutant(s))
13:56:46 (29475) DEBUG Instrumenter Instrumented src/shared/modules/application/application.tsx (1 mutant(s))
13:56:46 (29475) INFO Instrumenter Instrumented 6 source file(s) with 7 mutant(s)
13:56:46 (29475) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: '/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json',
  mutate: false
}
13:56:46 (29475) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
13:56:46 (29475) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 29476  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29476) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29476) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29475) DEBUG Sandbox Creating a sandbox for files in /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29475) DEBUG Sandbox Start symlink node_modules
13:56:47 (29475) DEBUG Sandbox Create symlink from /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/node_modules
13:56:47 (29475) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
13:56:47 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 29483  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 29484  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:47 (29483) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29483) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29484) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:47 (29484) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:47 (29483) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29484) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:47 (29483) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:47 (29484) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29483) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29484) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29483) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29484) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29483) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29484) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29475) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
13:56:48 (29475) DEBUG DryRunExecutor Using timeout of 1200000 ms.
13:56:48 (29475) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 29491  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 29492  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29483) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/main.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/messages.ts","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/modules.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/pages/dashboard/dashboard.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/router.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
13:56:48 (29491) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:48 (29492) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:48 (29492) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:48 (29491) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:48 (29491) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:48 (29492) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:48 (29492) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29491) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:48 (29492) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29491) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:48 (29492) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29491) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:48 (29492) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29491) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 29519  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:48 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 29520  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:49 (29520) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:49 (29520) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:49 (29519) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:49 (29519) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:49 (29520) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:49 (29519) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:49 (29520) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:49 (29519) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:49 (29520) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:49 (29519) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:49 (29520) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:49 (29520) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:49 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 29521  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:49 (29519) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:49 (29519) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:49 (29475) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 29522  (using args --no-compilation-cache --max-old-space-size=8192)
13:56:50 (29522) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:50 (29522) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:50 (29521) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
13:56:50 (29521) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
13:56:50 (29522) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:50 (29521) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866
13:56:50 (29522) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:50 (29521) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
13:56:50 (29521) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:50 (29522) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
13:56:50 (29521) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:50 (29521) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:50 (29522) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
13:56:50 (29522) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
13:56:51 (29475) INFO DryRunExecutor Initial test run succeeded. Ran 1 tests in 3 seconds (net 39 ms, overhead 3043 ms).
13:56:51 (29475) DEBUG ChildProcessProxy Disposing of worker process 29476
13:56:51 (29475) DEBUG TimeoutDecorator Starting timeout timer (603277 ms) for a test run
13:56:51 (29475) DEBUG ChildProcessProxy Kill 29476
13:56:51 (29484) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox7191866/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Application should render)"}
13:56:53 (29475) DEBUG ClearTextReporter [Killed] BlockStatement
13:56:53 (29475) DEBUG ClearTextReporter src/shared/modules/application/application.tsx:8:57
13:56:53 (29475) DEBUG ClearTextReporter -   const Application = ({ children }: ApplicationProps) => {
13:56:53 (29475) DEBUG ClearTextReporter -     return (
13:56:53 (29475) DEBUG ClearTextReporter -       <div className="application">
13:56:53 (29475) DEBUG ClearTextReporter -         <h1 className="application__header">Hello, React with Webpack!</h1>
13:56:53 (29475) DEBUG ClearTextReporter -         {children}
13:56:53 (29475) DEBUG ClearTextReporter -       </div>
13:56:53 (29475) DEBUG ClearTextReporter -     );
13:56:53 (29475) DEBUG ClearTextReporter -   };
13:56:53 (29475) DEBUG ClearTextReporter +   const Application = ({ children }: ApplicationProps) => {};
13:56:53 (29475) DEBUG ClearTextReporter Killed by: Application should render
13:56:53 (29475) DEBUG ClearTextReporter 
13:56:53 (29475) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
13:56:53 (29475) DEBUG JsonReporter Using relative path reports/stryker/stryker.json
13:56:53 (29475) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
13:56:53 (29475) INFO JsonReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.json
13:56:53 (29475) INFO HtmlReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.html
13:56:53 (29475) INFO MutationTestExecutor Done in 7 seconds.
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29483
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29484
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29492
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29491
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29519
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29522
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29520
13:56:53 (29475) DEBUG ChildProcessProxy Disposing of worker process 29521
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29483
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29484
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29519
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29491
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29492
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29522
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29521
13:56:53 (29475) DEBUG ChildProcessProxy Kill 29520
13:56:53 (29475) DEBUG TemporaryDirectory Deleting stryker temp directory /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp
10:49:49 (6867) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
10:49:49 (6867) WARN ProjectReader Glob pattern "!src/{assets,messages,services,test-utils,types}/**/*" did not exclude any files.
10:49:49 (6867) INFO ProjectReader Found 6 of 26 file(s) to be mutated using incremental report with 7 mutant(s), and 1 test(s).
10:49:49 (6867) DEBUG ProjectReader All input files: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/.nvmrc",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/babel.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/index.html",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.esm.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/webpack.config.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package-lock.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/package.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/index.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.scss",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/en.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/es.json",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/i18n/index.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/tests/application.test.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker.conf.js",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json"
]
10:49:49 (6867) DEBUG ProjectReader Files to mutate: [
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/main.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/messages.ts",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/modules.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/pages/dashboard/dashboard.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/router.tsx",
  "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/src/shared/modules/application/application.tsx"
]
10:49:49 (6867) DEBUG TemporaryDirectory Using temp directory "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp"
10:49:49 (6867) DEBUG Instrumenter Instrumenting 6 source files with mutants
10:49:49 (6867) DEBUG Instrumenter Instrumented src/main.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/messages.ts (3 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/modules.tsx (0 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/pages/dashboard/dashboard.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/router.tsx (1 mutant(s))
10:49:49 (6867) DEBUG Instrumenter Instrumented src/shared/modules/application/application.tsx (1 mutant(s))
10:49:49 (6867) INFO Instrumenter Instrumented 6 source file(s) with 7 mutant(s)
10:49:49 (6867) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: '/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/tsconfig.json',
  mutate: false
}
10:49:49 (6867) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
10:49:49 (6867) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 6870  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6870) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6870) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6867) DEBUG Sandbox Creating a sandbox for files in /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6867) DEBUG Sandbox Start symlink node_modules
10:49:50 (6867) DEBUG Sandbox Create symlink from /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/node_modules
10:49:50 (6867) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
10:49:50 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 6875  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 6876  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:50 (6876) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6876) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6875) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:50 (6875) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:50 (6876) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6875) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:50 (6875) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:50 (6876) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6875) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6876) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6876) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6875) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6876) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6875) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
10:49:51 (6867) DEBUG DryRunExecutor Using timeout of 1200000 ms.
10:49:51 (6867) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 6879  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 6880  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6876) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/main.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/messages.ts","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/modules.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/pages/dashboard/dashboard.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/router.tsx","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709/src/shared/modules/application/application.tsx"],"jestConfig":{"testEnvironment":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/jest-runner/dist/src/jest-plugins/jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"],"setupFilesAfterEnv":["/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js","/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"],"moduleNameMapper":{"\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
10:49:51 (6880) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:51 (6880) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:51 (6879) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:51 (6879) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:51 (6879) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:51 (6880) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:51 (6880) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6879) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:51 (6879) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6880) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:51 (6879) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6879) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 6908  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:51 (6880) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:51 (6880) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:51 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 6909  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6908) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6908) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6909) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6909) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6909) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6908) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6908) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6909) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6908) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6909) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6908) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6908) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 6911  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6909) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6909) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6867) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 6912  (using args --no-compilation-cache --max-old-space-size=8192)
10:49:52 (6912) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6912) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6911) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
10:49:52 (6911) DEBUG PluginLoader Loading plugin file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
10:49:52 (6912) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6911) DEBUG ChildProcessProxyWorker Changing current working directory for this process to /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp/sandbox5857709
10:49:52 (6912) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6911) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
10:49:52 (6912) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6911) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
10:49:52 (6912) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6912) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:52 (6911) DEBUG CustomJestConfigLoader Read config from "../../config/jest.config.js" (used native `readInitialOptions` from jest-config).
10:49:52 (6911) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/setup-tests.js",
    "/Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/config/jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
10:49:53 (6867) INFO DryRunExecutor Initial test run succeeded. Ran 1 tests in 2 seconds (net 32 ms, overhead 2429 ms).
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/main.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/messages.ts
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/pages/dashboard/dashboard.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/router.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/shared/modules/application/application.tsx
10:49:53 (6867) TRACE IncrementalDiffer Diffing src/shared/modules/application/tests/application.test.tsx
10:49:53 (6867) INFO IncrementalDiffer Incremental report:
	Mutants:	0 files changed (+0 -0)
	Tests:		0 files changed (+0 -0)
	Result:		7 of 7 mutant result(s) are reused.
10:49:53 (6867) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		No changes
	Tests: 
		No changes
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6870
10:49:53 (6867) DEBUG ClearTextReporter [Killed] BlockStatement
10:49:53 (6867) DEBUG ClearTextReporter src/shared/modules/application/application.tsx:8:57
10:49:53 (6867) DEBUG ClearTextReporter -   const Application = ({ children }: ApplicationProps) => {
10:49:53 (6867) DEBUG ClearTextReporter -     return (
10:49:53 (6867) DEBUG ClearTextReporter -       <div className="application">
10:49:53 (6867) DEBUG ClearTextReporter -         <h1 className="application__header">Hello, React with Webpack!</h1>
10:49:53 (6867) DEBUG ClearTextReporter -         {children}
10:49:53 (6867) DEBUG ClearTextReporter -       </div>
10:49:53 (6867) DEBUG ClearTextReporter -     );
10:49:53 (6867) DEBUG ClearTextReporter -   };
10:49:53 (6867) DEBUG ClearTextReporter +   const Application = ({ children }: ApplicationProps) => {};
10:49:53 (6867) DEBUG ClearTextReporter Killed by: Application should render
10:49:53 (6867) DEBUG ClearTextReporter 
10:49:53 (6867) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
10:49:53 (6867) DEBUG JsonReporter Using relative path reports/stryker/stryker.json
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6870
10:49:53 (6867) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
10:49:53 (6867) INFO JsonReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.json
10:49:53 (6867) INFO HtmlReporter Your report can be found at: file:///Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/reports/stryker/stryker.html
10:49:53 (6867) INFO MutationTestExecutor Done in 4 seconds.
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6875
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6876
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6879
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6880
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6908
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6909
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6911
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6875
10:49:53 (6867) DEBUG ChildProcessProxy Disposing of worker process 6912
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6876
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6879
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6880
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6908
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6909
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6911
10:49:53 (6867) DEBUG ChildProcessProxy Kill 6912
10:49:53 (6867) DEBUG TemporaryDirectory Deleting stryker temp directory /Users/mykhailokonstantynovskyi/WebstormProjects/spa-orders/code/stryker-tmp
14:16:14 (13596) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
14:16:14 (13596) INFO ProjectReader Found 43 of 368 file(s) to be mutated using incremental report with 7 mutant(s), and 1 test(s).
14:16:14 (13596) DEBUG ProjectReader All input files: [
  "D:\\Store_internship\\spa-orders\\code\\.dockerignore",
  "D:\\Store_internship\\spa-orders\\code\\.env.local",
  "D:\\Store_internship\\spa-orders\\code\\.nvmrc",
  "D:\\Store_internship\\spa-orders\\code\\.prettierrc",
  "D:\\Store_internship\\spa-orders\\code\\config\\.eslintrc",
  "D:\\Store_internship\\spa-orders\\code\\config\\babel.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.esm.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\webpack.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\__mocks__\\fileMock.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\base.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\block-navigation.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\clover.xml",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\favicon.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\base.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\block-navigation.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\favicon.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\prettify.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\prettify.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\sort-arrow-sprite.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\sorter.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\methods.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\requests.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\declaration.d.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-baner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-baner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\AppProductsList.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\mock-test-data.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\messages.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\router.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\appApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\productsApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\todosApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\store.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\muiTheme.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\cn.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\createUrlPath.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\test-utils.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov.info",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\prettify.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\prettify.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\sort-arrow-sprite.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\sorter.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-box\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-container\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-typography\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\product-card\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\methods.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\requests.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\context\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\context\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\declaration.d.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-baner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-baner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\AppProductsList.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\mock-test-data.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\messages.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\error\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\home\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\not-found\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\router.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\appApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\productsApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\todosApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\store.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\styles\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\styles\\muiTheme.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\cn.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\createUrlPath.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\test-utils.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-1.9f9918cff01157fb6c17a43d02c8f5ad.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-2.57f7994259b3e844b5c7874c6a601285.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-3.a0c99b8741aa8aa581a49c98e822243e.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero_section_img.e133e94506c5204c400199755eb56882.jpg",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\logo.2218cd2de75cc95641ddb83bd1110375.jpeg",
  "D:\\Store_internship\\spa-orders\\code\\dist\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.css",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.js",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.js.LICENSE.txt",
  "D:\\Store_internship\\spa-orders\\code\\Dockerfile",
  "D:\\Store_internship\\spa-orders\\code\\eslint.config.mjs",
  "D:\\Store_internship\\spa-orders\\code\\nginx.conf",
  "D:\\Store_internship\\spa-orders\\code\\package-lock.json",
  "D:\\Store_internship\\spa-orders\\code\\package.json",
  "D:\\Store_internship\\spa-orders\\code\\sonar-project.properties",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\icons\\.gitkeep",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-1.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-2.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-3.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\logo.jpeg",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.test.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.constants.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.test.jsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\mock-test-data.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\main.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\messages.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\base\\_reset.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\base\\_root.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_all.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_colors.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_functions.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_mixins.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_typography.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_variables.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\global.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\types\\assets.d.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\types\\product.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\test-utils.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\tests\\createUrlPath.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\stryker.conf.js",
  "D:\\Store_internship\\spa-orders\\code\\tsconfig.json"
]
14:16:14 (13596) DEBUG ProjectReader Files to mutate: [
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.constants.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\mock-test-data.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\main.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\messages.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\test-utils.tsx"
]
14:16:14 (13596) DEBUG TemporaryDirectory Using temp directory "D:\Store_internship\spa-orders\code\stryker-tmp"
14:16:14 (13596) DEBUG Instrumenter Instrumenting 43 source files with mutants
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.tsx (17 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.types.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-box\AppBox.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-button\AppButton.tsx (12 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-container\AppContainer.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-icon-button\AppIconButton.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.tsx (12 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.types.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\app-typography\AppTypography.tsx (18 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\components\product-card\ProductCard.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\constants\methods.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\constants\requests.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\constants\routes.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\context\I18nProvider.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\hooks\use-interval-switcher\useIntervalSwitcher.ts (8 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\hooks\use-redux\useRedux.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-footer\AppFooter.constants.tsx (40 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-footer\AppFooter.tsx (5 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-header\AppHeader.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-header\components\categories\Categories.constants.ts (9 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-header\components\categories\Categories.tsx (2 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\app-header\components\header\Header.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.tsx (5 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\best-sellers\mock-test-data.ts (73 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.constants.ts (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.tsx (4 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\page-wrapper\PageWrapper.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\layouts\root-layout\RootLayout.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\main.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\messages.ts (3 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\pages\error\ErrorPage.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\pages\home\HomePage.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\pages\not-found\NotFoundPage.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\pages\products\ProductsPage.tsx (1 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\routes\routes.tsx (9 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\store\api\appApi.ts (3 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\store\api\productsApi.ts (11 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\store\constants.ts (0 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\store\slices\productsSlice.ts (28 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\store\store.ts (3 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\utils\cn.ts (13 mutant(s))
14:16:14 (13596) DEBUG Instrumenter Instrumented src\utils\createUrlPath.ts (21 mutant(s))
14:16:15 (13596) DEBUG Instrumenter Instrumented src\utils\test-utils.tsx (6 mutant(s))
14:16:15 (13596) INFO Instrumenter Instrumented 43 source file(s) with 317 mutant(s)
14:16:18 (13596) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: 'D:\\Store_internship\\spa-orders\\code\\tsconfig.json',
  mutate: false
}
14:16:19 (13596) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
14:16:19 (13596) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 14648  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:20 (14648) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:20 (14648) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:20 (13596) DEBUG Sandbox Creating a sandbox for files in D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:21 (13596) DEBUG Sandbox Start symlink node_modules
14:16:21 (13596) DEBUG Sandbox Create symlink from D:\Store_internship\spa-orders\code\node_modules to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489\node_modules
14:16:21 (13596) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
14:16:21 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 18092  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:21 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 8048  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:22 (8048) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:22 (8048) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:22 (18092) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:22 (18092) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:22 (8048) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:22 (18092) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:23 (8048) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:23 (18092) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:23 (8048) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:23 (18092) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:23 (18092) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:23 (18092) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:23 (8048) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:23 (8048) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:23 (13596) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
14:16:23 (13596) DEBUG DryRunExecutor Using timeout of 1200000 ms.
14:16:23 (13596) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
14:16:23 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 17868  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:23 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 5024  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:23 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.types.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-box\\AppBox.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-container\\AppContainer.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-icon-button\\AppIconButton.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.types.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\product-card\\ProductCard.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\constants\\methods.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\constants\\requests.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\constants\\routes.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\context\\I18nProvider.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-redux\\useRedux.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.constants.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\AppHeader.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\categories\\Categories.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\header\\Header.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\mock-test-data.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\intro-banner\\IntroBanner.constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\intro-banner\\IntroBanner.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\page-wrapper\\PageWrapper.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\root-layout\\RootLayout.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\main.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\messages.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\pages\\error\\ErrorPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\pages\\home\\HomePage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\pages\\not-found\\NotFoundPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\pages\\products\\ProductsPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\routes\\routes.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\store\\api\\appApi.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\store\\api\\productsApi.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\store\\constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\store\\slices\\productsSlice.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\store\\store.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
14:16:24 (17868) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:24 (17868) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:24 (5024) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:24 (5024) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:24 (17868) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:24 (5024) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:24 (17868) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:24 (5024) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:24 (17868) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:24 (17868) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:24 (17868) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:24 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 7672  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:24 (5024) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:24 (5024) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:24 (5024) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:24 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 16616  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:25 (7672) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:25 (7672) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:25 (16616) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:25 (16616) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:25 (7672) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:25 (16616) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:25 (7672) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:26 (16616) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:26 (7672) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:26 (7672) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:26 (7672) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:26 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 16612  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:26 (16616) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:26 (16616) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:26 (16616) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:26 (13596) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 16856  (using args --no-compilation-cache --max-old-space-size=8192)
14:16:27 (16612) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:27 (16612) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:27 (16856) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
14:16:27 (16856) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
14:16:27 (16612) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:27 (16856) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox2729489
14:16:27 (16856) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:27 (16612) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
14:16:27 (16612) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:27 (16856) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
14:16:27 (16856) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:27 (16856) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:27 (16612) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
14:16:27 (16612) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
14:16:41 (13596) INFO DryRunExecutor Initial test run succeeded. Ran 39 tests in 18 seconds (net 1166 ms, overhead 17602 ms).
14:16:41 (13596) TRACE IncrementalDiffer Diffing src/main.tsx
14:16:41 (13596) TRACE IncrementalDiffer Diffing src/messages.ts
14:16:42 (13596) DEBUG IncrementalDiffer Test file removed: src/shared/modules/application/tests/application.test.tsx
14:16:42 (13596) INFO IncrementalDiffer Incremental report:
	Mutants:	38 files changed (+174 -7)
	Tests:		18 files changed (+39 -1)
	Result:		0 of 317 mutant result(s) are reused.
14:16:42 (13596) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		src/main.tsx +1 -1
		src/messages.ts +3 -3
		src/pages/dashboard/dashboard.tsx +0 -1
		src/router.tsx +0 -1
		src/shared/modules/application/application.tsx +0 -1
		src/components/app-badge/AppBadge.tsx +10 -0
		src/components/app-box/AppBox.tsx +1 -0
		src/components/app-button/AppButton.tsx +7 -0
		src/components/app-container/AppContainer.tsx +1 -0
		src/components/app-icon-button/AppIconButton.tsx +1 -0
		src/components/app-link/AppLink.tsx +7 -0
		src/components/app-typography/AppTypography.tsx +11 -0
		src/components/product-card/ProductCard.tsx +1 -0
		src/context/I18nProvider.tsx +1 -0
		src/hooks/use-interval-switcher/useIntervalSwitcher.ts +7 -0
		src/layouts/app-footer/AppFooter.constants.tsx +14 -0
		src/layouts/app-footer/AppFooter.tsx +5 -0
		src/layouts/app-header/AppHeader.tsx +1 -0
		src/layouts/app-header/components/categories/Categories.constants.ts +4 -0
		src/layouts/app-header/components/categories/Categories.tsx +2 -0
		src/layouts/app-header/components/header/Header.tsx +1 -0
		src/layouts/best-sellers/BestSellers.tsx +5 -0
		src/layouts/best-sellers/mock-test-data.ts +8 -0
		src/layouts/intro-banner/IntroBanner.tsx +3 -0
		src/layouts/page-wrapper/PageWrapper.tsx +1 -0
		src/layouts/root-layout/RootLayout.tsx +1 -0
		src/pages/error/ErrorPage.tsx +1 -0
		src/pages/home/HomePage.tsx +1 -0
		src/pages/not-found/NotFoundPage.tsx +1 -0
		src/pages/products/ProductsPage.tsx +1 -0
		src/routes/routes.tsx +6 -0
		src/store/api/appApi.ts +3 -0
		src/store/api/productsApi.ts +11 -0
		src/store/slices/productsSlice.ts +24 -0
		src/store/store.ts +3 -0
		src/utils/cn.ts +10 -0
		src/utils/createUrlPath.ts +13 -0
		src/utils/test-utils.tsx +4 -0
	Tests: 
		src/shared/modules/application/tests/application.test.tsx +0 -1
		src/utils/tests/createUrlPath.test.tsx +8 -0
		src/layouts/best-sellers/BestSellers.test.tsx +4 -0
		src/components/product-card/ProductCard.test.tsx +5 -0
		src/layouts/app-footer/AppFooter.test.jsx +3 -0
		src/components/app-typography/AppTypography.test.tsx +4 -0
		src/components/app-link/AppLink.test.tsx +2 -0
		src/layouts/app-header/components/categories/Categories.test.tsx +1 -0
		src/components/app-badge/AppBadge.test.tsx +2 -0
		src/components/app-button/AppButton.test.tsx +2 -0
		src/hooks/use-interval-switcher/useIntervalSwitcher.test.ts +1 -0
		src/layouts/app-header/AppHeader.test.tsx +1 -0
		src/components/app-container/AppContainer.test.tsx +1 -0
		src/layouts/page-wrapper/PageWrapper.test.tsx +1 -0
		src/layouts/intro-banner/IntroBanner.test.tsx +1 -0
		src/components/app-icon-button/AppIconButton.test.tsx +1 -0
		src/components/app-box/AppBox.test.tsx +1 -0
		src/layouts/app-header/components/header/Header.test.tsx +1 -0
14:16:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 14648
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (618802 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:42 (13596) DEBUG ChildProcessProxy Kill 14648
14:16:42 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(renders Header and Categories components)|(Header Component render the logo)"}
14:16:42 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:42 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:16:56 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:16:56 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (619228 ms) for a test run
14:17:01 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (622228 ms) for a test run
14:17:01 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-box\\AppBox.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(Categories component render number length of categories)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(AppBox renders AppBox with children)|(Header Component render the logo)"}
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:01 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:01 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:01 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:01 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:08 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:08 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:14 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:15 (13596) DEBUG TimeoutDecorator Starting timeout timer (620686 ms) for a test run
14:17:14 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:15 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:20 (13596) DEBUG TimeoutDecorator Starting timeout timer (620566 ms) for a test run
14:17:20 (13596) DEBUG TimeoutDecorator Starting timeout timer (617992 ms) for a test run
14:17:20 (13596) DEBUG TimeoutDecorator Starting timeout timer (617740 ms) for a test run
14:17:20 (13596) DEBUG TimeoutDecorator Starting timeout timer (617740 ms) for a test run
14:17:20 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-container\\AppContainer.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppBox renders AppContainer with children)|(PageWrapper should render children)|(IntroBanner should render IntroBanner component)"}
14:17:20 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-icon-button\\AppIconButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppIconButton renders correctly)"}
14:17:20 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)"}
14:17:20 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)"}
14:17:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (617740 ms) for a test run
14:17:25 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)"}
14:17:30 (13596) DEBUG TimeoutDecorator Starting timeout timer (617740 ms) for a test run
14:17:30 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)"}
14:17:33 (13596) DEBUG TimeoutDecorator Starting timeout timer (617740 ms) for a test run
14:17:33 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppLink adds active class when link's pathname is equal to location pathname)"}
14:17:33 (13596) DEBUG TimeoutDecorator Starting timeout timer (620506 ms) for a test run
14:17:33 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppLink renders correctly)|(Categories component render number length of categories)|(renders Header and Categories components)"}
14:17:34 (13596) DEBUG TimeoutDecorator Starting timeout timer (620644 ms) for a test run
14:17:34 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-link\\AppLink.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(renders Header and Categories components)"}
14:17:36 (13596) DEBUG TimeoutDecorator Starting timeout timer (622084 ms) for a test run
14:17:36 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:36 (13596) DEBUG TimeoutDecorator Starting timeout timer (622084 ms) for a test run
14:17:36 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:37 (13596) DEBUG TimeoutDecorator Starting timeout timer (622084 ms) for a test run
14:17:37 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:50 (13596) DEBUG TimeoutDecorator Starting timeout timer (622084 ms) for a test run
14:17:50 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:50 (13596) DEBUG TimeoutDecorator Starting timeout timer (620260 ms) for a test run
14:17:50 (13596) DEBUG TimeoutDecorator Starting timeout timer (622066 ms) for a test run
14:17:50 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render heading as corresponding tags)|(IntroBanner should render IntroBanner component)"}
14:17:50 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:52 (13596) DEBUG TimeoutDecorator Starting timeout timer (622066 ms) for a test run
14:17:52 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:17:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (622066 ms) for a test run
14:17:53 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:18:07 (13596) DEBUG TimeoutDecorator Starting timeout timer (620374 ms) for a test run
14:18:07 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(AppTypography should render caption as <span> by default)|(renders Header and Categories components)|(Header Component render the logo)"}
14:18:08 (13596) DEBUG TimeoutDecorator Starting timeout timer (622342 ms) for a test run
14:18:08 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(Categories component render number length of categories)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:18:09 (13596) DEBUG TimeoutDecorator Starting timeout timer (622342 ms) for a test run
14:18:09 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(Categories component render number length of categories)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:18:20 (13596) DEBUG TimeoutDecorator Starting timeout timer (619384 ms) for a test run
14:18:20 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\components\\product-card\\ProductCard.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)"}
14:18:21 (13596) DEBUG TimeoutDecorator Starting timeout timer (618118 ms) for a test run
14:18:21 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner component)"}
14:18:22 (13596) DEBUG TimeoutDecorator Starting timeout timer (618118 ms) for a test run
14:18:22 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner component)"}
14:18:28 (13596) DEBUG TimeoutDecorator Starting timeout timer (617722 ms) for a test run
14:18:28 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
14:18:29 (13596) DEBUG TimeoutDecorator Starting timeout timer (617722 ms) for a test run
14:18:29 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
14:18:35 (13596) DEBUG TimeoutDecorator Starting timeout timer (617722 ms) for a test run
14:18:35 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
14:18:40 (13596) DEBUG TimeoutDecorator Starting timeout timer (617722 ms) for a test run
14:18:40 (13596) DEBUG TimeoutDecorator Starting timeout timer (618118 ms) for a test run
14:18:40 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)"}
14:18:40 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner component)"}
14:18:41 (13596) DEBUG TimeoutDecorator Starting timeout timer (618646 ms) for a test run
14:18:41 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:18:42 (13596) DEBUG TimeoutDecorator Starting timeout timer (618646 ms) for a test run
14:18:42 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:18:43 (13596) DEBUG TimeoutDecorator Starting timeout timer (618646 ms) for a test run
14:18:43 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:18:44 (13596) DEBUG TimeoutDecorator Starting timeout timer (618646 ms) for a test run
14:18:44 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:18:46 (13596) DEBUG TimeoutDecorator Starting timeout timer (618646 ms) for a test run
14:18:46 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-footer\\AppFooter.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:18:48 (13596) DEBUG TimeoutDecorator Starting timeout timer (618190 ms) for a test run
14:18:48 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\AppHeader.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header and Categories components)"}
14:18:48 (13596) DEBUG TimeoutDecorator Starting timeout timer (618448 ms) for a test run
14:18:48 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\categories\\Categories.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Categories component render number length of categories)|(renders Header and Categories components)"}
14:18:49 (13596) DEBUG TimeoutDecorator Starting timeout timer (618448 ms) for a test run
14:18:49 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\categories\\Categories.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(Categories component render number length of categories)|(renders Header and Categories components)"}
14:18:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (618574 ms) for a test run
14:18:53 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\app-header\\components\\header\\Header.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(renders Header and Categories components)|(Header Component render the logo)"}
14:18:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (618826 ms) for a test run
14:18:53 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
14:18:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (618826 ms) for a test run
14:18:53 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
14:18:57 (13596) DEBUG TimeoutDecorator Starting timeout timer (618826 ms) for a test run
14:18:57 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)"}
14:18:59 (13596) DEBUG TimeoutDecorator Starting timeout timer (618754 ms) for a test run
14:18:59 (13596) DEBUG TimeoutDecorator Starting timeout timer (618754 ms) for a test run
14:18:59 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)"}
14:18:59 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\best-sellers\\BestSellers.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)"}
14:19:00 (13596) DEBUG TimeoutDecorator Starting timeout timer (617998 ms) for a test run
14:19:00 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner component)"}
14:19:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (617998 ms) for a test run
14:19:01 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner component)"}
14:19:01 (13596) DEBUG TimeoutDecorator Starting timeout timer (617998 ms) for a test run
14:19:01 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner component)"}
14:19:03 (13596) DEBUG TimeoutDecorator Starting timeout timer (620014 ms) for a test run
14:19:03 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\layouts\\page-wrapper\\PageWrapper.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(PageWrapper should render children)"}
14:19:07 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:07 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:16 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:16 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:16 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:16 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:19 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:19 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:19 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:19 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:21 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:21 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:22 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:22 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:31 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:31 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:51 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:51 (13596) DEBUG TimeoutDecorator Starting timeout timer (623530 ms) for a test run
14:19:51 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:51 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner component)|(Header Component render the logo)"}
14:19:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (617710 ms) for a test run
14:19:53 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:19:53 (13596) DEBUG TimeoutDecorator Starting timeout timer (617644 ms) for a test run
14:19:53 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:19:54 (13596) DEBUG TimeoutDecorator Starting timeout timer (617644 ms) for a test run
14:19:54 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:18 (13596) DEBUG TimeoutDecorator Starting timeout timer (617644 ms) for a test run
14:20:18 (13596) DEBUG TimeoutDecorator Starting timeout timer (617644 ms) for a test run
14:20:18 (13596) DEBUG TimeoutDecorator Starting timeout timer (617710 ms) for a test run
14:20:18 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:18 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:18 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:18 (13596) DEBUG TimeoutDecorator Starting timeout timer (617710 ms) for a test run
14:20:18 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:19 (13596) DEBUG TimeoutDecorator Starting timeout timer (617710 ms) for a test run
14:20:19 (18092) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL with query parameters correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)|(createUrlPath should handle empty query parameters correctly)|(createUrlPath should handle undefined query parameter values correctly)"}
14:20:24 (13596) DEBUG TimeoutDecorator Starting timeout timer (617614 ms) for a test run
14:20:24 (17868) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (617614 ms) for a test run
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (617614 ms) for a test run
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (617680 ms) for a test run
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (617680 ms) for a test run
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (620500 ms) for a test run
14:20:25 (7672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
14:20:25 (16616) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)"}
14:20:25 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)"}
14:20:25 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\createUrlPath.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly)|(createUrlPath should join base URL without trailing slash and resource path with trailing slash correctly)|(createUrlPath should join base URL and resource path if both have trailing slashes correctly)|(createUrlPath should join base URL, resource path, and query parameters correctly)"}
14:20:25 (8048) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:20:25 (13596) DEBUG TimeoutDecorator Starting timeout timer (620500 ms) for a test run
14:20:25 (16856) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:20:32 (13596) DEBUG TimeoutDecorator Starting timeout timer (620500 ms) for a test run
14:20:32 (5024) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:20:33 (13596) DEBUG TimeoutDecorator Starting timeout timer (620500 ms) for a test run
14:20:33 (16612) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox2729489\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
14:20:41 (13596) DEBUG ClearTextReporter [Killed] LogicalOperator
14:20:41 (13596) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
14:20:41 (13596) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter +           !isRounded || "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:41 (13596) DEBUG ClearTextReporter 
14:20:41 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:41 (13596) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:14:22
14:20:41 (13596) DEBUG ClearTextReporter -   }: AppBadgeProps) => {
14:20:41 (13596) DEBUG ClearTextReporter -     return (
14:20:41 (13596) DEBUG ClearTextReporter -       <Badge
14:20:41 (13596) DEBUG ClearTextReporter -         className={cn(
14:20:41 (13596) DEBUG ClearTextReporter -           "spa-badge",
14:20:41 (13596) DEBUG ClearTextReporter -           `spa-badge__${variant}`,
14:20:41 (13596) DEBUG ClearTextReporter -           `spa-badge__${size}`,
14:20:41 (13596) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter -           !children && "spa-badge__no-children",
14:20:41 (13596) DEBUG ClearTextReporter -           className
14:20:41 (13596) DEBUG ClearTextReporter -         )}
14:20:41 (13596) DEBUG ClearTextReporter -         {...props}
14:20:41 (13596) DEBUG ClearTextReporter -       >
14:20:41 (13596) DEBUG ClearTextReporter -         {children}
14:20:41 (13596) DEBUG ClearTextReporter -       </Badge>
14:20:41 (13596) DEBUG ClearTextReporter -     );
14:20:41 (13596) DEBUG ClearTextReporter -   };
14:20:41 (13596) DEBUG ClearTextReporter +   }: AppBadgeProps) => {};
14:20:41 (13596) DEBUG ClearTextReporter Killed by: AppBadge renders AppBadge component
14:20:41 (13596) DEBUG ClearTextReporter 
14:20:41 (13596) DEBUG ClearTextReporter [Killed] BooleanLiteral
14:20:41 (13596) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
14:20:41 (13596) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter +           isRounded && "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:41 (13596) DEBUG ClearTextReporter 
14:20:41 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:41 (13596) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
14:20:41 (13596) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
14:20:41 (13596) DEBUG ClearTextReporter +           false,
14:20:41 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:41 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
14:20:42 (13596) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
14:20:42 (13596) DEBUG ClearTextReporter +           true,
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-box/AppBox.tsx:6:40
14:20:42 (13596) DEBUG ClearTextReporter -   const AppBox = (props: AppBoxProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return <Box {...props} />;
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const AppBox = (props: AppBoxProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] LogicalOperator
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:22
14:20:42 (13596) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
14:20:42 (13596) DEBUG ClearTextReporter +     const isDisabled = disabled && isLoading;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:22
14:20:42 (13596) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
14:20:42 (13596) DEBUG ClearTextReporter +     const isDisabled = false;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:30:23
14:20:42 (13596) DEBUG ClearTextReporter -   }: AppButtonProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     //@TODO: Create a separate component for the loader
14:20:42 (13596) DEBUG ClearTextReporter -     const loader = isLoading && (
14:20:42 (13596) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <Button
14:20:42 (13596) DEBUG ClearTextReporter -         disabled={isDisabled}
14:20:42 (13596) DEBUG ClearTextReporter -         className={cn(
14:20:42 (13596) DEBUG ClearTextReporter -           "spa-button",
14:20:42 (13596) DEBUG ClearTextReporter -           `spa-button__${variant}`,
14:20:42 (13596) DEBUG ClearTextReporter -           `spa-button__${size}`,
14:20:42 (13596) DEBUG ClearTextReporter -           className
14:20:42 (13596) DEBUG ClearTextReporter -         )}
14:20:42 (13596) DEBUG ClearTextReporter -         {...props}
14:20:42 (13596) DEBUG ClearTextReporter -       >
14:20:42 (13596) DEBUG ClearTextReporter -         {children}
14:20:42 (13596) DEBUG ClearTextReporter -         {loader}
14:20:42 (13596) DEBUG ClearTextReporter -       </Button>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   }: AppButtonProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] LogicalOperator
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
14:20:42 (13596) DEBUG ClearTextReporter -     const loader = isLoading && (
14:20:42 (13596) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter +     const loader = isLoading || <CircularProgress className="spa-loader" size={16} />;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
14:20:42 (13596) DEBUG ClearTextReporter -     const loader = isLoading && (
14:20:42 (13596) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter +     const loader = true;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-container/AppContainer.tsx:5:52
14:20:42 (13596) DEBUG ClearTextReporter -   const AppContainer = (props: AppContainerProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return <Container {...props} />;
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const AppContainer = (props: AppContainerProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-icon-button/AppIconButton.tsx:9:54
14:20:42 (13596) DEBUG ClearTextReporter -   const AppIconButton = (props: AppIconButtonProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return <IconButton {...props} />;
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const AppIconButton = (props: AppIconButtonProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppIconButton renders correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:17:37
14:20:42 (13596) DEBUG ClearTextReporter -     ({ className, ...props }, ref) => {
14:20:42 (13596) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
14:20:42 (13596) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -       return <NavLink ref={ref} className={classNameCallback} {...props} />;
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter +     ({ className, ...props }, ref) => {}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:18:31
14:20:42 (13596) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
14:20:42 (13596) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter +       const classNameCallback = () => undefined;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
14:20:42 (13596) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter +         cn(className, true);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] LogicalOperator
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
14:20:42 (13596) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter +         cn(className, isActive || "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
14:20:42 (13596) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
14:20:42 (13596) DEBUG ClearTextReporter +         cn(className, false);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:31:21
14:20:42 (13596) DEBUG ClearTextReporter -   }: AppLinkProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const component = isNavLink ? NavLinkWrapper : ReactRouterDomLink;
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <MuiLink
14:20:42 (13596) DEBUG ClearTextReporter -         component={component}
14:20:42 (13596) DEBUG ClearTextReporter -         className={cn("spa-link", `spa-link__${variant}`)}
14:20:42 (13596) DEBUG ClearTextReporter -         {...props}
14:20:42 (13596) DEBUG ClearTextReporter -       />
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   }: AppLinkProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter +     if (true) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter +     if (false) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:37:64
14:20:42 (13596) DEBUG ClearTextReporter -   function getDefaultComponentTag(variant: AppTypographyVariant) {
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter -       return variant as HeadingVariant;
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
14:20:42 (13596) DEBUG ClearTextReporter -       return "span";
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return "p";
14:20:42 (13596) DEBUG ClearTextReporter -   }
14:20:42 (13596) DEBUG ClearTextReporter +   function getDefaultComponentTag(variant: AppTypographyVariant) {}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
14:20:42 (13596) DEBUG ClearTextReporter +     if (true) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppTypography should render <p> by default
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] MethodExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter +     if (variant.endsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:32
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
14:20:42 (13596) DEBUG ClearTextReporter -       return variant as HeadingVariant;
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter +     if (variant.startsWith("h")) {}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:57:30
14:20:42 (13596) DEBUG ClearTextReporter -   }: AppTypographyProps<T>) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const TypographyContent = translationKey ? (
14:20:42 (13596) DEBUG ClearTextReporter -       <FormattedMessage id={translationKey} {...translationProps} />
14:20:42 (13596) DEBUG ClearTextReporter -     ) : (
14:20:42 (13596) DEBUG ClearTextReporter -       children
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <Typography
14:20:42 (13596) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
14:20:42 (13596) DEBUG ClearTextReporter -         className={cn(`spa-typography`, `spa-typography__${variant}`, className)}
14:20:42 (13596) DEBUG ClearTextReporter -         {...props}
14:20:42 (13596) DEBUG ClearTextReporter -       >
14:20:42 (13596) DEBUG ClearTextReporter -         {TypographyContent}
14:20:42 (13596) DEBUG ClearTextReporter -       </Typography>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   }: AppTypographyProps<T>) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
14:20:42 (13596) DEBUG ClearTextReporter +     if (false) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:38
14:20:42 (13596) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
14:20:42 (13596) DEBUG ClearTextReporter -       return "span";
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter +     if (variant.startsWith("caption")) {}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] LogicalOperator
14:20:42 (13596) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:66:18
14:20:42 (13596) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
14:20:42 (13596) DEBUG ClearTextReporter +         component={component && getDefaultComponentTag(variant)}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/components/product-card/ProductCard.tsx:13:56
14:20:42 (13596) DEBUG ClearTextReporter -   const ProductCard = ({ product }: ProductCardProps) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppLink key={product.id} to="/">
14:20:42 (13596) DEBUG ClearTextReporter -         <AppBox className="spa-product-card">
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox
14:20:42 (13596) DEBUG ClearTextReporter -             alt={product.name}
14:20:42 (13596) DEBUG ClearTextReporter -             className="spa-product-card__img"
14:20:42 (13596) DEBUG ClearTextReporter -             component="img"
14:20:42 (13596) DEBUG ClearTextReporter -             src={product.image}
14:20:42 (13596) DEBUG ClearTextReporter -           />
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography variant="caption">{product.name}</AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__price">
14:20:42 (13596) DEBUG ClearTextReporter -               {product.price}
14:20:42 (13596) DEBUG ClearTextReporter -             </AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__description">
14:20:42 (13596) DEBUG ClearTextReporter -               {product.description}
14:20:42 (13596) DEBUG ClearTextReporter -             </AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -           </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -         </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppLink>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const ProductCard = ({ product }: ProductCardProps) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:3:70
14:20:42 (13596) DEBUG ClearTextReporter -   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const [currentIndex, setCurrentIndex] = useState(0);
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     useEffect(() => {
14:20:42 (13596) DEBUG ClearTextReporter -       const interval = setInterval(() => {
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter -       }, intervalTime);
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -       return () => clearInterval(interval);
14:20:42 (13596) DEBUG ClearTextReporter -     }, [length, intervalTime]);
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return currentIndex;
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:23
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter +         setCurrentIndex(() => undefined);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:7:40
14:20:42 (13596) DEBUG ClearTextReporter -       const interval = setInterval(() => {
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter -       }, intervalTime);
14:20:42 (13596) DEBUG ClearTextReporter +       const interval = setInterval(() => {}, intervalTime);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:6:19
14:20:42 (13596) DEBUG ClearTextReporter -     useEffect(() => {
14:20:42 (13596) DEBUG ClearTextReporter -       const interval = setInterval(() => {
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter -       }, intervalTime);
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -       return () => clearInterval(interval);
14:20:42 (13596) DEBUG ClearTextReporter -     }, [length, intervalTime]);
14:20:42 (13596) DEBUG ClearTextReporter +     useEffect(() => {}, [length, intervalTime]);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArithmeticOperator
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:38
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex + 1) * length);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArithmeticOperator
14:20:42 (13596) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:39
14:20:42 (13596) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex - 1) % length);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:16:49
14:20:42 (13596) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -           component={item.href ? Link : undefined}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href as string}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter +     const locationItems = locationFooterItems.map(() => undefined);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:15:25
14:20:42 (13596) DEBUG ClearTextReporter -   const AppFooter = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -           component={item.href ? Link : undefined}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href as string}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
14:20:42 (13596) DEBUG ClearTextReporter -         <Link to={item.href}>{item.element}</Link>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           component={Link}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href}
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           component={Link}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href}
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox className="footer" component="footer">
14:20:42 (13596) DEBUG ClearTextReporter -         <PageWrapper>
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox className="footer__container">
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -               <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -                 className="footer__list-title"
14:20:42 (13596) DEBUG ClearTextReporter -                 translationKey="footer.location.title"
14:20:42 (13596) DEBUG ClearTextReporter -                 variant="h3"
14:20:42 (13596) DEBUG ClearTextReporter -               />
14:20:42 (13596) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
14:20:42 (13596) DEBUG ClearTextReporter -                 {locationItems}
14:20:42 (13596) DEBUG ClearTextReporter -               </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -               <AppBox className="footer__socials" component="ul">
14:20:42 (13596) DEBUG ClearTextReporter -                 {socialsItems}
14:20:42 (13596) DEBUG ClearTextReporter -               </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -               <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -                 className="footer__list-title"
14:20:42 (13596) DEBUG ClearTextReporter -                 translationKey="footer.support.title"
14:20:42 (13596) DEBUG ClearTextReporter -                 variant="h3"
14:20:42 (13596) DEBUG ClearTextReporter -               />
14:20:42 (13596) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
14:20:42 (13596) DEBUG ClearTextReporter -                 {customerSupportItems}
14:20:42 (13596) DEBUG ClearTextReporter -               </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -               <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -                 className="footer__list-title"
14:20:42 (13596) DEBUG ClearTextReporter -                 translationKey="footer.policy.title"
14:20:42 (13596) DEBUG ClearTextReporter -                 variant="h3"
14:20:42 (13596) DEBUG ClearTextReporter -               />
14:20:42 (13596) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
14:20:42 (13596) DEBUG ClearTextReporter -                 {policyItems}
14:20:42 (13596) DEBUG ClearTextReporter -               </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -             </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -           </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -         </PageWrapper>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const AppFooter = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:44:45
14:20:42 (13596) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           component={Link}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href}
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter +     const policyItems = policyFooterItems.map(() => undefined);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:27:47
14:20:42 (13596) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
14:20:42 (13596) DEBUG ClearTextReporter -         <Link to={item.href}>{item.element}</Link>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter +     const socialsItems = socialsFooterItems.map(() => undefined);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:33:63
14:20:42 (13596) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="footer__list-item-link"
14:20:42 (13596) DEBUG ClearTextReporter -           component={Link}
14:20:42 (13596) DEBUG ClearTextReporter -           to={item.href}
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey={item.label}
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     ));
14:20:42 (13596) DEBUG ClearTextReporter +     const customerSupportItems = customerSupportFooterItems.map(() => undefined);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-header/components/categories/Categories.tsx:12:23
14:20:42 (13596) DEBUG ClearTextReporter -         {categories.map((category, i) => (
14:20:42 (13596) DEBUG ClearTextReporter -           <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -             className="menu__item"
14:20:42 (13596) DEBUG ClearTextReporter -             key={i}
14:20:42 (13596) DEBUG ClearTextReporter -             data-testid="menu-item"
14:20:42 (13596) DEBUG ClearTextReporter -             component={AppLink}
14:20:42 (13596) DEBUG ClearTextReporter -             to={category.href}
14:20:42 (13596) DEBUG ClearTextReporter -           >
14:20:42 (13596) DEBUG ClearTextReporter -             {category.label}
14:20:42 (13596) DEBUG ClearTextReporter -           </AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -         ))}
14:20:42 (13596) DEBUG ClearTextReporter +         {categories.map(() => undefined)}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Categories component render number length of categories
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-header/components/categories/Categories.tsx:9:26
14:20:42 (13596) DEBUG ClearTextReporter -   const Categories = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox className="menu">
14:20:42 (13596) DEBUG ClearTextReporter -         {categories.map((category, i) => (
14:20:42 (13596) DEBUG ClearTextReporter -           <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -             className="menu__item"
14:20:42 (13596) DEBUG ClearTextReporter -             key={i}
14:20:42 (13596) DEBUG ClearTextReporter -             data-testid="menu-item"
14:20:42 (13596) DEBUG ClearTextReporter -             component={AppLink}
14:20:42 (13596) DEBUG ClearTextReporter -             to={category.href}
14:20:42 (13596) DEBUG ClearTextReporter -           >
14:20:42 (13596) DEBUG ClearTextReporter -             {category.label}
14:20:42 (13596) DEBUG ClearTextReporter -           </AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -         ))}
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const Categories = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Categories component render number length of categories
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-header/components/header/Header.tsx:12:22
14:20:42 (13596) DEBUG ClearTextReporter -   const Header = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     const badgeContentTypography = (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppTypography variant="caption-small">10</AppTypography>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox className="wrapper">
14:20:42 (13596) DEBUG ClearTextReporter -         <AppBox className="header">
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox className="header__logo">
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBox
14:20:42 (13596) DEBUG ClearTextReporter -               component="img"
14:20:42 (13596) DEBUG ClearTextReporter -               src={Logo}
14:20:42 (13596) DEBUG ClearTextReporter -               alt="Logo"
14:20:42 (13596) DEBUG ClearTextReporter -               className="header__logo-image"
14:20:42 (13596) DEBUG ClearTextReporter -             />
14:20:42 (13596) DEBUG ClearTextReporter -           </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox className="header__icons">
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBadge
14:20:42 (13596) DEBUG ClearTextReporter -               size="small"
14:20:42 (13596) DEBUG ClearTextReporter -               variant="dark"
14:20:42 (13596) DEBUG ClearTextReporter -               badgeContent={badgeContentTypography}
14:20:42 (13596) DEBUG ClearTextReporter -             >
14:20:42 (13596) DEBUG ClearTextReporter -               <ShoppingCartIcon fontSize="large" />
14:20:42 (13596) DEBUG ClearTextReporter -             </AppBadge>
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -             <AppButton>
14:20:42 (13596) DEBUG ClearTextReporter -               <AppTypography translationKey="login.label" />
14:20:42 (13596) DEBUG ClearTextReporter -             </AppButton>
14:20:42 (13596) DEBUG ClearTextReporter -           </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -         </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const Header = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/app-header/AppHeader.tsx:4:25
14:20:42 (13596) DEBUG ClearTextReporter -   const AppHeader = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <>
14:20:42 (13596) DEBUG ClearTextReporter -         <Header />
14:20:42 (13596) DEBUG ClearTextReporter -         <Categories />
14:20:42 (13596) DEBUG ClearTextReporter -       </>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const AppHeader = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: renders Header and Categories components
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:11:27
14:20:42 (13596) DEBUG ClearTextReporter -   const BestSellers = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const productCards = products
14:20:42 (13596) DEBUG ClearTextReporter -       ? products
14:20:42 (13596) DEBUG ClearTextReporter -           .slice(0, 5)
14:20:42 (13596) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
14:20:42 (13596) DEBUG ClearTextReporter -       : null;
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <PageWrapper className="spa-best-sellers">
14:20:42 (13596) DEBUG ClearTextReporter -         <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -           className="spa-best-sellers__header"
14:20:42 (13596) DEBUG ClearTextReporter -           translationKey="bestSellers.header"
14:20:42 (13596) DEBUG ClearTextReporter -           variant="h3"
14:20:42 (13596) DEBUG ClearTextReporter -         />
14:20:42 (13596) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__container">{productCards}</AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__button">
14:20:42 (13596) DEBUG ClearTextReporter -           <AppButton size="extra-large">
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography translationKey="bestSellers.button" />
14:20:42 (13596) DEBUG ClearTextReporter -           </AppButton>
14:20:42 (13596) DEBUG ClearTextReporter -         </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -       </PageWrapper>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const BestSellers = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
14:20:42 (13596) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] MethodExpression
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:17:7
14:20:42 (13596) DEBUG ClearTextReporter -       ? products
14:20:42 (13596) DEBUG ClearTextReporter -           .slice(0, 5)
14:20:42 (13596) DEBUG ClearTextReporter +       ? products
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
14:20:42 (13596) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
14:20:42 (13596) DEBUG ClearTextReporter +     if (false) return <AppTypography>Loading...</AppTypography>;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render loader if isLoading
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:19:14
14:20:42 (13596) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
14:20:42 (13596) DEBUG ClearTextReporter +           .map(() => undefined)
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/intro-banner/IntroBanner.tsx:12:27
14:20:42 (13596) DEBUG ClearTextReporter -   const IntroBanner = () => {
14:20:42 (13596) DEBUG ClearTextReporter -     const currentImageIndex = useIntervalSwitcher(introBannerImages.length);
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const badgeContent = (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppTypography variant="body" translationKey="introBanner.badge" />
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppBox
14:20:42 (13596) DEBUG ClearTextReporter -         className="spa-banner-intro"
14:20:42 (13596) DEBUG ClearTextReporter -         style={{
14:20:42 (13596) DEBUG ClearTextReporter -           backgroundImage: `url(${introBannerImages[currentImageIndex]})`
14:20:42 (13596) DEBUG ClearTextReporter -         }}
14:20:42 (13596) DEBUG ClearTextReporter -       >
14:20:42 (13596) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
14:20:42 (13596) DEBUG ClearTextReporter -           <AppBox className="spa-banner-intro__wrapper">
14:20:42 (13596) DEBUG ClearTextReporter -             <AppBadge
14:20:42 (13596) DEBUG ClearTextReporter -               variant="danger"
14:20:42 (13596) DEBUG ClearTextReporter -               size="large"
14:20:42 (13596) DEBUG ClearTextReporter -               isRounded={false}
14:20:42 (13596) DEBUG ClearTextReporter -               badgeContent={badgeContent}
14:20:42 (13596) DEBUG ClearTextReporter -             />
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -               className="spa-banner-intro__heading"
14:20:42 (13596) DEBUG ClearTextReporter -               variant="h1"
14:20:42 (13596) DEBUG ClearTextReporter -               translationKey="introBanner.header"
14:20:42 (13596) DEBUG ClearTextReporter -             />
14:20:42 (13596) DEBUG ClearTextReporter -             <AppTypography
14:20:42 (13596) DEBUG ClearTextReporter -               variant="subtitle2"
14:20:42 (13596) DEBUG ClearTextReporter -               translationKey="introBanner.paragraphfirst"
14:20:42 (13596) DEBUG ClearTextReporter -               className="spa-banner-intro__desctiption"
14:20:42 (13596) DEBUG ClearTextReporter -             />
14:20:42 (13596) DEBUG ClearTextReporter -             <AppButton size="large" className="spa-banner-intro__button">
14:20:42 (13596) DEBUG ClearTextReporter -               <AppTypography variant="body" translationKey="introBanner.button" />
14:20:42 (13596) DEBUG ClearTextReporter -             </AppButton>
14:20:42 (13596) DEBUG ClearTextReporter -           </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -         </AppContainer>
14:20:42 (13596) DEBUG ClearTextReporter -       </AppBox>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const IntroBanner = () => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: IntroBanner should render IntroBanner component
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/layouts/page-wrapper/PageWrapper.tsx:10:6
14:20:42 (13596) DEBUG ClearTextReporter -   ) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return (
14:20:42 (13596) DEBUG ClearTextReporter -       <AppContainer maxWidth="xl" ref={ref} {...rest}>
14:20:42 (13596) DEBUG ClearTextReporter -         {children}
14:20:42 (13596) DEBUG ClearTextReporter -       </AppContainer>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   ) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/cn.ts:1:42
14:20:42 (13596) DEBUG ClearTextReporter -   const cn = (...classNames: unknown[]) => {
14:20:42 (13596) DEBUG ClearTextReporter -     return classNames
14:20:42 (13596) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter -       .join(" ");
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const cn = (...classNames: unknown[]) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/utils/cn.ts:3:13
14:20:42 (13596) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter +       .filter(() => undefined)
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/cn.ts:3:28
14:20:42 (13596) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter +       .filter((className) => false)
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] EqualityOperator
14:20:42 (13596) DEBUG ClearTextReporter src/utils/cn.ts:3:61
14:20:42 (13596) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter +       .filter((className) => typeof className === "string" && className === "")
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] EqualityOperator
14:20:42 (13596) DEBUG ClearTextReporter src/utils/cn.ts:3:28
14:20:42 (13596) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter +       .filter((className) => typeof className !== "string" && className !== "")
14:20:42 (13596) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:4:51
14:20:42 (13596) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
14:20:42 (13596) DEBUG ClearTextReporter -       if (value) {
14:20:42 (13596) DEBUG ClearTextReporter -         queryParams.append(key, value);
14:20:42 (13596) DEBUG ClearTextReporter -       }
14:20:42 (13596) DEBUG ClearTextReporter -     });
14:20:42 (13596) DEBUG ClearTextReporter +     Object.entries(query).forEach(([key, value]) => {});
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
14:20:42 (13596) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
14:20:42 (13596) DEBUG ClearTextReporter +     while (false) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
14:20:42 (13596) DEBUG ClearTextReporter -       if (value) {
14:20:42 (13596) DEBUG ClearTextReporter +       if (true) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should handle empty query parameters correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:16
14:20:42 (13596) DEBUG ClearTextReporter -       if (value) {
14:20:42 (13596) DEBUG ClearTextReporter -         queryParams.append(key, value);
14:20:42 (13596) DEBUG ClearTextReporter -       }
14:20:42 (13596) DEBUG ClearTextReporter +       if (value) {}
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:1:68
14:20:42 (13596) DEBUG ClearTextReporter -   const createQueryParamsString = (query: Record<string, string>) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const queryParams = new URLSearchParams();
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
14:20:42 (13596) DEBUG ClearTextReporter -       if (value) {
14:20:42 (13596) DEBUG ClearTextReporter -         queryParams.append(key, value);
14:20:42 (13596) DEBUG ClearTextReporter -       }
14:20:42 (13596) DEBUG ClearTextReporter -     });
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return queryParams.toString();
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   const createQueryParamsString = (query: Record<string, string>) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ConditionalExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
14:20:42 (13596) DEBUG ClearTextReporter -       if (value) {
14:20:42 (13596) DEBUG ClearTextReporter +       if (false) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:13:72
14:20:42 (13596) DEBUG ClearTextReporter -   export const createUrlPath = (URL: string, params = "", query = {}) => {
14:20:42 (13596) DEBUG ClearTextReporter -     let trimmedUrl = URL;
14:20:42 (13596) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
14:20:42 (13596) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     const queryParams = createQueryParamsString(query);
14:20:42 (13596) DEBUG ClearTextReporter -     const queryParamsString = queryParams ? `?${queryParams}` : "";
14:20:42 (13596) DEBUG ClearTextReporter -     const paramsString = params ? `/${params.replace(/^\/+/g, "")}` : "";
14:20:42 (13596) DEBUG ClearTextReporter -   
14:20:42 (13596) DEBUG ClearTextReporter -     return `${trimmedUrl}${paramsString}${queryParamsString}`;
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   export const createUrlPath = (URL: string, params = "", query = {}) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] MethodExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
14:20:42 (13596) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
14:20:42 (13596) DEBUG ClearTextReporter +     while (trimmedUrl.startsWith("/")) {
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] UnaryOperator
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:38
14:20:42 (13596) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
14:20:42 (13596) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl.slice(0, +1);
14:20:42 (13596) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Timeout] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:36
14:20:42 (13596) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
14:20:42 (13596) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
14:20:42 (13596) DEBUG ClearTextReporter -     }
14:20:42 (13596) DEBUG ClearTextReporter +     while (trimmedUrl.endsWith("/")) {}
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Timeout] MethodExpression
14:20:42 (13596) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:18
14:20:42 (13596) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
14:20:42 (13596) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl;
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ObjectLiteral
14:20:42 (13596) DEBUG ClearTextReporter src/utils/test-utils.tsx:21:28
14:20:42 (13596) DEBUG ClearTextReporter -       store = configureStore({
14:20:42 (13596) DEBUG ClearTextReporter -         reducer: productsReducer,
14:20:42 (13596) DEBUG ClearTextReporter -         preloadedState,
14:20:42 (13596) DEBUG ClearTextReporter -       }),
14:20:42 (13596) DEBUG ClearTextReporter +       store = configureStore({}),
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] BlockStatement
14:20:42 (13596) DEBUG ClearTextReporter src/utils/test-utils.tsx:27:6
14:20:42 (13596) DEBUG ClearTextReporter -   ) => {
14:20:42 (13596) DEBUG ClearTextReporter -     const Wrapper = ({ children }: { children?: ReactNode }) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <Provider store={store}>
14:20:42 (13596) DEBUG ClearTextReporter -         <BrowserRouter>
14:20:42 (13596) DEBUG ClearTextReporter -           <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
14:20:42 (13596) DEBUG ClearTextReporter -         </BrowserRouter>
14:20:42 (13596) DEBUG ClearTextReporter -       </Provider>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
14:20:42 (13596) DEBUG ClearTextReporter -   };
14:20:42 (13596) DEBUG ClearTextReporter +   ) => {};
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ArrowFunction
14:20:42 (13596) DEBUG ClearTextReporter src/utils/test-utils.tsx:28:19
14:20:42 (13596) DEBUG ClearTextReporter -     const Wrapper = ({ children }: { children?: ReactNode }) => (
14:20:42 (13596) DEBUG ClearTextReporter -       <Provider store={store}>
14:20:42 (13596) DEBUG ClearTextReporter -         <BrowserRouter>
14:20:42 (13596) DEBUG ClearTextReporter -           <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
14:20:42 (13596) DEBUG ClearTextReporter -         </BrowserRouter>
14:20:42 (13596) DEBUG ClearTextReporter -       </Provider>
14:20:42 (13596) DEBUG ClearTextReporter -     );
14:20:42 (13596) DEBUG ClearTextReporter +     const Wrapper = () => undefined;
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG ClearTextReporter [Killed] ObjectLiteral
14:20:42 (13596) DEBUG ClearTextReporter src/utils/test-utils.tsx:35:21
14:20:42 (13596) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
14:20:42 (13596) DEBUG ClearTextReporter +     return render(ui, {});
14:20:42 (13596) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
14:20:42 (13596) DEBUG ClearTextReporter 
14:20:42 (13596) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
14:20:42 (13596) DEBUG JsonReporter Using relative path reports\stryker\stryker.json
14:20:42 (13596) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
14:20:42 (13596) INFO JsonReporter Your report can be found at: file:///D:/Store_internship/spa-orders/code/reports/stryker/stryker.json
14:20:42 (13596) INFO HtmlReporter Your report can be found at: file:///D:/Store_internship/spa-orders/code/reports/stryker/stryker.html
14:20:42 (13596) INFO MutationTestExecutor Done in 4 minutes 29 seconds.
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 17868
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 18092
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 8048
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 7672
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 5024
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 16616
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 16612
14:20:42 (13596) DEBUG ChildProcessProxy Disposing of worker process 16856
14:20:42 (13596) DEBUG ChildProcessProxy Kill 18092
14:20:42 (13596) DEBUG ChildProcessProxy Kill 8048
14:20:42 (13596) DEBUG ChildProcessProxy Kill 17868
14:20:42 (13596) DEBUG ChildProcessProxy Kill 7672
14:20:42 (13596) DEBUG ChildProcessProxy Kill 5024
14:20:42 (13596) DEBUG ChildProcessProxy Kill 16856
14:20:42 (13596) DEBUG ChildProcessProxy Kill 16612
14:20:42 (13596) DEBUG ChildProcessProxy Kill 16616
14:20:43 (13596) DEBUG TemporaryDirectory Deleting stryker temp directory D:\Store_internship\spa-orders\code\stryker-tmp
15:46:05 (10640) WARN ProjectReader Glob pattern "!src/**/selectors/*.ts?(x)" did not exclude any files.
15:46:05 (10640) INFO ProjectReader Found 43 of 368 file(s) to be mutated using incremental report with 317 mutant(s), and 39 test(s).
15:46:05 (10640) DEBUG ProjectReader All input files: [
  "D:\\Store_internship\\spa-orders\\code\\.dockerignore",
  "D:\\Store_internship\\spa-orders\\code\\.env.local",
  "D:\\Store_internship\\spa-orders\\code\\.nvmrc",
  "D:\\Store_internship\\spa-orders\\code\\.prettierrc",
  "D:\\Store_internship\\spa-orders\\code\\config\\.eslintrc",
  "D:\\Store_internship\\spa-orders\\code\\config\\babel.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.esm.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\webpack.config.js",
  "D:\\Store_internship\\spa-orders\\code\\config\\__mocks__\\fileMock.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\base.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\block-navigation.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\clover.xml",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\favicon.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\base.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\block-navigation.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\favicon.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\prettify.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\prettify.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\sort-arrow-sprite.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\sorter.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-badge\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-box\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-container\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-icon-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-link\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\app-typography\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\methods.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\constants\\requests.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\context\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\declaration.d.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\hooks\\use-redux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-baner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-baner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\AppProductsList.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\best-sellers\\mock-test-data.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\messages.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\error\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\home\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\router.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\appApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\productsApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\api\\todosApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\store\\store.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\styles\\muiTheme.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\cn.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\createUrlPath.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov-report\\src\\utils\\test-utils.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\lcov.info",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\prettify.css",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\prettify.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\sort-arrow-sprite.png",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\sorter.js",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\AppBadge.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-badge\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-box\\AppBox.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-box\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-button\\AppButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-container\\AppContainer.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-container\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\AppIconButton.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-icon-button\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\AppLink.types.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-link\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-typography\\AppTypography.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\app-typography\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\product-card\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\components\\product-card\\ProductCard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\methods.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\constants\\requests.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\context\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\context\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\declaration.d.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux\\useRedux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\hooks\\use-redux.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-baner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-baner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\AppBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.constants.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\AppFooter.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-footer\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\AppHeader.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\Categories.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\categories\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\Header.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\components\\header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-header\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\AppProductsList.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\app-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\BestSellers.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\best-sellers\\mock-test-data.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\IntroBanner.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\intro-banner\\messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\page-wrapper\\PageWrapper.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\layouts\\root-layout\\RootLayout.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\messages.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\dashboard.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\dashboard\\index.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\error\\ErrorPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\error\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\home\\HomePage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\home\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\not-found\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\not-found\\NotFoundPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\products\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\pages\\products\\ProductsPage.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\router.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\common-messages\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\I18nProvider.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\application.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\i18n\\index.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\applicationTestExample.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\shared\\modules\\application\\tests\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\appApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\productsApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\api\\todosApi.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\constants.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\productsSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\slices\\todoSlice.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\store\\store.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\styles\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\styles\\muiTheme.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\cn.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\createUrlPath.ts.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\coverage\\src\\utils\\test-utils.tsx.html",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-1.9f9918cff01157fb6c17a43d02c8f5ad.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-2.57f7994259b3e844b5c7874c6a601285.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero-section-img-3.a0c99b8741aa8aa581a49c98e822243e.webp",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\hero_section_img.e133e94506c5204c400199755eb56882.jpg",
  "D:\\Store_internship\\spa-orders\\code\\dist\\assets\\logo.2218cd2de75cc95641ddb83bd1110375.jpeg",
  "D:\\Store_internship\\spa-orders\\code\\dist\\index.html",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.css",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.js",
  "D:\\Store_internship\\spa-orders\\code\\dist\\main.js.LICENSE.txt",
  "D:\\Store_internship\\spa-orders\\code\\Dockerfile",
  "D:\\Store_internship\\spa-orders\\code\\eslint.config.mjs",
  "D:\\Store_internship\\spa-orders\\code\\nginx.conf",
  "D:\\Store_internship\\spa-orders\\code\\package-lock.json",
  "D:\\Store_internship\\spa-orders\\code\\package.json",
  "D:\\Store_internship\\spa-orders\\code\\sonar-project.properties",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\icons\\.gitkeep",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-1.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-2.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\home-page\\intro-banner\\hero-section-img-3.webp",
  "D:\\Store_internship\\spa-orders\\code\\src\\assets\\images\\logo.jpeg",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\common-messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.test.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.constants.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.test.jsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\en.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\index.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\messages\\uk.json",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\main.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\messages.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\base\\_reset.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\base\\_root.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_all.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_colors.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_functions.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_mixins.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_typography.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\foundation\\_variables.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\styles\\global.scss",
  "D:\\Store_internship\\spa-orders\\code\\src\\types\\assets.d.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\types\\product.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\test-utils.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\tests\\createUrlPath.test.tsx",
  "D:\\Store_internship\\spa-orders\\code\\stryker.conf.js",
  "D:\\Store_internship\\spa-orders\\code\\tsconfig.json"
]
15:46:05 (10640) DEBUG ProjectReader Files to mutate: [
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-badge\\AppBadge.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-box\\AppBox.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-button\\AppButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-container\\AppContainer.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-icon-button\\AppIconButton.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-link\\AppLink.types.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\app-typography\\AppTypography.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\components\\product-card\\ProductCard.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\methods.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\requests.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\constants\\routes.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\context\\I18nProvider.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\hooks\\use-redux\\useRedux.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.constants.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-footer\\AppFooter.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\AppHeader.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\categories\\Categories.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\app-header\\components\\header\\Header.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\best-sellers\\BestSellers.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\intro-banner\\IntroBanner.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\page-wrapper\\PageWrapper.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\layouts\\root-layout\\RootLayout.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\main.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\messages.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\error\\ErrorPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\home\\HomePage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\not-found\\NotFoundPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\pages\\products\\ProductsPage.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\routes\\routes.tsx",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\appApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\api\\productsApi.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\constants.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\slices\\productsSlice.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\store\\store.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\cn.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\createUrlPath.ts",
  "D:\\Store_internship\\spa-orders\\code\\src\\utils\\test-utils.tsx"
]
15:46:05 (10640) DEBUG TemporaryDirectory Using temp directory "D:\Store_internship\spa-orders\code\stryker-tmp"
15:46:05 (10640) DEBUG Instrumenter Instrumenting 43 source files with mutants
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.tsx (17 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-badge\AppBadge.types.ts (0 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-box\AppBox.tsx (1 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-button\AppButton.tsx (12 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-container\AppContainer.tsx (1 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-icon-button\AppIconButton.tsx (1 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.tsx (12 mutant(s))
15:46:06 (10640) DEBUG Instrumenter Instrumented src\components\app-link\AppLink.types.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\components\app-typography\AppTypography.tsx (18 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\components\product-card\ProductCard.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\constants\methods.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\constants\requests.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\constants\routes.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\context\I18nProvider.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\hooks\use-interval-switcher\useIntervalSwitcher.ts (8 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\hooks\use-redux\useRedux.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-footer\AppFooter.constants.tsx (40 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-footer\AppFooter.tsx (5 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-header\AppHeader.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-header\components\categories\Categories.constants.ts (9 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-header\components\categories\Categories.tsx (2 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\app-header\components\header\Header.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.constants.ts (73 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\best-sellers\BestSellers.tsx (5 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.constants.ts (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\intro-banner\IntroBanner.tsx (4 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\page-wrapper\PageWrapper.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\layouts\root-layout\RootLayout.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\main.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\messages.ts (3 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\pages\error\ErrorPage.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\pages\home\HomePage.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\pages\not-found\NotFoundPage.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\pages\products\ProductsPage.tsx (1 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\routes\routes.tsx (9 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\store\api\appApi.ts (3 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\store\api\productsApi.ts (11 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\store\constants.ts (0 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\store\slices\productsSlice.ts (28 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\store\store.ts (3 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\utils\cn.ts (13 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\utils\createUrlPath.ts (21 mutant(s))
15:46:07 (10640) DEBUG Instrumenter Instrumented src\utils\test-utils.tsx (5 mutant(s))
15:46:07 (10640) INFO Instrumenter Instrumented 43 source file(s) with 316 mutant(s)
15:46:10 (10640) DEBUG TSConfigPreprocessor Rewriting file ProjectFile {
  fs: [FileSystem],
  name: 'D:\\Store_internship\\spa-orders\\code\\tsconfig.json',
  mutate: false
}
15:46:10 (10640) INFO ConcurrencyTokenProvider Creating 8 test runner process(es).
15:46:10 (10640) DEBUG ChildProcessProxy Started CheckerWorker in worker process 0 with pid 5096  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:11 (5096) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:11 (5096) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:11 (10640) DEBUG Sandbox Creating a sandbox for files in D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:12 (10640) DEBUG Sandbox Start symlink node_modules
15:46:12 (10640) DEBUG Sandbox Create symlink from D:\Store_internship\spa-orders\code\node_modules to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718\node_modules
15:46:12 (10640) DEBUG BroadcastReporter Broadcasting to reporters ["clear-text","progress","html","json"]
15:46:12 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 0 with pid 13708  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:12 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 1 with pid 12912  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:15 (13708) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:15 (13708) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:15 (12912) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:15 (12912) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:15 (13708) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:15 (12912) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:15 (13708) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:15 (12912) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:15 (13708) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:15 (13708) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:15 (13708) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:15 (10640) INFO DryRunExecutor Starting initial test run (jest test runner with "perTest" coverage analysis). This may take a while.
15:46:16 (10640) DEBUG DryRunExecutor Using timeout of 1200000 ms.
15:46:16 (10640) DEBUG TimeoutDecorator Starting timeout timer (1200000 ms) for a test run
15:46:16 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 2 with pid 5076  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:16 (12912) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:16 (13708) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.types.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-box\\AppBox.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-button\\AppButton.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-container\\AppContainer.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-icon-button\\AppIconButton.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-link\\AppLink.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-link\\AppLink.types.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-typography\\AppTypography.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\product-card\\ProductCard.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\constants\\methods.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\constants\\requests.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\constants\\routes.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\context\\I18nProvider.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\hooks\\use-redux\\useRedux.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-footer\\AppFooter.constants.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-footer\\AppFooter.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-header\\AppHeader.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-header\\components\\categories\\Categories.constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-header\\components\\categories\\Categories.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\app-header\\components\\header\\Header.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\best-sellers\\BestSellers.constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\best-sellers\\BestSellers.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\intro-banner\\IntroBanner.constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\intro-banner\\IntroBanner.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\page-wrapper\\PageWrapper.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\root-layout\\RootLayout.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\main.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\messages.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\pages\\error\\ErrorPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\pages\\home\\HomePage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\pages\\not-found\\NotFoundPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\pages\\products\\ProductsPage.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\routes\\routes.tsx","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\store\\api\\appApi.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\store\\api\\productsApi.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\store\\constants.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\store\\slices\\productsSlice.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\store\\store.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\createUrlPath.ts","D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testLocationInResults":true}
15:46:16 (12912) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:16 (12912) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:16 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 3 with pid 13672  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:18 (5076) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:18 (5076) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:18 (13672) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:18 (13672) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:19 (5076) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:19 (13672) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:19 (5076) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:19 (13672) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:20 (5076) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:20 (5076) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:20 (5076) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:20 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 4 with pid 18876  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:20 (13672) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:20 (13672) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:20 (13672) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:20 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 5 with pid 9860  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:21 (18876) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:21 (18876) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:21 (9860) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:21 (9860) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:21 (18876) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:21 (9860) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:21 (18876) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:22 (9860) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:22 (18876) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:22 (18876) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:22 (18876) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:22 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 6 with pid 11288  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:22 (9860) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:22 (9860) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:22 (9860) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:22 (10640) DEBUG ChildProcessProxy Started ChildProcessTestRunnerWorker in worker process 7 with pid 15224  (using args --no-compilation-cache --max-old-space-size=8192)
15:46:23 (11288) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:23 (11288) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:23 (15224) DEBUG PluginLoader Loading plugin @stryker-mutator/jest-runner
15:46:23 (15224) DEBUG PluginLoader Loading plugin file:///D:/Store_internship/spa-orders/code/node_modules/@stryker-mutator/core/dist/src/reporters/index.js
15:46:24 (15224) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:24 (11288) DEBUG ChildProcessProxyWorker Changing current working directory for this process to D:\Store_internship\spa-orders\code\stryker-tmp\sandbox4852718
15:46:24 (11288) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:24 (15224) DEBUG jestTestAdapterFactory Detected Jest version 29.7.0
15:46:24 (11288) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:24 (11288) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:24 (11288) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:24 (15224) DEBUG JestTestRunner Running jest with --findRelatedTests flag. Set jest.enableFindRelatedTests to false to run all tests on every mutant.
15:46:24 (15224) DEBUG CustomJestConfigLoader Read config from "..\..\config\jest.config.js" (used native `readInitialOptions` from jest-config).
15:46:24 (15224) DEBUG JestTestRunner Merging file-based config {
  "testEnvironment": "jsdom",
  "testEnvironmentOptions": {
    "url": "http://localhost"
  },
  "rootDir": "D:\\Store_internship\\spa-orders\\code",
  "preset": "ts-jest",
  "testRegex": ".*[-.]test\\.[tj]sx?$",
  "modulePathIgnorePatterns": [
    "<rootDir>/.yarn_cache",
    "<rootDir>/.stryker-tmp"
  ],
  "transform": {
    "\\.(t|j)sx?$": "D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"
  },
  "transformIgnorePatterns": [
    "node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"
  ],
  "modulePaths": [
    "<rootDir>/src/",
    "<rootDir>/test/"
  ],
  "setupFiles": [
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"
  ],
  "setupFilesAfterEnv": [
    "D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js",
    "D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"
  ],
  "moduleNameMapper": {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$": "<rootDir>/config/__mocks__/fileMock.js",
    "\\.scss$": "identity-obj-proxy",
    "@/(.*)": "<rootDir>/src/$1",
    "#/(.*)": "<rootDir>/test/$1",
    "@config/(.*)$": "<rootDir>/config/$1"
  },
  "verbose": true,
  "snapshotFormat": {
    "escapeString": true,
    "printBasicPrototype": true
  },
  "collectCoverage": false,
  "coverageDirectory": "coverage",
  "collectCoverageFrom": [
    "src/**/*.{js,jsx,ts,tsx}",
    "!src/{i18n,services,modules,types,constants}/**/*",
    "!src/**/module.*",
    "!src/**/modules.*",
    "!src/**/routes.*",
    "!src/**/types.*",
    "!src/{main.{js,ts,jsx,tsx},polyfills.js}",
    "!src/{tools,icons,testing}/**/*",
    "!src/{fixtures,test,__tests__,testing}/**/*",
    "!src/**/*.test.*",
    "!src/**/*.spec.*"
  ],
  "coverageReporters": [
    "text",
    "html",
    "lcov",
    "clover"
  ],
  "reporters": [
    "default"
  ],
  "watchPathIgnorePatterns": [
    "<rootDir>/test-report.json"
  ]
}
      with custom config {
  "rootDir": "."
}
      and default (internal) stryker config {
  "collectCoverage": false,
  "verbose": false,
  "notify": false,
  "bail": false,
  "reporters": []
}
15:46:46 (10640) INFO DryRunExecutor Initial test run succeeded. Ran 39 tests in 30 seconds (net 1845 ms, overhead 29079 ms).
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/context/I18nProvider.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/layouts/root-layout/RootLayout.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/main.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/messages.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/pages/error/ErrorPage.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/pages/home/HomePage.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/pages/not-found/NotFoundPage.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/pages/products/ProductsPage.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/routes/routes.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/store/api/appApi.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/store/api/productsApi.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/store/slices/productsSlice.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/store/store.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/components/app-badge/AppBadge.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/components/app-button/AppButton.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/components/app-link/AppLink.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/components/app-typography/AppTypography.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/hooks/use-interval-switcher/useIntervalSwitcher.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-footer/AppFooter.constants.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/components/categories/Categories.constants.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.constants.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.tsx
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/utils/cn.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/utils/createUrlPath.ts
15:46:46 (10640) TRACE IncrementalDiffer Diffing src/utils/test-utils.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-icon-button/AppIconButton.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-box/AppBox.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-container/AppContainer.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/product-card/ProductCard.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-footer/AppFooter.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/AppHeader.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/best-sellers/BestSellers.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/components/header/Header.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/components/categories/Categories.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/page-wrapper/PageWrapper.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/utils/tests/createUrlPath.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/best-sellers/BestSellers.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/product-card/ProductCard.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-footer/AppFooter.test.jsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-typography/AppTypography.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-link/AppLink.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/components/categories/Categories.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-badge/AppBadge.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-button/AppButton.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/hooks/use-interval-switcher/useIntervalSwitcher.test.ts
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/AppHeader.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-container/AppContainer.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/page-wrapper/PageWrapper.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/intro-banner/IntroBanner.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-icon-button/AppIconButton.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/components/app-box/AppBox.test.tsx
15:46:47 (10640) TRACE IncrementalDiffer Diffing src/layouts/app-header/components/header/Header.test.tsx
15:46:47 (10640) INFO IncrementalDiffer Incremental report:
	Mutants:	3 files changed (+12 -78)
	Tests:		1 files changed (+1 -1)
	Result:		126 of 316 mutant result(s) are reused.
15:46:47 (10640) DEBUG IncrementalDiffer Detailed incremental report:
	Mutants: 
		src/layouts/best-sellers/mock-test-data.ts +0 -73
		src/utils/test-utils.tsx +4 -5
		src/layouts/best-sellers/BestSellers.constants.ts +8 -0
	Tests: 
		src/layouts/intro-banner/IntroBanner.test.tsx +1 -1
15:46:47 (10640) DEBUG ChildProcessProxy Disposing of worker process 5096
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (631131 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (631131 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (631131 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (631131 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (634173 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (634173 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (636399 ms) for a test run
15:46:47 (10640) DEBUG TimeoutDecorator Starting timeout timer (629817 ms) for a test run
15:46:47 (10640) DEBUG ChildProcessProxy Kill 5096
15:46:47 (12912) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (5076) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (13672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (18876) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-badge\\AppBadge.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (9860) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (11288) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-button\\AppButton.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (15224) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\components\\app-typography\\AppTypography.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:46:47 (13708) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\hooks\\use-interval-switcher\\useIntervalSwitcher.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay)|(IntroBanner should render IntroBanner title)"}
15:47:01 (10640) DEBUG TimeoutDecorator Starting timeout timer (629649 ms) for a test run
15:47:01 (13708) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner title)"}
15:47:16 (10640) DEBUG TimeoutDecorator Starting timeout timer (629649 ms) for a test run
15:47:17 (10640) DEBUG TimeoutDecorator Starting timeout timer (629649 ms) for a test run
15:47:16 (18876) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner title)"}
15:47:17 (10640) DEBUG TimeoutDecorator Starting timeout timer (638685 ms) for a test run
15:47:17 (12912) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\layouts\\intro-banner\\IntroBanner.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(IntroBanner should render IntroBanner title)"}
15:47:17 (10640) DEBUG TimeoutDecorator Starting timeout timer (638685 ms) for a test run
15:47:17 (13672) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:47:17 (5076) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:47:21 (10640) DEBUG TimeoutDecorator Starting timeout timer (638685 ms) for a test run
15:47:21 (11288) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:47:21 (10640) DEBUG TimeoutDecorator Starting timeout timer (638685 ms) for a test run
15:47:21 (9860) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:47:27 (10640) DEBUG TimeoutDecorator Starting timeout timer (638685 ms) for a test run
15:47:27 (18876) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\cn.ts"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)|(AppTypography should render <p> by default)|(AppTypography should render heading as corresponding tags)|(AppTypography should render caption as <span> by default)|(AppTypography should render translated text if translationKey is provided)|(AppLink renders correctly)|(AppLink adds active class when link's pathname is equal to location pathname)|(Categories component render number length of categories)|(AppBadge renders AppBadge component)|(AppBadge applies the no\\-round class when isRounded is false)|(AppButton renders without crashing)|(AppButton is disabled when isLoading is true)|(renders Header and Categories components)|(IntroBanner should render IntroBanner title)|(Header Component render the logo)"}
15:47:28 (10640) DEBUG TimeoutDecorator Starting timeout timer (634263 ms) for a test run
15:47:28 (12912) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
15:47:34 (10640) DEBUG TimeoutDecorator Starting timeout timer (634263 ms) for a test run
15:47:34 (15224) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
15:47:42 (10640) DEBUG TimeoutDecorator Starting timeout timer (634263 ms) for a test run
15:47:42 (12912) TRACE JestTestRunner Invoking Jest with config {"fileNamesUnderTest":["D:\\Store_internship\\spa-orders\\code\\stryker-tmp\\sandbox4852718\\src\\utils\\test-utils.tsx"],"jestConfig":{"testEnvironment":"D:\\Store_internship\\spa-orders\\code\\node_modules\\@stryker-mutator\\jest-runner\\dist\\src\\jest-plugins\\jest-environment-generic.cjs","testEnvironmentOptions":{"url":"http://localhost"},"rootDir":".","preset":"ts-jest","testRegex":".*[-.]test\\.[tj]sx?$","modulePathIgnorePatterns":["<rootDir>/.yarn_cache","<rootDir>/.stryker-tmp"],"transform":{"\\.(t|j)sx?$":"D:\\Store_internship\\spa-orders\\code\\config\\jest.transformer.js"},"transformIgnorePatterns":["node_modules/(?!(uuid|cross-blob|@react-dnd|react-dnd|dnd-core)/)"],"modulePaths":["<rootDir>/src/","<rootDir>/test/"],"setupFiles":["D:\\Store_internship\\spa-orders\\code\\config\\jest.polyfills.js"],"setupFilesAfterEnv":["D:\\Store_internship\\spa-orders\\code\\config\\setup-tests.js","D:\\Store_internship\\spa-orders\\code\\config\\jest.reacttesting.js"],"moduleNameMapper":{"\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)$":"<rootDir>/config/__mocks__/fileMock.js","\\.scss$":"identity-obj-proxy","@/(.*)":"<rootDir>/src/$1","#/(.*)":"<rootDir>/test/$1","@config/(.*)$":"<rootDir>/config/$1"},"verbose":false,"snapshotFormat":{"escapeString":true,"printBasicPrototype":true},"collectCoverage":false,"coverageDirectory":"coverage","collectCoverageFrom":["src/**/*.{js,jsx,ts,tsx}","!src/{i18n,services,modules,types,constants}/**/*","!src/**/module.*","!src/**/modules.*","!src/**/routes.*","!src/**/types.*","!src/{main.{js,ts,jsx,tsx},polyfills.js}","!src/{tools,icons,testing}/**/*","!src/{fixtures,test,__tests__,testing}/**/*","!src/**/*.test.*","!src/**/*.spec.*"],"coverageReporters":["text","html","lcov","clover"],"reporters":[],"watchPathIgnorePatterns":["<rootDir>/test-report.json"],"notify":false,"bail":false,"globals":{"__strykerGlobalNamespace__":"__stryker__"}},"testNamePattern":"(BestSellers component Should render bestSellers header)|(BestSellers component Should render loader if isLoading)|(BestSellers component Should render product cards when data is available)|(BestSellers component Should render no product cards when data is empty)|(ProductCard component should render product name)|(ProductCard component should render product price)|(ProductCard component should render product description)|(ProductCard component should render product image with correct src and alt attributes)|(ProductCard component should render product link)|(Test Footer component Should render footer component)|(Test Footer component Should render three sections and links lists)|(Test Footer component Should render correct number of items in each group)"}
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:14:22
15:48:01 (10640) DEBUG ClearTextReporter -   }: AppBadgeProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <Badge
15:48:01 (10640) DEBUG ClearTextReporter -         className={cn(
15:48:01 (10640) DEBUG ClearTextReporter -           "spa-badge",
15:48:01 (10640) DEBUG ClearTextReporter -           `spa-badge__${variant}`,
15:48:01 (10640) DEBUG ClearTextReporter -           `spa-badge__${size}`,
15:48:01 (10640) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter -           !children && "spa-badge__no-children",
15:48:01 (10640) DEBUG ClearTextReporter -           className
15:48:01 (10640) DEBUG ClearTextReporter -         )}
15:48:01 (10640) DEBUG ClearTextReporter -         {...props}
15:48:01 (10640) DEBUG ClearTextReporter -       >
15:48:01 (10640) DEBUG ClearTextReporter -         {children}
15:48:01 (10640) DEBUG ClearTextReporter -       </Badge>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   }: AppBadgeProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge renders AppBadge component
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
15:48:01 (10640) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter +           true,
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
15:48:01 (10640) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter +           false,
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] LogicalOperator
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
15:48:01 (10640) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter +           !isRounded || "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BooleanLiteral
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-badge/AppBadge.tsx:21:9
15:48:01 (10640) DEBUG ClearTextReporter -           !isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter +           isRounded && "spa-badge__no-rounded",
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-box/AppBox.tsx:6:40
15:48:01 (10640) DEBUG ClearTextReporter -   const AppBox = (props: AppBoxProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return <Box {...props} />;
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const AppBox = (props: AppBoxProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:30:23
15:48:01 (10640) DEBUG ClearTextReporter -   }: AppButtonProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     //@TODO: Create a separate component for the loader
15:48:01 (10640) DEBUG ClearTextReporter -     const loader = isLoading && (
15:48:01 (10640) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <Button
15:48:01 (10640) DEBUG ClearTextReporter -         disabled={isDisabled}
15:48:01 (10640) DEBUG ClearTextReporter -         className={cn(
15:48:01 (10640) DEBUG ClearTextReporter -           "spa-button",
15:48:01 (10640) DEBUG ClearTextReporter -           `spa-button__${variant}`,
15:48:01 (10640) DEBUG ClearTextReporter -           `spa-button__${size}`,
15:48:01 (10640) DEBUG ClearTextReporter -           className
15:48:01 (10640) DEBUG ClearTextReporter -         )}
15:48:01 (10640) DEBUG ClearTextReporter -         {...props}
15:48:01 (10640) DEBUG ClearTextReporter -       >
15:48:01 (10640) DEBUG ClearTextReporter -         {children}
15:48:01 (10640) DEBUG ClearTextReporter -         {loader}
15:48:01 (10640) DEBUG ClearTextReporter -       </Button>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   }: AppButtonProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:22
15:48:01 (10640) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
15:48:01 (10640) DEBUG ClearTextReporter +     const isDisabled = false;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] LogicalOperator
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:31:22
15:48:01 (10640) DEBUG ClearTextReporter -     const isDisabled = disabled || isLoading;
15:48:01 (10640) DEBUG ClearTextReporter +     const isDisabled = disabled && isLoading;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
15:48:01 (10640) DEBUG ClearTextReporter -     const loader = isLoading && (
15:48:01 (10640) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter +     const loader = true;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] LogicalOperator
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-button/AppButton.tsx:34:18
15:48:01 (10640) DEBUG ClearTextReporter -     const loader = isLoading && (
15:48:01 (10640) DEBUG ClearTextReporter -       <CircularProgress className="spa-loader" size={16} />
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter +     const loader = isLoading || <CircularProgress className="spa-loader" size={16} />;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppButton is disabled when isLoading is true
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-container/AppContainer.tsx:5:52
15:48:01 (10640) DEBUG ClearTextReporter -   const AppContainer = (props: AppContainerProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return <Container {...props} />;
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const AppContainer = (props: AppContainerProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-icon-button/AppIconButton.tsx:9:54
15:48:01 (10640) DEBUG ClearTextReporter -   const AppIconButton = (props: AppIconButtonProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return <IconButton {...props} />;
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const AppIconButton = (props: AppIconButtonProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppIconButton renders correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:17:37
15:48:01 (10640) DEBUG ClearTextReporter -     ({ className, ...props }, ref) => {
15:48:01 (10640) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
15:48:01 (10640) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -       return <NavLink ref={ref} className={classNameCallback} {...props} />;
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter +     ({ className, ...props }, ref) => {}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:18:31
15:48:01 (10640) DEBUG ClearTextReporter -       const classNameCallback = ({ isActive }: NavLinkRenderProps) =>
15:48:01 (10640) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter +       const classNameCallback = () => undefined;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
15:48:01 (10640) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter +         cn(className, true);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
15:48:01 (10640) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter +         cn(className, false);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] LogicalOperator
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:19:21
15:48:01 (10640) DEBUG ClearTextReporter -         cn(className, isActive && "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter +         cn(className, isActive || "spa-link--active");
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-link/AppLink.tsx:31:21
15:48:01 (10640) DEBUG ClearTextReporter -   }: AppLinkProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const component = isNavLink ? NavLinkWrapper : ReactRouterDomLink;
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <MuiLink
15:48:01 (10640) DEBUG ClearTextReporter -         component={component}
15:48:01 (10640) DEBUG ClearTextReporter -         className={cn("spa-link", `spa-link__${variant}`)}
15:48:01 (10640) DEBUG ClearTextReporter -         {...props}
15:48:01 (10640) DEBUG ClearTextReporter -       />
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   }: AppLinkProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:37:64
15:48:01 (10640) DEBUG ClearTextReporter -   function getDefaultComponentTag(variant: AppTypographyVariant) {
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter -       return variant as HeadingVariant;
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
15:48:01 (10640) DEBUG ClearTextReporter -       return "span";
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return "p";
15:48:01 (10640) DEBUG ClearTextReporter -   }
15:48:01 (10640) DEBUG ClearTextReporter +   function getDefaultComponentTag(variant: AppTypographyVariant) {}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter +     if (true) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter +     if (false) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] MethodExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter +     if (variant.endsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:38:32
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("h")) {
15:48:01 (10640) DEBUG ClearTextReporter -       return variant as HeadingVariant;
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter +     if (variant.startsWith("h")) {}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
15:48:01 (10640) DEBUG ClearTextReporter +     if (true) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppTypography should render <p> by default
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
15:48:01 (10640) DEBUG ClearTextReporter +     if (false) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:42:38
15:48:01 (10640) DEBUG ClearTextReporter -     if (variant.startsWith("caption")) {
15:48:01 (10640) DEBUG ClearTextReporter -       return "span";
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter +     if (variant.startsWith("caption")) {}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppTypography should render caption as <span> by default
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:57:30
15:48:01 (10640) DEBUG ClearTextReporter -   }: AppTypographyProps<T>) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const TypographyContent = translationKey ? (
15:48:01 (10640) DEBUG ClearTextReporter -       <FormattedMessage id={translationKey} {...translationProps} />
15:48:01 (10640) DEBUG ClearTextReporter -     ) : (
15:48:01 (10640) DEBUG ClearTextReporter -       children
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <Typography
15:48:01 (10640) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
15:48:01 (10640) DEBUG ClearTextReporter -         className={cn(`spa-typography`, `spa-typography__${variant}`, className)}
15:48:01 (10640) DEBUG ClearTextReporter -         {...props}
15:48:01 (10640) DEBUG ClearTextReporter -       >
15:48:01 (10640) DEBUG ClearTextReporter -         {TypographyContent}
15:48:01 (10640) DEBUG ClearTextReporter -       </Typography>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   }: AppTypographyProps<T>) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] LogicalOperator
15:48:01 (10640) DEBUG ClearTextReporter src/components/app-typography/AppTypography.tsx:66:18
15:48:01 (10640) DEBUG ClearTextReporter -         component={component ?? getDefaultComponentTag(variant)}
15:48:01 (10640) DEBUG ClearTextReporter +         component={component && getDefaultComponentTag(variant)}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/components/product-card/ProductCard.tsx:13:56
15:48:01 (10640) DEBUG ClearTextReporter -   const ProductCard = ({ product }: ProductCardProps) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppLink key={product.id} to="/">
15:48:01 (10640) DEBUG ClearTextReporter -         <AppBox className="spa-product-card">
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox
15:48:01 (10640) DEBUG ClearTextReporter -             alt={product.name}
15:48:01 (10640) DEBUG ClearTextReporter -             className="spa-product-card__img"
15:48:01 (10640) DEBUG ClearTextReporter -             component="img"
15:48:01 (10640) DEBUG ClearTextReporter -             src={product.image}
15:48:01 (10640) DEBUG ClearTextReporter -           />
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography variant="caption">{product.name}</AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__price">
15:48:01 (10640) DEBUG ClearTextReporter -               {product.price}
15:48:01 (10640) DEBUG ClearTextReporter -             </AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography className="spa-product-card__description">
15:48:01 (10640) DEBUG ClearTextReporter -               {product.description}
15:48:01 (10640) DEBUG ClearTextReporter -             </AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -           </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -         </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppLink>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const ProductCard = ({ product }: ProductCardProps) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:3:70
15:48:01 (10640) DEBUG ClearTextReporter -   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const [currentIndex, setCurrentIndex] = useState(0);
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     useEffect(() => {
15:48:01 (10640) DEBUG ClearTextReporter -       const interval = setInterval(() => {
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter -       }, intervalTime);
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -       return () => clearInterval(interval);
15:48:01 (10640) DEBUG ClearTextReporter -     }, [length, intervalTime]);
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return currentIndex;
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const useIntervalSwitcher = (length: number, intervalTime = 6000) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:6:19
15:48:01 (10640) DEBUG ClearTextReporter -     useEffect(() => {
15:48:01 (10640) DEBUG ClearTextReporter -       const interval = setInterval(() => {
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter -       }, intervalTime);
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -       return () => clearInterval(interval);
15:48:01 (10640) DEBUG ClearTextReporter -     }, [length, intervalTime]);
15:48:01 (10640) DEBUG ClearTextReporter +     useEffect(() => {}, [length, intervalTime]);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:7:40
15:48:01 (10640) DEBUG ClearTextReporter -       const interval = setInterval(() => {
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter -       }, intervalTime);
15:48:01 (10640) DEBUG ClearTextReporter +       const interval = setInterval(() => {}, intervalTime);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:23
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter +         setCurrentIndex(() => undefined);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArithmeticOperator
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:38
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex + 1) * length);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArithmeticOperator
15:48:01 (10640) DEBUG ClearTextReporter src/hooks/use-interval-switcher/useIntervalSwitcher.ts:8:39
15:48:01 (10640) DEBUG ClearTextReporter -         setCurrentIndex((prevIndex) => (prevIndex + 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter +         setCurrentIndex((prevIndex) => (prevIndex - 1) % length);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: useIntervalSwitcher renders useIntervalSwitcher correctly with 100ms delay
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:15:25
15:48:01 (10640) DEBUG ClearTextReporter -   const AppFooter = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -           component={item.href ? Link : undefined}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href as string}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
15:48:01 (10640) DEBUG ClearTextReporter -         <Link to={item.href}>{item.element}</Link>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           component={Link}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href}
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           component={Link}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href}
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox className="footer" component="footer">
15:48:01 (10640) DEBUG ClearTextReporter -         <PageWrapper>
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox className="footer__container">
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -               <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -                 className="footer__list-title"
15:48:01 (10640) DEBUG ClearTextReporter -                 translationKey="footer.location.title"
15:48:01 (10640) DEBUG ClearTextReporter -                 variant="h3"
15:48:01 (10640) DEBUG ClearTextReporter -               />
15:48:01 (10640) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
15:48:01 (10640) DEBUG ClearTextReporter -                 {locationItems}
15:48:01 (10640) DEBUG ClearTextReporter -               </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -               <AppBox className="footer__socials" component="ul">
15:48:01 (10640) DEBUG ClearTextReporter -                 {socialsItems}
15:48:01 (10640) DEBUG ClearTextReporter -               </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -               <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -                 className="footer__list-title"
15:48:01 (10640) DEBUG ClearTextReporter -                 translationKey="footer.support.title"
15:48:01 (10640) DEBUG ClearTextReporter -                 variant="h3"
15:48:01 (10640) DEBUG ClearTextReporter -               />
15:48:01 (10640) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
15:48:01 (10640) DEBUG ClearTextReporter -                 {customerSupportItems}
15:48:01 (10640) DEBUG ClearTextReporter -               </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -               <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -                 className="footer__list-title"
15:48:01 (10640) DEBUG ClearTextReporter -                 translationKey="footer.policy.title"
15:48:01 (10640) DEBUG ClearTextReporter -                 variant="h3"
15:48:01 (10640) DEBUG ClearTextReporter -               />
15:48:01 (10640) DEBUG ClearTextReporter -               <AppBox component="ul" className="footer__list">
15:48:01 (10640) DEBUG ClearTextReporter -                 {policyItems}
15:48:01 (10640) DEBUG ClearTextReporter -               </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -             </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -           </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -         </PageWrapper>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const AppFooter = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render footer component
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:16:49
15:48:01 (10640) DEBUG ClearTextReporter -     const locationItems = locationFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -           component={item.href ? Link : undefined}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href as string}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter +     const locationItems = locationFooterItems.map(() => undefined);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:27:47
15:48:01 (10640) DEBUG ClearTextReporter -     const socialsItems = socialsFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__socials-item" key={item.href}>
15:48:01 (10640) DEBUG ClearTextReporter -         <Link to={item.href}>{item.element}</Link>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter +     const socialsItems = socialsFooterItems.map(() => undefined);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:33:63
15:48:01 (10640) DEBUG ClearTextReporter -     const customerSupportItems = customerSupportFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           component={Link}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href}
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter +     const customerSupportItems = customerSupportFooterItems.map(() => undefined);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-footer/AppFooter.tsx:44:45
15:48:01 (10640) DEBUG ClearTextReporter -     const policyItems = policyFooterItems.map((item) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox component="li" className="footer__list-item" key={item.label}>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="footer__list-item-link"
15:48:01 (10640) DEBUG ClearTextReporter -           component={Link}
15:48:01 (10640) DEBUG ClearTextReporter -           to={item.href}
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey={item.label}
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     ));
15:48:01 (10640) DEBUG ClearTextReporter +     const policyItems = policyFooterItems.map(() => undefined);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render correct number of items in each group
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-header/components/categories/Categories.tsx:9:26
15:48:01 (10640) DEBUG ClearTextReporter -   const Categories = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox className="menu">
15:48:01 (10640) DEBUG ClearTextReporter -         {categories.map((category, i) => (
15:48:01 (10640) DEBUG ClearTextReporter -           <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -             className="menu__item"
15:48:01 (10640) DEBUG ClearTextReporter -             key={i}
15:48:01 (10640) DEBUG ClearTextReporter -             data-testid="menu-item"
15:48:01 (10640) DEBUG ClearTextReporter -             component={AppLink}
15:48:01 (10640) DEBUG ClearTextReporter -             to={category.href}
15:48:01 (10640) DEBUG ClearTextReporter -           >
15:48:01 (10640) DEBUG ClearTextReporter -             {category.label}
15:48:01 (10640) DEBUG ClearTextReporter -           </AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -         ))}
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const Categories = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Categories component render number length of categories
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-header/components/categories/Categories.tsx:12:23
15:48:01 (10640) DEBUG ClearTextReporter -         {categories.map((category, i) => (
15:48:01 (10640) DEBUG ClearTextReporter -           <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -             className="menu__item"
15:48:01 (10640) DEBUG ClearTextReporter -             key={i}
15:48:01 (10640) DEBUG ClearTextReporter -             data-testid="menu-item"
15:48:01 (10640) DEBUG ClearTextReporter -             component={AppLink}
15:48:01 (10640) DEBUG ClearTextReporter -             to={category.href}
15:48:01 (10640) DEBUG ClearTextReporter -           >
15:48:01 (10640) DEBUG ClearTextReporter -             {category.label}
15:48:01 (10640) DEBUG ClearTextReporter -           </AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -         ))}
15:48:01 (10640) DEBUG ClearTextReporter +         {categories.map(() => undefined)}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Categories component render number length of categories
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-header/components/header/Header.tsx:12:22
15:48:01 (10640) DEBUG ClearTextReporter -   const Header = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     const badgeContentTypography = (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppTypography variant="caption-small">10</AppTypography>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox className="wrapper">
15:48:01 (10640) DEBUG ClearTextReporter -         <AppBox className="header">
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox className="header__logo">
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBox
15:48:01 (10640) DEBUG ClearTextReporter -               component="img"
15:48:01 (10640) DEBUG ClearTextReporter -               src={Logo}
15:48:01 (10640) DEBUG ClearTextReporter -               alt="Logo"
15:48:01 (10640) DEBUG ClearTextReporter -               className="header__logo-image"
15:48:01 (10640) DEBUG ClearTextReporter -             />
15:48:01 (10640) DEBUG ClearTextReporter -           </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox className="header__icons">
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBadge
15:48:01 (10640) DEBUG ClearTextReporter -               size="small"
15:48:01 (10640) DEBUG ClearTextReporter -               variant="dark"
15:48:01 (10640) DEBUG ClearTextReporter -               badgeContent={badgeContentTypography}
15:48:01 (10640) DEBUG ClearTextReporter -             >
15:48:01 (10640) DEBUG ClearTextReporter -               <ShoppingCartIcon fontSize="large" />
15:48:01 (10640) DEBUG ClearTextReporter -             </AppBadge>
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -             <AppButton>
15:48:01 (10640) DEBUG ClearTextReporter -               <AppTypography translationKey="login.label" />
15:48:01 (10640) DEBUG ClearTextReporter -             </AppButton>
15:48:01 (10640) DEBUG ClearTextReporter -           </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -         </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const Header = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/app-header/AppHeader.tsx:4:25
15:48:01 (10640) DEBUG ClearTextReporter -   const AppHeader = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <>
15:48:01 (10640) DEBUG ClearTextReporter -         <Header />
15:48:01 (10640) DEBUG ClearTextReporter -         <Categories />
15:48:01 (10640) DEBUG ClearTextReporter -       </>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const AppHeader = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: renders Header and Categories components
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:11:27
15:48:01 (10640) DEBUG ClearTextReporter -   const BestSellers = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     const { data: products, isLoading } = useGetProductsQuery();
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const productCards = products
15:48:01 (10640) DEBUG ClearTextReporter -       ? products
15:48:01 (10640) DEBUG ClearTextReporter -           .slice(0, 5)
15:48:01 (10640) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
15:48:01 (10640) DEBUG ClearTextReporter -       : null;
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <PageWrapper className="spa-best-sellers">
15:48:01 (10640) DEBUG ClearTextReporter -         <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -           className="spa-best-sellers__header"
15:48:01 (10640) DEBUG ClearTextReporter -           translationKey="bestSellers.header"
15:48:01 (10640) DEBUG ClearTextReporter -           variant="h3"
15:48:01 (10640) DEBUG ClearTextReporter -         />
15:48:01 (10640) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__container">{productCards}</AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -         <AppBox className="spa-best-sellers__button">
15:48:01 (10640) DEBUG ClearTextReporter -           <AppButton size="extra-large">
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography translationKey="bestSellers.button" />
15:48:01 (10640) DEBUG ClearTextReporter -           </AppButton>
15:48:01 (10640) DEBUG ClearTextReporter -         </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -       </PageWrapper>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const BestSellers = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
15:48:01 (10640) DEBUG ClearTextReporter +     if (true) return <AppTypography>Loading...</AppTypography>;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:14:7
15:48:01 (10640) DEBUG ClearTextReporter -     if (isLoading) return <AppTypography>Loading...</AppTypography>;
15:48:01 (10640) DEBUG ClearTextReporter +     if (false) return <AppTypography>Loading...</AppTypography>;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render loader if isLoading
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] MethodExpression
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:17:7
15:48:01 (10640) DEBUG ClearTextReporter -       ? products
15:48:01 (10640) DEBUG ClearTextReporter -           .slice(0, 5)
15:48:01 (10640) DEBUG ClearTextReporter +       ? products
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/best-sellers/BestSellers.tsx:19:14
15:48:01 (10640) DEBUG ClearTextReporter -           .map((product) => <ProductCard key={product.id} product={product} />)
15:48:01 (10640) DEBUG ClearTextReporter +           .map(() => undefined)
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render product cards when data is available
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/intro-banner/IntroBanner.tsx:12:27
15:48:01 (10640) DEBUG ClearTextReporter -   const IntroBanner = () => {
15:48:01 (10640) DEBUG ClearTextReporter -     const currentImageIndex = useIntervalSwitcher(introBannerImages.length);
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const badgeContent = (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppTypography variant="body" translationKey="introBanner.badge" />
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppBox
15:48:01 (10640) DEBUG ClearTextReporter -         className="spa-banner-intro"
15:48:01 (10640) DEBUG ClearTextReporter -         style={{
15:48:01 (10640) DEBUG ClearTextReporter -           backgroundImage: `url(${introBannerImages[currentImageIndex]})`
15:48:01 (10640) DEBUG ClearTextReporter -         }}
15:48:01 (10640) DEBUG ClearTextReporter -       >
15:48:01 (10640) DEBUG ClearTextReporter -         <AppContainer maxWidth="lg">
15:48:01 (10640) DEBUG ClearTextReporter -           <AppBox className="spa-banner-intro__wrapper">
15:48:01 (10640) DEBUG ClearTextReporter -             <AppBadge
15:48:01 (10640) DEBUG ClearTextReporter -               variant="danger"
15:48:01 (10640) DEBUG ClearTextReporter -               size="large"
15:48:01 (10640) DEBUG ClearTextReporter -               isRounded={false}
15:48:01 (10640) DEBUG ClearTextReporter -               badgeContent={badgeContent}
15:48:01 (10640) DEBUG ClearTextReporter -             />
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -               className="spa-banner-intro__heading"
15:48:01 (10640) DEBUG ClearTextReporter -               variant="h1"
15:48:01 (10640) DEBUG ClearTextReporter -               translationKey="introBanner.header"
15:48:01 (10640) DEBUG ClearTextReporter -             />
15:48:01 (10640) DEBUG ClearTextReporter -             <AppTypography
15:48:01 (10640) DEBUG ClearTextReporter -               variant="subtitle2"
15:48:01 (10640) DEBUG ClearTextReporter -               translationKey="introBanner.paragraphfirst"
15:48:01 (10640) DEBUG ClearTextReporter -               className="spa-banner-intro__desctiption"
15:48:01 (10640) DEBUG ClearTextReporter -             />
15:48:01 (10640) DEBUG ClearTextReporter -             <AppButton size="large" className="spa-banner-intro__button">
15:48:01 (10640) DEBUG ClearTextReporter -               <AppTypography variant="body" translationKey="introBanner.button" />
15:48:01 (10640) DEBUG ClearTextReporter -             </AppButton>
15:48:01 (10640) DEBUG ClearTextReporter -           </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -         </AppContainer>
15:48:01 (10640) DEBUG ClearTextReporter -       </AppBox>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const IntroBanner = () => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: IntroBanner should render IntroBanner title
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/layouts/page-wrapper/PageWrapper.tsx:10:6
15:48:01 (10640) DEBUG ClearTextReporter -   ) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return (
15:48:01 (10640) DEBUG ClearTextReporter -       <AppContainer maxWidth="xl" ref={ref} {...rest}>
15:48:01 (10640) DEBUG ClearTextReporter -         {children}
15:48:01 (10640) DEBUG ClearTextReporter -       </AppContainer>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   ) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: Test Footer component Should render three sections and links lists
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/cn.ts:1:42
15:48:01 (10640) DEBUG ClearTextReporter -   const cn = (...classNames: unknown[]) => {
15:48:01 (10640) DEBUG ClearTextReporter -     return classNames
15:48:01 (10640) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter -       .join(" ");
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const cn = (...classNames: unknown[]) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/utils/cn.ts:3:13
15:48:01 (10640) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter +       .filter(() => undefined)
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/cn.ts:3:28
15:48:01 (10640) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter +       .filter((className) => false)
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppBadge applies the no-round class when isRounded is false
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] EqualityOperator
15:48:01 (10640) DEBUG ClearTextReporter src/utils/cn.ts:3:28
15:48:01 (10640) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter +       .filter((className) => typeof className !== "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] EqualityOperator
15:48:01 (10640) DEBUG ClearTextReporter src/utils/cn.ts:3:61
15:48:01 (10640) DEBUG ClearTextReporter -       .filter((className) => typeof className === "string" && className !== "")
15:48:01 (10640) DEBUG ClearTextReporter +       .filter((className) => typeof className === "string" && className === "")
15:48:01 (10640) DEBUG ClearTextReporter Killed by: AppLink adds active class when link's pathname is equal to location pathname
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:1:68
15:48:01 (10640) DEBUG ClearTextReporter -   const createQueryParamsString = (query: Record<string, string>) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const queryParams = new URLSearchParams();
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
15:48:01 (10640) DEBUG ClearTextReporter -       if (value) {
15:48:01 (10640) DEBUG ClearTextReporter -         queryParams.append(key, value);
15:48:01 (10640) DEBUG ClearTextReporter -       }
15:48:01 (10640) DEBUG ClearTextReporter -     });
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return queryParams.toString();
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   const createQueryParamsString = (query: Record<string, string>) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:4:51
15:48:01 (10640) DEBUG ClearTextReporter -     Object.entries(query).forEach(([key, value]) => {
15:48:01 (10640) DEBUG ClearTextReporter -       if (value) {
15:48:01 (10640) DEBUG ClearTextReporter -         queryParams.append(key, value);
15:48:01 (10640) DEBUG ClearTextReporter -       }
15:48:01 (10640) DEBUG ClearTextReporter -     });
15:48:01 (10640) DEBUG ClearTextReporter +     Object.entries(query).forEach(([key, value]) => {});
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
15:48:01 (10640) DEBUG ClearTextReporter -       if (value) {
15:48:01 (10640) DEBUG ClearTextReporter +       if (true) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should handle empty query parameters correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:9
15:48:01 (10640) DEBUG ClearTextReporter -       if (value) {
15:48:01 (10640) DEBUG ClearTextReporter +       if (false) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:5:16
15:48:01 (10640) DEBUG ClearTextReporter -       if (value) {
15:48:01 (10640) DEBUG ClearTextReporter -         queryParams.append(key, value);
15:48:01 (10640) DEBUG ClearTextReporter -       }
15:48:01 (10640) DEBUG ClearTextReporter +       if (value) {}
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with query parameters correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:13:72
15:48:01 (10640) DEBUG ClearTextReporter -   export const createUrlPath = (URL: string, params = "", query = {}) => {
15:48:01 (10640) DEBUG ClearTextReporter -     let trimmedUrl = URL;
15:48:01 (10640) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
15:48:01 (10640) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const queryParams = createQueryParamsString(query);
15:48:01 (10640) DEBUG ClearTextReporter -     const queryParamsString = queryParams ? `?${queryParams}` : "";
15:48:01 (10640) DEBUG ClearTextReporter -     const paramsString = params ? `/${params.replace(/^\/+/g, "")}` : "";
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return `${trimmedUrl}${paramsString}${queryParamsString}`;
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   export const createUrlPath = (URL: string, params = "", query = {}) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL without trailing slash and resource path without trailing slash correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ConditionalExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
15:48:01 (10640) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
15:48:01 (10640) DEBUG ClearTextReporter +     while (false) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] MethodExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:10
15:48:01 (10640) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
15:48:01 (10640) DEBUG ClearTextReporter +     while (trimmedUrl.startsWith("/")) {
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Timeout] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:15:36
15:48:01 (10640) DEBUG ClearTextReporter -     while (trimmedUrl.endsWith("/")) {
15:48:01 (10640) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
15:48:01 (10640) DEBUG ClearTextReporter -     }
15:48:01 (10640) DEBUG ClearTextReporter +     while (trimmedUrl.endsWith("/")) {}
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Timeout] MethodExpression
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:18
15:48:01 (10640) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
15:48:01 (10640) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl;
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] UnaryOperator
15:48:01 (10640) DEBUG ClearTextReporter src/utils/createUrlPath.ts:16:38
15:48:01 (10640) DEBUG ClearTextReporter -       trimmedUrl = trimmedUrl.slice(0, -1);
15:48:01 (10640) DEBUG ClearTextReporter +       trimmedUrl = trimmedUrl.slice(0, +1);
15:48:01 (10640) DEBUG ClearTextReporter Killed by: createUrlPath should join base URL with trailing slash and resource path without trailing slash correctly
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ObjectLiteral
15:48:01 (10640) DEBUG ClearTextReporter src/utils/test-utils.tsx:35:21
15:48:01 (10640) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
15:48:01 (10640) DEBUG ClearTextReporter +     return render(ui, {});
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] BlockStatement
15:48:01 (10640) DEBUG ClearTextReporter src/utils/test-utils.tsx:21:6
15:48:01 (10640) DEBUG ClearTextReporter -   ) => {
15:48:01 (10640) DEBUG ClearTextReporter -     const store = configureStore({
15:48:01 (10640) DEBUG ClearTextReporter -       reducer,
15:48:01 (10640) DEBUG ClearTextReporter -       preloadedState
15:48:01 (10640) DEBUG ClearTextReporter -     });
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <Provider store={store}>
15:48:01 (10640) DEBUG ClearTextReporter -         <BrowserRouter>
15:48:01 (10640) DEBUG ClearTextReporter -           <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
15:48:01 (10640) DEBUG ClearTextReporter -         </BrowserRouter>
15:48:01 (10640) DEBUG ClearTextReporter -       </Provider>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter -   
15:48:01 (10640) DEBUG ClearTextReporter -     return render(ui, { wrapper: Wrapper, ...renderOptions });
15:48:01 (10640) DEBUG ClearTextReporter -   };
15:48:01 (10640) DEBUG ClearTextReporter +   ) => {};
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ObjectLiteral
15:48:01 (10640) DEBUG ClearTextReporter src/utils/test-utils.tsx:22:32
15:48:01 (10640) DEBUG ClearTextReporter -     const store = configureStore({
15:48:01 (10640) DEBUG ClearTextReporter -       reducer,
15:48:01 (10640) DEBUG ClearTextReporter -       preloadedState
15:48:01 (10640) DEBUG ClearTextReporter -     });
15:48:01 (10640) DEBUG ClearTextReporter +     const store = configureStore({});
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG ClearTextReporter [Killed] ArrowFunction
15:48:01 (10640) DEBUG ClearTextReporter src/utils/test-utils.tsx:27:19
15:48:01 (10640) DEBUG ClearTextReporter -     const Wrapper = ({ children }: PropsWithChildren) => (
15:48:01 (10640) DEBUG ClearTextReporter -       <Provider store={store}>
15:48:01 (10640) DEBUG ClearTextReporter -         <BrowserRouter>
15:48:01 (10640) DEBUG ClearTextReporter -           <StyledEngineProvider injectFirst>{children}</StyledEngineProvider>
15:48:01 (10640) DEBUG ClearTextReporter -         </BrowserRouter>
15:48:01 (10640) DEBUG ClearTextReporter -       </Provider>
15:48:01 (10640) DEBUG ClearTextReporter -     );
15:48:01 (10640) DEBUG ClearTextReporter +     const Wrapper = () => undefined;
15:48:01 (10640) DEBUG ClearTextReporter Killed by: BestSellers component Should render bestSellers header
15:48:01 (10640) DEBUG ClearTextReporter 
15:48:01 (10640) DEBUG HtmlReporter Using file "reports/stryker/stryker.html"
15:48:02 (10640) DEBUG JsonReporter Using relative path reports\stryker\stryker.json
15:48:02 (10640) INFO JsonReporter Your report can be found at: file:///D:/Store_internship/spa-orders/code/reports/stryker/stryker.json
15:48:02 (10640) DEBUG MutationTestReportHelper No breaking threshold configured. Won't fail the build no matter how low your mutation score is. Set `thresholds.break` to change this behavior.
15:48:03 (10640) INFO HtmlReporter Your report can be found at: file:///D:/Store_internship/spa-orders/code/reports/stryker/stryker.html
15:48:03 (10640) INFO MutationTestExecutor Done in 1 minute 58 seconds.
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 13708
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 12912
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 5076
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 13672
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 18876
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 11288
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 9860
15:48:03 (10640) DEBUG ChildProcessProxy Disposing of worker process 15224
15:48:03 (10640) DEBUG ChildProcessProxy Kill 13708
15:48:03 (10640) DEBUG ChildProcessProxy Kill 12912
15:48:03 (10640) DEBUG ChildProcessProxy Kill 5076
15:48:03 (10640) DEBUG ChildProcessProxy Kill 13672
15:48:03 (10640) DEBUG ChildProcessProxy Kill 18876
15:48:03 (10640) DEBUG ChildProcessProxy Kill 11288
15:48:03 (10640) DEBUG ChildProcessProxy Kill 9860
15:48:03 (10640) DEBUG ChildProcessProxy Kill 15224
15:48:04 (10640) DEBUG TemporaryDirectory Deleting stryker temp directory D:\Store_internship\spa-orders\code\stryker-tmp
