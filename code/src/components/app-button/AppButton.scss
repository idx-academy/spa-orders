@import "@design-system";

@mixin button-size($padding, $font-size) {
  padding: spacing(2) spacing($padding);
  font-size: var(--spa-button-font-size, $font-size);
}

@mixin focus-style($color) {
  &:focus {
    outline: 2px solid var(--spa-button-focus-color, $color);
    outline-offset: 2px;
  }
}

@mixin hover-effect($bg-color, $text-color, $border-color: null) {
  &:hover {
    background-color: var(--spa-button-hover-bg-color, $bg-color);
    color: var(--spa-button-hover-text-color, $text-color);
    @if $border-color {
      border-color: var(--spa-button-hover-border-color, $border-color);
    }
  }
}

.spa-button {
  @include focus-style($purple);

  display: inline-flex;
  align-items: center;
  column-gap: spacing(2);
  border-width: 1px;
  border-style: solid;
  border-radius: spacing(5);

  &__contained {
    @include hover-effect($transparent, $purple);

    background-color: var(--spa-button-purple-bg-color, $purple);
    color: var(--spa-button-white-color, $white);
    border-color: var(--spa-button-purple-border-color, $purple);
  }

  &__outlined {
    @include hover-effect($light, $purple);

    background-color: var(--spa-button-transparent-bg-color, $transparent);
    color: var(--spa-button-purple-color, $purple);
    border-color: var(--spa-button-border-color, $purple);
  }

  &__text {
    background-color: var(--spa-button-transparent-bg-color, $transparent);
    color: var(--spa-button-purple-color, $purple);
    border-color: var(--spa-button-transperent-border-color, $transparent);

    .css-8je8zh-MuiTouchRipple-root {
      display: none;
    }

    &:hover {
      text-decoration: underline;
      background-color: var(--spa-button-transparent-bg-color, $transparent);
    }
    &:focus {
      outline: none;
    }
  }

  &__black {
    @include focus-style($black);
    @include hover-effect($white, $black);

    background-color: var(--spa-button-black-bg-color, $black);
    color: var(--spa-button-white-color, $white);
    border-color: var(--spa-button-black-border-color, $black);
  }

  &__white {
    @include focus-style($black);
    @include hover-effect($transparent, $white, $white);

    background-color: var(--spa-button-black-bg-color, $white);
    color: var(--spa-button-black-color, $black);
    border-color: var(--spa-button-transperent-border-color, $transparent);
  }

  &__danger {
    @include focus-style($red);
    @include hover-effect($white, $red);

    background-color: var(--spa-button-bg-color, $red);
    color: var(--spa-button-white-color, $white);
    border-color: var(--spa-button-red-border-color, $red);
  }

  &__small {
    @include button-size(2, $fs-xs);
  }

  &__medium {
    @include button-size(4, $fs-base);
  }

  &__large {
    @include button-size(12, $fs-base);
  }

  &__extra-large {
    @include button-size(20, $fs-base);
  }

  &:disabled {
    background-color: var(--spa-button-light-bg-color, $light);
    color: var(--spa-button-disabled-color, $gray-light);
    border-color: var(--spa-button-transperent-border-color, $transparent);
    pointer-events: none;
  }
}

//@TODO: Create a separate component for the loader
.spa-loader {
  color: var(--spa-loader-color, $gray-light);
}
